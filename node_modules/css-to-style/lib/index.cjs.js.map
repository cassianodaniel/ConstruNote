{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["// Convert a string from kebab-case to camelCase\nconst camelCase = (string) =>\n  string.replace(/\\-(\\w|$)/g, (m, p1) => p1.toUpperCase());\n\nconst convertPropertyName = (prop) => {\n  prop = prop.toLowerCase();\n\n  // Always return 'float' as 'cssFloat'\n  if (prop === 'float') {\n    return 'cssFloat';\n  }\n\n  // Skip CSS variables\n  if (prop.startsWith('--')) {\n    return prop;\n  }\n\n  // Handle `-ms-` prefix to camelCase as msPropertyName, not MsPropertyName\n  if (prop.startsWith('-ms-')) {\n    prop = prop.substr(1);\n  }\n\n  return camelCase(prop);\n};\n\nconst splitDeclarations = (cssText) => {\n  const declarations = [];\n  let capturing;\n  let i = cssText.length;\n  let last = i;\n\n  // Split into declarations by semi-colon (outside quotes or parentheses)\n  while (i-- > -1) {\n    // Capture unescaped quotes\n    if ((cssText[i] === '\"' || cssText[i] === \"'\") && cssText[i - 1] !== '\\\\') {\n      if (!capturing) {\n        capturing = cssText[i];\n      } else if (cssText[i] === capturing) {\n        capturing = false;\n      }\n    }\n    // Start capturing parentheses\n    if (!capturing && cssText[i] === ')') {\n      capturing = cssText[i];\n    }\n    // Stop capturing parentheses\n    if (cssText[i] === '(' && capturing === ')') {\n      capturing = false;\n    }\n    // Split at semi-colon\n    if (i < 0 || (!capturing && cssText[i] === ';')) {\n      declarations.unshift(cssText.slice(i + 1, last));\n      last = i;\n    }\n  }\n\n  return declarations;\n};\n\nconst splitDeclaration = (declaration) => {\n  const i = declaration.indexOf(':');\n  return [declaration.substr(0, i).trim(), declaration.substr(i + 1).trim()];\n};\n\nconst cssToStyle = (cssText) =>\n  splitDeclarations(cssText)\n    .map(splitDeclaration)\n    .filter(([name, value]) => name && value)\n    .reduce((styles, [name, value]) => {\n      styles[convertPropertyName(name)] = value;\n      return styles;\n    }, {});\n\nexport default cssToStyle;\n"],"names":["camelCase","string","replace","m","p1","toUpperCase","convertPropertyName","prop","toLowerCase","startsWith","substr","splitDeclarations","cssText","declarations","capturing","i","length","last","unshift","slice","splitDeclaration","declaration","indexOf","trim","cssToStyle","map","filter","name","value","reduce","styles"],"mappings":"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"}