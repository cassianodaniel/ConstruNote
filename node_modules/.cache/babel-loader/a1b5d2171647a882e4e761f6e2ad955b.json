{"ast":null,"code":"import { invariant } from '../utils';\nimport { ToNumber } from '../../262';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\n\nexport function GetOperands(s) {\n  invariant(typeof s === 'string', \"GetOperands should have been called with a string\");\n  var n = ToNumber(s);\n  invariant(isFinite(n), 'n should be finite');\n  var dp = s.indexOf('.');\n  var iv;\n  var f;\n  var v;\n  var fv = '';\n\n  if (dp === -1) {\n    iv = n;\n    f = 0;\n    v = 0;\n  } else {\n    iv = s.slice(0, dp);\n    fv = s.slice(dp, s.length);\n    f = ToNumber(fv);\n    v = fv.length;\n  }\n\n  var i = Math.abs(ToNumber(iv));\n  var w;\n  var t;\n\n  if (f !== 0) {\n    var ft = fv.replace(/0+$/, '');\n    w = ft.length;\n    t = ToNumber(ft);\n  } else {\n    w = 0;\n    t = 0;\n  }\n\n  return {\n    Number: n,\n    IntegerDigits: i,\n    NumberOfFractionDigits: v,\n    NumberOfFractionDigitsWithoutTrailing: w,\n    FractionDigits: f,\n    FractionDigitsWithoutTrailing: t\n  };\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/PluralRules/GetOperands.js"],"names":["invariant","ToNumber","GetOperands","s","n","isFinite","dp","indexOf","iv","f","v","fv","slice","length","i","Math","abs","w","t","ft","replace","Number","IntegerDigits","NumberOfFractionDigits","NumberOfFractionDigitsWithoutTrailing","FractionDigits","FractionDigitsWithoutTrailing"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA;;;;;AAIA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwB;AAC3BH,EAAAA,SAAS,CAAC,OAAOG,CAAP,KAAa,QAAd,EAAwB,mDAAxB,CAAT;AACA,MAAIC,CAAC,GAAGH,QAAQ,CAACE,CAAD,CAAhB;AACAH,EAAAA,SAAS,CAACK,QAAQ,CAACD,CAAD,CAAT,EAAc,oBAAd,CAAT;AACA,MAAIE,EAAE,GAAGH,CAAC,CAACI,OAAF,CAAU,GAAV,CAAT;AACA,MAAIC,EAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,EAAE,GAAG,EAAT;;AACA,MAAIL,EAAE,KAAK,CAAC,CAAZ,EAAe;AACXE,IAAAA,EAAE,GAAGJ,CAAL;AACAK,IAAAA,CAAC,GAAG,CAAJ;AACAC,IAAAA,CAAC,GAAG,CAAJ;AACH,GAJD,MAKK;AACDF,IAAAA,EAAE,GAAGL,CAAC,CAACS,KAAF,CAAQ,CAAR,EAAWN,EAAX,CAAL;AACAK,IAAAA,EAAE,GAAGR,CAAC,CAACS,KAAF,CAAQN,EAAR,EAAYH,CAAC,CAACU,MAAd,CAAL;AACAJ,IAAAA,CAAC,GAAGR,QAAQ,CAACU,EAAD,CAAZ;AACAD,IAAAA,CAAC,GAAGC,EAAE,CAACE,MAAP;AACH;;AACD,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASf,QAAQ,CAACO,EAAD,CAAjB,CAAR;AACA,MAAIS,CAAJ;AACA,MAAIC,CAAJ;;AACA,MAAIT,CAAC,KAAK,CAAV,EAAa;AACT,QAAIU,EAAE,GAAGR,EAAE,CAACS,OAAH,CAAW,KAAX,EAAkB,EAAlB,CAAT;AACAH,IAAAA,CAAC,GAAGE,EAAE,CAACN,MAAP;AACAK,IAAAA,CAAC,GAAGjB,QAAQ,CAACkB,EAAD,CAAZ;AACH,GAJD,MAKK;AACDF,IAAAA,CAAC,GAAG,CAAJ;AACAC,IAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,SAAO;AACHG,IAAAA,MAAM,EAAEjB,CADL;AAEHkB,IAAAA,aAAa,EAAER,CAFZ;AAGHS,IAAAA,sBAAsB,EAAEb,CAHrB;AAIHc,IAAAA,qCAAqC,EAAEP,CAJpC;AAKHQ,IAAAA,cAAc,EAAEhB,CALb;AAMHiB,IAAAA,6BAA6B,EAAER;AAN5B,GAAP;AAQH","sourcesContent":["import { invariant } from '../utils';\nimport { ToNumber } from '../../262';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\nexport function GetOperands(s) {\n    invariant(typeof s === 'string', \"GetOperands should have been called with a string\");\n    var n = ToNumber(s);\n    invariant(isFinite(n), 'n should be finite');\n    var dp = s.indexOf('.');\n    var iv;\n    var f;\n    var v;\n    var fv = '';\n    if (dp === -1) {\n        iv = n;\n        f = 0;\n        v = 0;\n    }\n    else {\n        iv = s.slice(0, dp);\n        fv = s.slice(dp, s.length);\n        f = ToNumber(fv);\n        v = fv.length;\n    }\n    var i = Math.abs(ToNumber(iv));\n    var w;\n    var t;\n    if (f !== 0) {\n        var ft = fv.replace(/0+$/, '');\n        w = ft.length;\n        t = ToNumber(ft);\n    }\n    else {\n        w = 0;\n        t = 0;\n    }\n    return {\n        Number: n,\n        IntegerDigits: i,\n        NumberOfFractionDigits: v,\n        NumberOfFractionDigitsWithoutTrailing: w,\n        FractionDigits: f,\n        FractionDigitsWithoutTrailing: t,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}