{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatList.tsx\";\nimport React from \"react\";\nimport { Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\"; //simplebar\n\nimport SimpleBar from \"simplebar-react\"; //context\n\nimport { useChat } from \"./../contexts/ChatContext\"; //alias\n\nconst ChatList = ({\n  recentChatList\n}) => {\n  const {\n    activeChat,\n    openChat,\n    setShowChat\n  } = useChat();\n  let unreadMessages = 0;\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setShowChat(true);\n  };\n\n  return /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"chat-message-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled chat-list chat-user-list\",\n    id: \"chat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, recentChatList.map((chat, key) => /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    id: \"conversation\" + key,\n    className: `${chat.isTyping ? \"typing\" : \"\"} ${chat.id === activeChat.id ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openChatAction(chat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, !chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, chat.name.charAt(0))), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, \"typing\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }\n  }) : null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }\n  }) : null, chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1].message : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, chat.messages && chat.messages.length > 0 ? moment(chat.messages[chat.messages.length - 1].time).format(\"HH:mm\") : null), chat.unRead && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, chat.messages.forEach(messages => {\n    if (messages.readStatus === \"UNREAD\") {\n      unreadMessages++;\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"oi\")))))))));\n};\n\nexport default ChatList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatList.tsx"],"names":["React","Media","Link","moment","SimpleBar","useChat","ChatList","recentChatList","activeChat","openChat","setShowChat","unreadMessages","openChatAction","chat","maxHeight","map","key","isTyping","id","profilePicture","status","name","charAt","messages","length","isImageMessage","isFileMessage","message","time","format","unRead","forEach","readStatus"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Media } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n//simplebar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//context\r\nimport { useChat } from \"./../contexts/ChatContext\";\r\n\r\n//alias\r\nimport IChat from \"../alias/IChat\";\r\nimport { chats } from \"../data/chat\";\r\nimport Item from \"antd/lib/list/Item\";\r\n\r\ninterface IProps {\r\n  recentChatList: IChat[];\r\n}\r\n\r\nconst ChatList: React.FC<IProps> = ({ recentChatList }) => {\r\n  const { activeChat, openChat, setShowChat } = useChat();\r\n  let unreadMessages = 0;\r\n\r\n  const openChatAction = (chat: IChat) => {\r\n    openChat(chat);\r\n    setShowChat(true);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <SimpleBar style={{ maxHeight: \"100%\" }} className=\"chat-message-list\">\r\n      <ul className=\"list-unstyled chat-list chat-user-list\" id=\"chat-list\">\r\n        {recentChatList.map((chat, key) => (\r\n          <li\r\n            key={key}\r\n            id={\"conversation\" + key}\r\n            className={`${chat.isTyping ? \"typing\" : \"\"} ${\r\n              chat.id === activeChat.id ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <Link to=\"#\" onClick={() => openChatAction(chat)}>\r\n              <Media>\r\n                {!chat.profilePicture ? (\r\n                  <div\r\n                    className={\r\n                      \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                    }\r\n                  >\r\n                    <div className=\"avatar-xs\">\r\n                      <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                        {chat.name.charAt(0)}\r\n                      </span>\r\n                    </div>\r\n                    {chat.status && <span className=\"user-status\"></span>}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className={\r\n                      \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                    }\r\n                  >\r\n                    <img\r\n                      src={chat.profilePicture}\r\n                      className=\"rounded-circle avatar-xs\"\r\n                      alt=\"chatvia\"\r\n                    />\r\n                    {chat.status && <span className=\"user-status\"></span>}\r\n                  </div>\r\n                )}\r\n\r\n                <Media body className=\"overflow-hidden\">\r\n                  <h5 className=\"text-truncate font-size-15 mb-1\">\r\n                    {chat.name}\r\n                  </h5>\r\n                  <p className=\"chat-user-message text-truncate mb-0\">\r\n                    {chat.isTyping ? (\r\n                      <>\r\n                        typing\r\n                        <span className=\"animate-typing\">\r\n                          <span className=\"dot ml-1\"></span>\r\n                          <span className=\"dot ml-1\"></span>\r\n                          <span className=\"dot ml-1\"></span>\r\n                        </span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        {chat.messages &&\r\n                        chat.messages.length > 0 &&\r\n                        chat.messages[chat.messages.length - 1]\r\n                          .isImageMessage === true ? (\r\n                          <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                        ) : null}\r\n                        {chat.messages &&\r\n                        chat.messages.length > 0 &&\r\n                        chat.messages[chat.messages.length - 1]\r\n                          .isFileMessage === true ? (\r\n                          <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                        ) : null}\r\n                        {chat.messages && chat.messages.length > 0\r\n                          ? chat.messages[chat.messages.length - 1].message\r\n                          : null}\r\n                      </>\r\n                    )}\r\n                  </p>\r\n                </Media>\r\n                <div className=\"font-size-11\">\r\n                  {chat.messages && chat.messages.length > 0\r\n                    ? moment(\r\n                        chat.messages[chat.messages.length - 1].time\r\n                      ).format(\"HH:mm\")\r\n                    : null}\r\n                </div>\r\n\r\n                \r\n\r\n                {chat.unRead && <div className=\"unread-message\">\r\n                    <span className=\"badge badge-soft-danger badge-pill\">\r\n                      {chat.messages.forEach((messages) => {\r\n                        if(messages.readStatus === \"UNREAD\"){\r\n                          unreadMessages++;\r\n                        }\r\n                        \r\n                      })}\r\n                      <div>oi</div>\r\n                    </span>\r\n                  </div>\r\n                }\r\n\r\n              </Media>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </SimpleBar>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"]},"metadata":{},"sourceType":"module"}