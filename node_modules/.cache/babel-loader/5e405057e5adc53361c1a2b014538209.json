{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\contexts\\\\AuthContext.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    status: \"offline\"\n  });\n  const [changedUserData, setChangedUserData] = useState({\n    email: \"\",\n    name: \"\"\n  });\n  const [changedUserPassword, setChangedUserPassword] = useState({\n    oldpassword: \"\",\n    newpassword: \"\"\n  });\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      changedUserData,\n      setChangedUserData,\n      changedUserPassword,\n      setChangedUserPassword\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/AuthContext.tsx"],"names":["React","createContext","useContext","useState","AuthContext","AuthProvider","children","user","setUser","id","name","email","status","changedUserData","setChangedUserData","changedUserPassword","setChangedUserPassword","oldpassword","newpassword","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAcA,OAAO,MAAMC,WAAW,GAAGH,aAAa,CACtC,EADsC,CAAjC;AAIP,OAAO,MAAMI,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAQ;AAAEM,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,EAAhB;AAAoBC,IAAAA,KAAK,EAAE,EAA3B;AAA+BC,IAAAA,MAAM,EAAE;AAAvC,GAAR,CAAhC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAmB;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaD,IAAAA,IAAI,EAAE;AAAnB,GAAnB,CAAtD;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAsB;AAAEc,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,WAAW,EAAE;AAAhC,GAAtB,CAA9D;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLK,MAAAA,eAHK;AAILC,MAAAA,kBAJK;AAKLC,MAAAA,mBALK;AAMLC,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGV,QAVH,CADF;AAcD,CAnBM;AAqBP,OAAO,SAASa,OAAT,GAAmB;AACxB,SAAOjB,UAAU,CAACE,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport IUser from \"../alias/IUser\";\r\nimport IChangedDataUser from '../alias/IChangedUserData';\r\nimport IUserPasswordChange from \"../alias/IUserPasswordChange\";\r\n\r\ninterface IAuthContextData {\r\n  user: IUser;\r\n  setUser(value: IUser): void;\r\n  changedUserData: IChangedDataUser;\r\n  setChangedUserData(value: IChangedDataUser): void;\r\n  changedUserPassword: IUserPasswordChange,\r\n  setChangedUserPassword(value: IUserPasswordChange): void;\r\n}\r\n\r\nexport const AuthContext = createContext<IAuthContextData>(\r\n  {} as IAuthContextData\r\n);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUser>({ id: \"\", name: \"\", email: \"\", status: \"offline\"});\r\n  const [changedUserData, setChangedUserData] = useState<IChangedDataUser>({ email: \"\", name: \"\"});\r\n  const [changedUserPassword, setChangedUserPassword] = useState<IUserPasswordChange>({ oldpassword: \"\", newpassword: \"\"});\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        changedUserData,\r\n        setChangedUserData,\r\n        changedUserPassword,\r\n        setChangedUserPassword\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}