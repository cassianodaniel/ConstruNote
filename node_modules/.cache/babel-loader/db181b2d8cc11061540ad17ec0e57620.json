{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInput.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Input, Row, Col, UncontrolledTooltip, ButtonDropdown, DropdownToggle, DropdownMenu, Label } from \"reactstrap\";\nimport { Picker, Emoji } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { ReactMic } from \"react-mic\";\nimport ChatInputAttachedFileButton from \"./ChatInputAttachedFileButton\";\nimport { useChat } from \"../contexts/ChatContext\";\n/* import IChat from \"../alias/IChat\"; */\n\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { blobToFile } from \"../helpers/AudioUtils\";\n\nconst ChatInput = () => {\n  const {\n    activeChat,\n    setActiveChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [isOpen, setisOpen] = useState(false);\n  const [record, setRecord] = useState(false);\n  const [deleteAudio, setDeleteAudio] = useState(false);\n  const [audioFile, setAudioFile] = useState(undefined);\n  let inputMessage;\n\n  const toggle = () => setisOpen(!isOpen);\n\n  const handleChange = e => {\n    setTextMessage(e.target.value);\n  };\n\n  const addEmoji = e => {\n    let emoji = e.native;\n    setTextMessage(textMessage + emoji);\n  };\n\n  const onData = recordedBlob => {\n    console.log(\"chunk of real-time data is: \", recordedBlob);\n  };\n\n  const onStop = recordedBlob => {\n    setAudioFile(blobToFile(recordedBlob.blob, `${recordedBlob.blob}.webm`));\n  };\n\n  const onKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      onAddMessage();\n      e.preventDefault();\n    }\n  };\n\n  const handlePaste = e => {\n    e.persist();\n    console.log(e);\n    let files = e.clipboardData.files;\n    console.log(e.clipboardData.getData(\"Text\"));\n    if (files.length === 0) return;\n    let file = files[0];\n\n    if (file.size > 15728640) {\n      alert(\"Tamanho de arquivo \" + file.name + \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      return;\n    } else {\n      onPasteMessage(file);\n    }\n\n    console.log(\"arquivo enviado\");\n  };\n\n  const onPasteMessage = file => {\n    let chat = { ...activeChat\n    };\n    chat.messages.push({\n      id: `${activeChat.messages.length + 1}`,\n      userName: user.name,\n      message: \"Carregando...\",\n      time: \"\",\n      isImageMessage: false,\n      isFileMessage: false,\n      isVideoMessage: false,\n      isAudioMessage: false,\n      fileUrl: \"\",\n      sendFile: file,\n      toUser: activeChat.id,\n      fromUser: user.id,\n      deliverStatus: DeliverStatus.SENDING,\n      readStatus: ReadStatus.UNREAD,\n      deliverTimestamp: \"\",\n      readTimestamp: \"\",\n      content: \"metadata\",\n      contentType: \"type\",\n      isReplyMessage: false,\n      isForwardMessage: false\n    });\n    setActiveChat(chat);\n  };\n\n  const onAddMessage = () => {\n    if (textMessage.trim() !== \"\") {\n      let chat = { ...activeChat\n      };\n      chat.messages.push({\n        id: `${activeChat.messages.length + 1}`,\n        userName: user.name,\n        message: textMessage.trim(),\n        time: \"\",\n        isImageMessage: false,\n        isFileMessage: false,\n        isVideoMessage: false,\n        isAudioMessage: false,\n        fileUrl: \"\",\n        sendFile: undefined,\n        toUser: activeChat.id,\n        fromUser: user.id,\n        deliverStatus: DeliverStatus.SENDING,\n        readStatus: ReadStatus.UNREAD,\n        deliverTimestamp: \"\",\n        readTimestamp: \"\",\n        content: \"metadata\",\n        contentType: \"type\",\n        isReplyMessage: false,\n        isForwardMessage: false\n      });\n      setActiveChat(chat);\n    }\n\n    setTextMessage(\"\");\n  };\n\n  const sendAudio = () => {\n    if (!deleteAudio) {\n      audioFile && onPasteMessage(audioFile);\n    } else {\n      setDeleteAudio(false);\n    }\n  };\n\n  const updateFocus = () => {\n    var _inputMessage;\n\n    (_inputMessage = inputMessage) === null || _inputMessage === void 0 ? void 0 : _inputMessage.focus();\n  };\n\n  useEffect(sendAudio, [audioFile]);\n  useEffect(updateFocus, [activeChat.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 p-lg-4 border-top mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactMic, {\n    record: record,\n    className: `sound-wave ${record ? \"\" : \"d-none\"}`,\n    onStop: onStop,\n    onData: onData,\n    strokeColor: \"#7a7f9a\",\n    backgroundColor: \"#e6ebf5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"inputTextMessage\",\n    innerRef: ref => inputMessage = ref,\n    type: \"textarea\",\n    style: {\n      height: 43,\n      resize: \"none\"\n    },\n    value: textMessage,\n    onKeyPress: onKeyPress,\n    onChange: handleChange,\n    onPaste: handlePaste,\n    className: `form-control form-control-lg bg-light border-light ${record ? \"d-none\" : \"\"}`,\n    placeholder: \"Send message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, textMessage.length > 9900 ? 10000 - textMessage.length + \" caracteres restantes\" : null))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input-links ml-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, !record ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n    className: \"emoji-dropdown\",\n    direction: \"up\",\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: \"emoji\",\n    color: \"link\",\n    className: \"text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-emotion-happy-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdown-menu-lg-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Emoji, {\n    emoji: \"santa\",\n    set: \"apple\",\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"emoji\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, \"Emoji\")) : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"audio\",\n    className: `btn btn-link text-decoration-none font-size-16 btn-lg waves-effect`,\n    onClick: () => {\n      setDeleteAudio(true);\n      setRecord(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-delete-bin-5-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"audio\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 23\n    }\n  }, \"\\xC1udio Stop\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"audio\",\n    className: `btn btn-link text-decoration-none font-size-16 btn-lg waves-effect ${record ? \"text-record\" : \"\"}`,\n    onClick: () => setRecord(!record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, record ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-stop-circle-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-mic-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"audio\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, \"\\xC1udio\")), /*#__PURE__*/React.createElement(ChatInputAttachedFileButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: textMessage.length < 10000 ? \"submit\" : \"button\",\n    color: \"primary\",\n    className: \"font-size-16 btn-lg chat-send waves-effect waves-light\",\n    onClick: () => onAddMessage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-send-plane-2-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }))))))))));\n};\n\nexport default ChatInput;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInput.tsx"],"names":["React","useEffect","useState","Button","Input","Row","Col","UncontrolledTooltip","ButtonDropdown","DropdownToggle","DropdownMenu","Label","Picker","Emoji","ReactMic","ChatInputAttachedFileButton","useChat","DeliverStatus","ReadStatus","useAuth","blobToFile","ChatInput","activeChat","setActiveChat","user","textMessage","setTextMessage","isOpen","setisOpen","record","setRecord","deleteAudio","setDeleteAudio","audioFile","setAudioFile","undefined","inputMessage","toggle","handleChange","e","target","value","addEmoji","emoji","native","onData","recordedBlob","console","log","onStop","blob","onKeyPress","key","shiftKey","onAddMessage","preventDefault","handlePaste","persist","files","clipboardData","getData","length","file","size","alert","name","onPasteMessage","chat","messages","push","id","userName","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","trim","sendAudio","updateFocus","focus","ref","height","resize","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Picker, Emoji } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { ReactMic, ReactMicStopEvent } from \"react-mic\";\r\n\r\nimport ChatInputAttachedFileButton from \"./ChatInputAttachedFileButton\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\n/* import IChat from \"../alias/IChat\"; */\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { blobToFile } from \"../helpers/AudioUtils\";\r\n\r\nconst ChatInput: React.FC = () => {\r\n  const { activeChat, setActiveChat } = useChat();\r\n  const { user } = useAuth();\r\n\r\n  const [textMessage, setTextMessage] = useState(\"\");\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [record, setRecord] = useState(false);\r\n  const [deleteAudio, setDeleteAudio] = useState(false);\r\n  const [audioFile, setAudioFile] = useState<File | undefined>(undefined);\r\n  let inputMessage: HTMLInputElement | null;\r\n  const toggle = () => setisOpen(!isOpen);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTextMessage(e.target.value);\r\n  };\r\n\r\n  const addEmoji = (e: any) => {\r\n    let emoji = e.native;\r\n    setTextMessage(textMessage + emoji);\r\n  };\r\n\r\n  const onData = (recordedBlob: any) => {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  };\r\n\r\n  const onStop = (recordedBlob: ReactMicStopEvent) => {\r\n    setAudioFile(blobToFile(recordedBlob.blob, `${recordedBlob.blob}.webm`));\r\n  };\r\n\r\n  const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      onAddMessage();\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    console.log(e);\r\n    let files = e.clipboardData.files;\r\n    console.log(e.clipboardData.getData(\"Text\"));\r\n\r\n    if (files.length === 0) return;\r\n    let file = files[0];\r\n    if (file.size > 15728640) {\r\n      alert(\r\n        \"Tamanho de arquivo \" +\r\n          file.name +\r\n          \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n      );\r\n      return;\r\n    } else {\r\n      onPasteMessage(file);\r\n    }\r\n    console.log(\"arquivo enviado\");\r\n  };\r\n\r\n  const onPasteMessage = (file: File) => {\r\n    let chat = { ...activeChat };\r\n\r\n    chat.messages.push({\r\n      id: `${activeChat.messages.length + 1}`,\r\n      userName: user.name,\r\n      message: \"Carregando...\",\r\n      time: \"\",\r\n      isImageMessage: false,\r\n      isFileMessage: false,\r\n      isVideoMessage: false,\r\n      isAudioMessage: false,\r\n      fileUrl: \"\",\r\n      sendFile: file,\r\n      toUser: activeChat.id,\r\n      fromUser: user.id,\r\n      deliverStatus: DeliverStatus.SENDING,\r\n      readStatus: ReadStatus.UNREAD,\r\n      deliverTimestamp: \"\",\r\n      readTimestamp: \"\",\r\n      content: \"metadata\",\r\n      contentType: \"type\",\r\n      isReplyMessage: false,\r\n      isForwardMessage: false,\r\n    });\r\n\r\n    setActiveChat(chat);\r\n  };\r\n\r\n  const onAddMessage = () => {\r\n    if (textMessage.trim() !== \"\") {\r\n      let chat = { ...activeChat };\r\n\r\n      chat.messages.push({\r\n        id: `${activeChat.messages.length + 1}`,\r\n        userName: user.name,\r\n        message: textMessage.trim(),\r\n        time: \"\",\r\n        isImageMessage: false,\r\n        isFileMessage: false,\r\n        isVideoMessage: false,\r\n        isAudioMessage: false,\r\n        fileUrl: \"\",\r\n        sendFile: undefined,\r\n        toUser: activeChat.id,\r\n        fromUser: user.id,\r\n        deliverStatus: DeliverStatus.SENDING,\r\n        readStatus: ReadStatus.UNREAD,\r\n        deliverTimestamp: \"\",\r\n        readTimestamp: \"\",\r\n        content: \"metadata\",\r\n        contentType: \"type\",\r\n        isReplyMessage: false,\r\n        isForwardMessage: false,\r\n      });\r\n      setActiveChat(chat);\r\n    }\r\n\r\n    setTextMessage(\"\");\r\n  };\r\n\r\n  const sendAudio = () => {\r\n    if (!deleteAudio) {\r\n      audioFile && onPasteMessage(audioFile);\r\n    } else {\r\n      setDeleteAudio(false);\r\n    }\r\n  };\r\n  const updateFocus = () => {\r\n    inputMessage?.focus();\r\n}\r\n  useEffect(sendAudio, [audioFile]);\r\n  useEffect(updateFocus,[activeChat.id])\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"p-3 p-lg-4 border-top mb-0\">\r\n        <div>\r\n          <Row noGutters>\r\n            <Col>\r\n              <div>\r\n                <ReactMic\r\n                  record={record}\r\n                  className={`sound-wave ${record ? \"\" : \"d-none\"}`}\r\n                  onStop={onStop}\r\n                  onData={onData}\r\n                  strokeColor=\"#7a7f9a\"\r\n                  backgroundColor=\"#e6ebf5\"\r\n                />\r\n                <Input\r\n                  id=\"inputTextMessage\"\r\n                  innerRef={(ref) => inputMessage = ref}\r\n                  type=\"textarea\"\r\n                  style={{ height: 43, resize: \"none\" }}\r\n                  value={textMessage}\r\n                  onKeyPress={onKeyPress}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  className={`form-control form-control-lg bg-light border-light ${\r\n                    record ? \"d-none\" : \"\"\r\n                  }`}\r\n                  placeholder={\"Send message...\"}\r\n                />\r\n                <div\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  {textMessage.length > 9900\r\n                    ? 10000 - textMessage.length + \" caracteres restantes\"\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <div className=\"chat-input-links ml-md-2\">\r\n                <ul className=\"list-inline mb-0\">\r\n                  {!record ? (\r\n                    <li className=\"list-inline-item\">\r\n                      <ButtonDropdown\r\n                        className=\"emoji-dropdown\"\r\n                        direction=\"up\"\r\n                        isOpen={isOpen}\r\n                        toggle={toggle}\r\n                      >\r\n                        <DropdownToggle\r\n                          id=\"emoji\"\r\n                          color=\"link\"\r\n                          className=\"text-decoration-none font-size-16 btn-lg waves-effect\"\r\n                        >\r\n                          <i className=\"ri-emotion-happy-line\"></i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu className=\"dropdown-menu-lg-right\">\r\n                          <Picker set=\"apple\" onSelect={addEmoji} />\r\n                          <Emoji emoji=\"santa\" set=\"apple\" size={16} />\r\n                        </DropdownMenu>\r\n                      </ButtonDropdown>\r\n                      <UncontrolledTooltip target=\"emoji\" placement=\"top\">\r\n                        Emoji\r\n                      </UncontrolledTooltip>\r\n                    </li>\r\n                  ) : (\r\n                    <li className=\"list-inline-item input-file\">\r\n                      <Label\r\n                        id=\"audio\"\r\n                        className={`btn btn-link text-decoration-none font-size-16 btn-lg waves-effect`}\r\n                        onClick={() => {\r\n                          setDeleteAudio(true);\r\n                          setRecord(false);\r\n                        }}\r\n                      >\r\n                        <i className=\"ri-delete-bin-5-line\" />\r\n                      </Label>\r\n                      <UncontrolledTooltip target=\"audio\" placement=\"top\">\r\n                        Ãudio Stop\r\n                      </UncontrolledTooltip>\r\n                    </li>\r\n                  )}\r\n                  <li className=\"list-inline-item input-file\">\r\n                    <Label\r\n                      id=\"audio\"\r\n                      className={`btn btn-link text-decoration-none font-size-16 btn-lg waves-effect ${\r\n                        record ? \"text-record\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRecord(!record)}\r\n                    >\r\n                      {record ? (\r\n                        <i className=\"ri-stop-circle-line\" />\r\n                      ) : (\r\n                        <i className=\"ri-mic-line\" />\r\n                      )}\r\n                    </Label>\r\n                    <UncontrolledTooltip target=\"audio\" placement=\"top\">\r\n                      Ãudio\r\n                    </UncontrolledTooltip>\r\n                  </li>\r\n\r\n                  <ChatInputAttachedFileButton />\r\n\r\n                  <li className=\"list-inline-item\">\r\n                    <Button\r\n                      type={textMessage.length < 10000 ? \"submit\" : \"button\"}\r\n                      color=\"primary\"\r\n                      className=\"font-size-16 btn-lg chat-send waves-effect waves-light\"\r\n                      onClick={() => onAddMessage()}\r\n                    >\r\n                      <i className=\"ri-send-plane-2-fill\"></i>\r\n                    </Button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"]},"metadata":{},"sourceType":"module"}