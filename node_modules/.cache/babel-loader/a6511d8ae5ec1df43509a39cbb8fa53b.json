{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import{Modal,ModalHeader,ModalBody,CardBody,Button,ModalFooter}from\"reactstrap\";import{useModal}from\"../contexts/ModalContext\";import{useContact}from\"./../contexts/ContactContext\";import{useChat}from\"../contexts/ChatContext\";import{useGroup}from\"../contexts/GroupContext\";import{useTranslation}from\"react-i18next\";import SimpleBar from\"simplebar-react\";import SelectMember from\"./SelectMember\";var ModalAddContacts=function ModalAddContacts(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useChat=useChat(),activeChat=_useChat.activeChat;var _useGroup=useGroup(),groups=_useGroup.groups;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedContact=_useState4[0],setSelectedContact=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useContact=useContact(),setToggleAddingMembers=_useContact.setToggleAddingMembers,setCheckedMembers=_useContact.setCheckedMembers,setGroupToInsertMember=_useContact.setGroupToInsertMember;var _useModal=useModal(),showModalAddMember=_useModal.showModalAddMember,setShowModalAddMember=_useModal.setShowModalAddMember;var toggle=function toggle(){if(showModalAddMember){setShowModalAddMember(!showModalAddMember);}};var handleCheckContact=function handleCheckContact(selected,contact){if(selected){var _selected=selectedContact;_selected.push(contact);setSelectedContact(_selected);}else{setSelectedContact(selectedContact.filter(function(sel){if(sel.id===contact.id){return false;}return true;}));}};var inputSearch=useRef(null);useEffect(function(){setTimeout(function(){var _inputSearch$current;return(_inputSearch$current=inputSearch.current)===null||_inputSearch$current===void 0?void 0:_inputSearch$current.focus();},500);},[showModalAddMember]);return/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",isOpen:!!showModalAddMember,centered:true,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},t(\"Add Contacts\")),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(CardBody,{className:\"p-2 border\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pt-2 pb-3 border-bottom\"},/*#__PURE__*/React.createElement(\"input\",{ref:inputSearch,type:\"text\",className:\"form-control mb-3\",id:\"addgroupname-input\",value:search,onChange:function onChange(e){return setSearch(e.target.value);},placeholder:t(\"Search users..\")}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(SimpleBar,{style:{height:\"500px\"}},/*#__PURE__*/React.createElement(SelectMember,{handleCheckContact:handleCheckContact,search:search}))),/*#__PURE__*/React.createElement(ModalFooter,{className:\"border-0\"},/*#__PURE__*/React.createElement(Button,{color:\"default\",onClick:function onClick(){setCheckedMembers([]);toggle();}},t(\"Close\")),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){setToggleAddingMembers(true);toggle();groups.forEach(function(grp){if(grp.groupId===activeChat.groupId){setGroupToInsertMember(grp);setCheckedMembers(selectedContact);}});}},t(\"Add Contacts\"))))));};export default ModalAddContacts;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddMember.tsx"],"names":["React","useEffect","useState","useRef","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","useModal","useContact","useChat","useGroup","useTranslation","SimpleBar","SelectMember","ModalAddContacts","search","setSearch","activeChat","groups","selectedContact","setSelectedContact","t","setToggleAddingMembers","setCheckedMembers","setGroupToInsertMember","showModalAddMember","setShowModalAddMember","toggle","handleCheckContact","selected","contact","push","filter","sel","id","inputSearch","setTimeout","current","focus","e","target","value","height","forEach","grp","groupId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IContact from \"../alias/IContact\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport SelectMember from \"./SelectMember\";\r\n\r\nconst ModalAddContacts: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { activeChat } = useChat();\r\n  const { groups } = useGroup();\r\n\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n\r\n  const { t } = useTranslation();\r\n  const {\r\n    setToggleAddingMembers,\r\n    setCheckedMembers,\r\n    setGroupToInsertMember,\r\n  } = useContact();\r\n\r\n  const { showModalAddMember, setShowModalAddMember } = useModal();\r\n\r\n  const toggle = () => {\r\n    if (showModalAddMember) {\r\n      setShowModalAddMember(!showModalAddMember);\r\n    }\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      let selected = selectedContact;\r\n      selected.push(contact);\r\n      setSelectedContact(selected);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.id === contact.id) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputSearch.current?.focus(), 500);\r\n  }, [showModalAddMember]);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalAddMember}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Add Contacts\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <input\r\n              ref={inputSearch}\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectMember\r\n                handleCheckContact={handleCheckContact}\r\n                search={search}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button\r\n              color=\"default\"\r\n              onClick={() => {\r\n                setCheckedMembers([]);\r\n                toggle();\r\n              }}\r\n            >\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setToggleAddingMembers(true);\r\n                toggle();\r\n                groups.forEach((grp) => {\r\n                  if (grp.groupId === activeChat.groupId) {\r\n                    setGroupToInsertMember(grp);\r\n                    setCheckedMembers(selectedContact);\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              {t(\"Add Contacts\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalAddContacts;\r\n"]},"metadata":{},"sourceType":"module"}