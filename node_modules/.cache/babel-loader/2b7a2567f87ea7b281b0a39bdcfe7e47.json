{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{Formik,Form as FormFormik,Field,ErrorMessage}from\"formik\";import{useTranslation}from\"react-i18next\";import*as yup from\"yup\";import{useModal}from\"./../contexts/ModalContext\";import{useAuth}from\"./../contexts/AuthContext\";import{Modal,ModalHeader,ModalBody,CardBody,Button,ModalFooter}from\"reactstrap\";var ModalEditInfo=function ModalEditInfo(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(),showModalEditInfo=_useModal.showModalEditInfo,setShowModalEditInfo=_useModal.setShowModalEditInfo;var _useAuth=useAuth(),setChangedUserData=_useAuth.setChangedUserData,user=_useAuth.user;var initialValues={name:user.name,email:user.email};var onSubmit=function onSubmit(data){setChangedUserData({name:data.name,email:data.email});setShowModalEditInfo(false);};var close=function close(){return setShowModalEditInfo(false);};var validations=yup.object().shape({name:yup.string().required(t(\"The field is required\")).min(3,t(\"The field must be at least 3 characters long\")),email:yup.string().required(t(\"The field is required\")).email(t(\"The field must be an email\"))});var inputName=useRef(null);useEffect(function(){setTimeout(function(){var _inputName$current;return(_inputName$current=inputName.current)===null||_inputName$current===void 0?void 0:_inputName$current.focus();},500);},[showModalEditInfo]);return/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",isOpen:showModalEditInfo,centered:true},/*#__PURE__*/React.createElement(ModalHeader,{toggle:close},\"Edit personal info\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,onSubmit:onSubmit,validationSchema:validations},/*#__PURE__*/React.createElement(FormFormik,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,t(\"Name\")),/*#__PURE__*/React.createElement(Field,{innerRef:inputName,name:\"name\",className:\"form-control\",placeholder:t(\"Name\")}),/*#__PURE__*/React.createElement(ErrorMessage,{component:\"small\",name:\"name\",className:\"form-text text-danger\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,t(\"Email\")),/*#__PURE__*/React.createElement(Field,{name:\"email\",className:\"form-control\",placeholder:t(\"Email\")}),/*#__PURE__*/React.createElement(ErrorMessage,{component:\"small\",name:t(\"Email\"),className:\"form-text text-danger\"})),/*#__PURE__*/React.createElement(ModalFooter,{className:\"border-0\"},/*#__PURE__*/React.createElement(Button,{color:\"default\",onClick:close},t(\"Close\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\"},t(\"Confirm\"))))))));};export default ModalEditInfo;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalEditInfo.tsx"],"names":["React","useEffect","useRef","Formik","Form","FormFormik","Field","ErrorMessage","useTranslation","yup","useModal","useAuth","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","ModalEditInfo","t","showModalEditInfo","setShowModalEditInfo","setChangedUserData","user","initialValues","name","email","onSubmit","data","close","validations","object","shape","string","required","min","inputName","setTimeout","current","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Formik, Form as FormFormik, Field, ErrorMessage } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\ninterface IValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst ModalEditInfo: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const { showModalEditInfo, setShowModalEditInfo } = useModal();\r\n  const { setChangedUserData, user } = useAuth();\r\n\r\n  const initialValues: IValue = {\r\n    name: user.name,\r\n    email: user.email,\r\n  };\r\n\r\n  const onSubmit = (data: IValue) => {\r\n    setChangedUserData({ name: data.name, email: data.email });\r\n    setShowModalEditInfo(false);\r\n  };\r\n\r\n  const close = () => setShowModalEditInfo(false);\r\n\r\n  const validations = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(t(\"The field is required\"))\r\n      .min(3, t(\"The field must be at least 3 characters long\")),\r\n    email: yup\r\n      .string()\r\n      .required(t(\"The field is required\"))\r\n      .email(t(\"The field must be an email\")),\r\n  });\r\n\r\n  const inputName = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputName.current?.focus(), 500);\r\n  }, [showModalEditInfo]);\r\n\r\n  return (\r\n    <Modal backdrop=\"static\" isOpen={showModalEditInfo} centered>\r\n      <ModalHeader toggle={close}>Edit personal info</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validations}\r\n          >\r\n            <FormFormik>\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Name\")}</label>\r\n                <Field\r\n                  innerRef={inputName}\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  placeholder={t(\"Name\")}\r\n                />\r\n                <ErrorMessage\r\n                  component=\"small\"\r\n                  name=\"name\"\r\n                  className=\"form-text text-danger\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Email\")}</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder={t(\"Email\")}\r\n                />\r\n                <ErrorMessage\r\n                  component=\"small\"\r\n                  name={t(\"Email\")}\r\n                  className=\"form-text text-danger\"\r\n                />\r\n              </div>\r\n              <ModalFooter className=\"border-0\">\r\n                <Button color=\"default\" onClick={close}>\r\n                  {t(\"Close\")}\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  {t(\"Confirm\")}\r\n                </Button>\r\n              </ModalFooter>\r\n            </FormFormik>\r\n          </Formik>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditInfo;\r\n"]},"metadata":{},"sourceType":"module"}