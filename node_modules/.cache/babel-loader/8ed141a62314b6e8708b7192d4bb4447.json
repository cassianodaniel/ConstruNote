{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\EmailList.tsx\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Input, Label, FormGroup, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\n\nconst EmailList = ({\n  emailList,\n  setEmailList\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [email, setEmail] = useState(\"\");\n\n  const addEmail = () => {\n    let find = false;\n    emailList.forEach(item => {\n      if (item === email) {\n        find = true;\n      }\n    });\n\n    if (!find) {\n      let list = [...emailList];\n      list.push(`${email}`);\n      setEmailList(list);\n    }\n\n    setEmail(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, t(\"Invite email\")), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email-input\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: t(\"email...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: addEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, t(\"Invite\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, emailList.map((email, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, email))))));\n};\n\nexport default EmailList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/EmailList.tsx"],"names":["React","useState","useTranslation","Input","Label","FormGroup","InputGroup","InputGroupAddon","Button","SimpleBar","EmailList","emailList","setEmailList","t","email","setEmail","addEmail","find","forEach","item","list","push","e","target","value","height","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACEC,KADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,eALF,EAMEC,MANF,QAOO,YAPP;AAQA,OAAOC,SAAP,MAAsB,iBAAtB;;AAOA,MAAMC,SAA2B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAG,KAAX;AACAN,IAAAA,SAAS,CAACO,OAAV,CAAmBC,IAAD,IAAU;AAC1B,UAAIA,IAAI,KAAKL,KAAb,EAAoB;AAClBG,QAAAA,IAAI,GAAG,IAAP;AACD;AACF,KAJD;;AAKA,QAAI,CAACA,IAAL,EAAW;AACT,UAAIG,IAAI,GAAG,CAAC,GAAGT,SAAJ,CAAX;AACAS,MAAAA,IAAI,CAACC,IAAL,CAAW,GAAEP,KAAM,EAAnB;AACAF,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD;;AACDL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAbD;;AAeA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,CAAC,CAAC,cAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3B;AAME,IAAA,WAAW,EAAEX,CAAC,CAAC,UAAD,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,CAAC,CAAC,QAAD,CADJ,CADF,CATF,CAFF,eAiBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,CAACe,GAAV,CAAc,CAACZ,KAAD,EAAQa,CAAR,kBACb;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAab,KAAb,CADD,CADH,CADF,CADF,CAjBF,CADF;AA6BD,CAjDD;;AAmDA,eAAeJ,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Input,\r\n  Label,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\ninterface IProps {\r\n  emailList: string[];\r\n  setEmailList(value: string[]): void;\r\n}\r\n\r\nconst EmailList: React.FC<IProps> = ({ emailList, setEmailList }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const addEmail = () => {\r\n    let find = false;\r\n    emailList.forEach((item) => {\r\n      if (item === email) {\r\n        find = true;\r\n      }\r\n    });\r\n    if (!find) {\r\n      let list = [...emailList];\r\n      list.push(`${email}`);\r\n      setEmailList(list);\r\n    }\r\n    setEmail(\"\");\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"mb-4\">\r\n      <Label htmlFor=\"email-input\">{t(\"Invite email\")}</Label>\r\n      <InputGroup className=\"mb-2\">\r\n        <Input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"email-input\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder={t(\"email...\")}\r\n        />\r\n        <InputGroupAddon addonType=\"append\">\r\n          <Button color=\"secondary\" onClick={addEmail}>\r\n            {t(\"Invite\")}\r\n          </Button>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n      <div className=\"border\">\r\n        <SimpleBar style={{ height: \"100px\" }}>\r\n          <ul>\r\n            {emailList.map((email, i) => (\r\n              <li key={i}>{email}</li>\r\n            ))}\r\n          </ul>\r\n        </SimpleBar>\r\n      </div>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n"]},"metadata":{},"sourceType":"module"}