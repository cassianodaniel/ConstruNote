{"ast":null,"code":"'use strict';\n\nmodule.exports.detect = function (local) {\n  if (!local) {\n    return false;\n  } // Remove all escaped sequences\n\n\n  const tmp = local.replace(/\\\\20/g, '').replace(/\\\\22/g, '').replace(/\\\\26/g, '').replace(/\\\\27/g, '').replace(/\\\\2f/g, '').replace(/\\\\3a/g, '').replace(/\\\\3c/g, '').replace(/\\\\3e/g, '').replace(/\\\\40/g, '').replace(/\\\\5c/g, ''); // Detect if we have unescaped sequences\n  // eslint-disable-next-line unicorn/regex-shorthand\n\n  const search = tmp.search(/\\\\| |\"|&|'|\\/|:|<|>|@/g);\n\n  if (search === -1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Escape the local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return An escaped local part\n */\n\n\nmodule.exports.escape = function (local) {\n  if (local === null) {\n    return null;\n  }\n\n  return local.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, '\\\\5c').replace(/ /g, '\\\\20').replace(/\"/g, '\\\\22').replace(/&/g, '\\\\26').replace(/'/g, '\\\\27').replace(/\\//g, '\\\\2f').replace(/:/g, '\\\\3a').replace(/</g, '\\\\3c').replace(/>/g, '\\\\3e').replace(/@/g, '\\\\40').replace(/\\3a/g, '\\u0005c3a');\n};\n/**\n * Unescape a local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return unescaped local part\n */\n\n\nmodule.exports.unescape = function (local) {\n  if (local === null) {\n    return null;\n  }\n\n  return local.replace(/\\\\20/g, ' ').replace(/\\\\22/g, '\"').replace(/\\\\26/g, '&').replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, '/').replace(/\\\\3a/g, ':').replace(/\\\\3c/g, '<').replace(/\\\\3e/g, '>').replace(/\\\\40/g, '@').replace(/\\\\5c/g, '\\\\');\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/jid/lib/escaping.js"],"names":["module","exports","detect","local","tmp","replace","search","escape","unescape"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,UAASC,KAAT,EAAgB;AACtC,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD,GAHqC,CAKtC;;;AACA,QAAMC,GAAG,GAAGD,KAAK,CACdE,OADS,CACD,OADC,EACQ,EADR,EAETA,OAFS,CAED,OAFC,EAEQ,EAFR,EAGTA,OAHS,CAGD,OAHC,EAGQ,EAHR,EAITA,OAJS,CAID,OAJC,EAIQ,EAJR,EAKTA,OALS,CAKD,OALC,EAKQ,EALR,EAMTA,OANS,CAMD,OANC,EAMQ,EANR,EAOTA,OAPS,CAOD,OAPC,EAOQ,EAPR,EAQTA,OARS,CAQD,OARC,EAQQ,EARR,EASTA,OATS,CASD,OATC,EASQ,EATR,EAUTA,OAVS,CAUD,OAVC,EAUQ,EAVR,CAAZ,CANsC,CAkBtC;AACA;;AACA,QAAMC,MAAM,GAAGF,GAAG,CAACE,MAAJ,CAAW,wBAAX,CAAf;;AACA,MAAIA,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACjB,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CA1BD;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,MAAM,CAACC,OAAP,CAAeM,MAAf,GAAwB,UAASJ,KAAT,EAAgB;AACtC,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,SAAOA,KAAK,CACTE,OADI,CACI,YADJ,EACkB,EADlB,EAEJA,OAFI,CAEI,KAFJ,EAEW,MAFX,EAGJA,OAHI,CAGI,IAHJ,EAGU,MAHV,EAIJA,OAJI,CAII,IAJJ,EAIU,MAJV,EAKJA,OALI,CAKI,IALJ,EAKU,MALV,EAMJA,OANI,CAMI,IANJ,EAMU,MANV,EAOJA,OAPI,CAOI,KAPJ,EAOW,MAPX,EAQJA,OARI,CAQI,IARJ,EAQU,MARV,EASJA,OATI,CASI,IATJ,EASU,MATV,EAUJA,OAVI,CAUI,IAVJ,EAUU,MAVV,EAWJA,OAXI,CAWI,IAXJ,EAWU,MAXV,EAYJA,OAZI,CAYI,MAZJ,EAYY,WAZZ,CAAP;AAaD,CAlBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,MAAM,CAACC,OAAP,CAAeO,QAAf,GAA0B,UAASL,KAAT,EAAgB;AACxC,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,SAAOA,KAAK,CACTE,OADI,CACI,OADJ,EACa,GADb,EAEJA,OAFI,CAEI,OAFJ,EAEa,GAFb,EAGJA,OAHI,CAGI,OAHJ,EAGa,GAHb,EAIJA,OAJI,CAII,OAJJ,EAIa,GAJb,EAKJA,OALI,CAKI,OALJ,EAKa,GALb,EAMJA,OANI,CAMI,OANJ,EAMa,GANb,EAOJA,OAPI,CAOI,OAPJ,EAOa,GAPb,EAQJA,OARI,CAQI,OARJ,EAQa,GARb,EASJA,OATI,CASI,OATJ,EASa,GATb,EAUJA,OAVI,CAUI,OAVJ,EAUa,IAVb,CAAP;AAWD,CAhBD","sourcesContent":["'use strict'\n\nmodule.exports.detect = function(local) {\n  if (!local) {\n    return false\n  }\n\n  // Remove all escaped sequences\n  const tmp = local\n    .replace(/\\\\20/g, '')\n    .replace(/\\\\22/g, '')\n    .replace(/\\\\26/g, '')\n    .replace(/\\\\27/g, '')\n    .replace(/\\\\2f/g, '')\n    .replace(/\\\\3a/g, '')\n    .replace(/\\\\3c/g, '')\n    .replace(/\\\\3e/g, '')\n    .replace(/\\\\40/g, '')\n    .replace(/\\\\5c/g, '')\n\n  // Detect if we have unescaped sequences\n  // eslint-disable-next-line unicorn/regex-shorthand\n  const search = tmp.search(/\\\\| |\"|&|'|\\/|:|<|>|@/g)\n  if (search === -1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Escape the local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return An escaped local part\n */\nmodule.exports.escape = function(local) {\n  if (local === null) {\n    return null\n  }\n\n  return local\n    .replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\\\/g, '\\\\5c')\n    .replace(/ /g, '\\\\20')\n    .replace(/\"/g, '\\\\22')\n    .replace(/&/g, '\\\\26')\n    .replace(/'/g, '\\\\27')\n    .replace(/\\//g, '\\\\2f')\n    .replace(/:/g, '\\\\3a')\n    .replace(/</g, '\\\\3c')\n    .replace(/>/g, '\\\\3e')\n    .replace(/@/g, '\\\\40')\n    .replace(/\\3a/g, '\\u0005c3a')\n}\n\n/**\n * Unescape a local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return unescaped local part\n */\nmodule.exports.unescape = function(local) {\n  if (local === null) {\n    return null\n  }\n\n  return local\n    .replace(/\\\\20/g, ' ')\n    .replace(/\\\\22/g, '\"')\n    .replace(/\\\\26/g, '&')\n    .replace(/\\\\27/g, \"'\")\n    .replace(/\\\\2f/g, '/')\n    .replace(/\\\\3a/g, ':')\n    .replace(/\\\\3c/g, '<')\n    .replace(/\\\\3e/g, '>')\n    .replace(/\\\\40/g, '@')\n    .replace(/\\\\5c/g, '\\\\')\n}\n"]},"metadata":{},"sourceType":"script"}