{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInputAttachFileButton.tsx\";\nimport React, { useState } from \"react\";\nimport { Input, UncontrolledTooltip, Label, Button } from \"reactstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nimport { useTranslation } from \"react-i18next\";\nimport Swal from 'sweetalert2';\nimport PreviewBox, { BigImage } from \"./PreviewBox\";\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/images/ic-close-preview.svg\";\nimport IntlMessages from \"./IntlMessages\";\nimport SearchFiles from \"./../assets/images/cloud.png\";\nimport Dropzone from \"react-dropzone\";\n\nconst ChatInputAttachedFileButton = () => {\n  const {\n    chats,\n    setChats,\n    activeChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n  const [fileStorage, setFileStorage] = useState();\n  let dropzoneRef;\n\n  const SearchImages = props => {\n    const {\n      previewFile\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-files-container\",\n      onClick: () => dropzoneRef.open(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: \"100%\"\n      },\n      src: SearchFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: previewFile,\n      ref: node => dropzoneRef = node,\n      minSize: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const SendButton = props => {\n    const {\n      onSendFiles,\n      onClose\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"bg-primary ct-btn-block ct-mb-1\",\n      onClick: () => {\n        onSendFiles(fileStorage);\n        onClose();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"auth.conversation.filePreviewerSendButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const previewFileSending = e => {\n    let files = e.target.files;\n    if ((files === null || files === void 0 ? void 0 : files.length) === 0) return;\n    let file = files === null || files === void 0 ? void 0 : files.item(0);\n\n    if (file && file.size > 5242880) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Tamanho de arquivo não suportado. Por favor envie um arquivo com menos de 5mb!',\n        //decidir viés internacionalização\n        footer: ''\n      });\n      return;\n    } else {\n      if (e.target.files) {\n        setFileStorage(URL.createObjectURL(e.target.files[0]));\n      }\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n\n  const onAddMessage = file => {\n    setChats(chats.map(item => {\n      if (activeChat) if (item.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n        item.messages.push({\n          id: `${item.messages.length + 1}`,\n          userName: user.name,\n          message: \"Carregando...\",\n          time: \"\",\n          isImageMessage: false,\n          isFileMessage: false,\n          isVideoMessage: false,\n          isAudioMessage: false,\n          fileUrl: \"\",\n          sendFile: file,\n          toUser: activeChat.id,\n          fromUser: user.id,\n          deliverStatus: DeliverStatus.SENDING,\n          readStatus: ReadStatus.UNREAD,\n          deliverTimestamp: \"\",\n          readTimestamp: \"\",\n          content: \"metadata\",\n          contentType: \"type\",\n          isReplyMessage: false,\n          isForwardMessage: false\n        });\n      }\n      return item;\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false); //chamar a mesma lightbox no ctrl+v também\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"files\",\n    className: \"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-attachment-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: previewFileSending,\n    type: \"file\",\n    name: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"files\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, t(\"Attach File\")), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"file-previewer\",\n    className: \"file-previewer-outer slide-top-animation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"auth.conversation.filePreviewerHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-icon-preview\",\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-previewer-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"big-image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BigImage, {\n    image: fileStorage[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-preview-files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-preview-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, fileStorage.length > 0 && fileStorage.map((file, index) => {\n    return /*#__PURE__*/React.createElement(PreviewBox\n    /* width=\"10vh\"  image={\"dcsadsa\"} height=\"10vh\"  */\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(SearchImages, {\n    previewFile: fileStorage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SendButton, {\n    onSendFiles: () => onAddMessage,\n    onClose: () => setIsOpen(!isOpen),\n    fileStorage: fileStorage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ChatInputAttachedFileButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInputAttachFileButton.tsx"],"names":["React","useState","Input","UncontrolledTooltip","Label","Button","useAuth","useChat","DeliverStatus","ReadStatus","useTranslation","Swal","PreviewBox","BigImage","IntlMessages","SearchFiles","Dropzone","ChatInputAttachedFileButton","chats","setChats","activeChat","user","fileStorage","setFileStorage","dropzoneRef","SearchImages","props","previewFile","open","width","node","SendButton","onSendFiles","onClose","previewFileSending","e","files","target","length","file","item","size","fire","icon","title","text","footer","URL","createObjectURL","t","onAddMessage","map","id","messages","push","userName","name","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","isOpen","setIsOpen","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, UncontrolledTooltip, Label, Button } from \"reactstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from 'sweetalert2';\r\nimport PreviewBox, {BigImage} from \"./PreviewBox\";\r\nimport { ReactComponent as CloseIcon } from \"../../../../assets/images/ic-close-preview.svg\";\r\nimport IntlMessages from \"./IntlMessages\";\r\nimport SearchFiles from \"./../assets/images/cloud.png\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nconst ChatInputAttachedFileButton: React.FC = () => {\r\n  const { chats, setChats, activeChat } = useChat();\r\n  const { user } = useAuth();\r\n  const [fileStorage, setFileStorage] = useState<any>();\r\n  let dropzoneRef:any;\r\n\r\n  const SearchImages = (props: any) => {\r\n    const { previewFile } = props;\r\n  \r\n    return (\r\n      <div className=\"search-files-container\" onClick={() => dropzoneRef.open()}>\r\n        <div className=\"search-files\">\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={SearchFiles} />\r\n        </div>\r\n        <Dropzone\r\n          onDrop={previewFile}\r\n          ref={(node) => (dropzoneRef = node)}\r\n          minSize={0}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SendButton = (props: any) => {\r\n    const { onSendFiles, onClose } = props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"bg-primary ct-btn-block ct-mb-1\"\r\n          onClick={() => {\r\n            onSendFiles(fileStorage);\r\n            onClose();\r\n          }}\r\n        >\r\n          <IntlMessages id=\"auth.conversation.filePreviewerSendButton\" />\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const previewFileSending = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    if(files?.length === 0) return;\r\n    let file = files?.item(0);\r\n    if (file && file.size > 5242880) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Tamanho de arquivo não suportado. Por favor envie um arquivo com menos de 5mb!', //decidir viés internacionalização\r\n        footer: ''\r\n      })\r\n      return;\r\n    }else{\r\n      if(e.target.files){\r\n        setFileStorage(URL.createObjectURL(e.target.files[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onAddMessage = (file: File) => {\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (activeChat)\r\n          if (item.id === activeChat?.id) {\r\n            item.messages.push({\r\n              id: `${item.messages.length + 1}`,\r\n              userName: user.name,\r\n              message: \"Carregando...\",\r\n              time: \"\",\r\n              isImageMessage: false,\r\n              isFileMessage: false,\r\n              isVideoMessage: false,\r\n              isAudioMessage: false,\r\n              fileUrl: \"\",\r\n              sendFile: file,\r\n              toUser: activeChat.id,\r\n              fromUser: user.id,\r\n              deliverStatus: DeliverStatus.SENDING,\r\n              readStatus: ReadStatus.UNREAD,\r\n              deliverTimestamp: \"\",\r\n              readTimestamp: \"\",\r\n              content: \"metadata\",\r\n              contentType: \"type\",\r\n              isReplyMessage: false,\r\n              isForwardMessage: false,\r\n            });\r\n          }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  //chamar a mesma lightbox no ctrl+v também\r\n\r\n  return (\r\n    <li className=\"list-inline-item input-file\">\r\n      <Label\r\n        id=\"files\"\r\n        className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"\r\n      >\r\n        <i className=\"ri-attachment-line\"></i>\r\n        <Input onChange={previewFileSending} type=\"file\" name=\"fileInput\" />\r\n      </Label>\r\n      <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n        {t(\"Attach File\")}\r\n      </UncontrolledTooltip>\r\n      {isOpen && (\r\n          <div\r\n          id=\"file-previewer\"\r\n          className=\"file-previewer-outer slide-top-animation\"\r\n        >\r\n          <div className=\"preview-header\">\r\n            <h3>\r\n              <IntlMessages id=\"auth.conversation.filePreviewerHeader\" />\r\n            </h3>\r\n            <div className=\"close-icon-preview\" onClick={() => setIsOpen(!isOpen)}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n    \r\n          <div className=\"file-previewer-inner\">\r\n            <div className=\"big-image-box\">\r\n              <BigImage image={fileStorage[0]}></BigImage>\r\n            </div>\r\n          </div>\r\n    \r\n          <div className=\"box-preview-files\">\r\n            <div className=\"box-preview-images\">\r\n              {fileStorage.length > 0 &&\r\n                fileStorage.map((file: any, index: any) => {\r\n                  return (\r\n                    <PreviewBox /* width=\"10vh\"  image={\"dcsadsa\"} height=\"10vh\"  */ />\r\n                  );\r\n                })}\r\n            </div>\r\n            <SearchImages previewFile={fileStorage} />\r\n          </div>\r\n    \r\n          <SendButton\r\n            onSendFiles={() => onAddMessage}\r\n            onClose={() => setIsOpen(!isOpen)}\r\n            fileStorage={fileStorage}\r\n          />\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatInputAttachedFileButton;\r\n"]},"metadata":{},"sourceType":"module"}