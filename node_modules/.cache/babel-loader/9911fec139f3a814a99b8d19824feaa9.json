{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessageFooter.tsx\";\nimport React from 'react';\nimport DeliverStatus from '../enuns/DeliverStatus';\nimport ReadStatus from '../enuns/ReadStatus';\nimport { DateTime } from \"luxon\";\n\nconst ChatMessageFooter = ({\n  message,\n  user\n}) => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-time mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      position: \"relative\",\n      right: 8,\n      top: 1,\n      color: \"rgb(114, 105, 239)\"\n    },\n    className: message.deliverStatus === DeliverStatus.SENDING && user.id === message.fromUser ? \"ri-time-line align-middle\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      position: \"relative\",\n      right: 8,\n      top: 1,\n      color: \"rgb(114, 105, 239)\"\n    },\n    className: message.deliverStatus === DeliverStatus.QUEUED && message.readStatus === ReadStatus.UNREAD && user.id === message.fromUser ? \"ri-check-line align-middle\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      position: \"relative\",\n      right: 8,\n      top: 1,\n      color: \"rgb(114, 105, 239)\"\n    },\n    className: message.deliverStatus === DeliverStatus.DELIVERED && message.readStatus === ReadStatus.UNREAD && user.id === message.fromUser ? \"ri-check-double-line align-middle\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      position: \"relative\",\n      right: 8,\n      top: 1,\n      color: \"rgb(35, 198, 10)\"\n    },\n    className: message.readStatus === ReadStatus.READ && user.id === message.fromUser ? \"ri-check-double-line align-middle\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"align-middle\",\n    style: {\n      position: \"relative\",\n      right: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, message.time === \"\" || message.time === \"—:—\" ? message.time = \"—:—\" : null, message.time !== (\"\" || \"—:—\") && DateTime.fromISO(message.time).toFormat(\"HH:mm\")));\n};\n\nexport default ChatMessageFooter;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageFooter.tsx"],"names":["React","DeliverStatus","ReadStatus","DateTime","ChatMessageFooter","message","user","position","right","top","color","deliverStatus","SENDING","id","fromUser","QUEUED","readStatus","UNREAD","DELIVERED","READ","time","fromISO","toFormat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAUA,MAAMC,iBAAmC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAC/D,sBACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE;AAJF,KADT;AAOE,IAAA,SAAS,EACPL,OAAO,CAACM,aAAR,KAA0BV,aAAa,CAACW,OAAxC,IACAN,IAAI,CAACO,EAAL,KAAYR,OAAO,CAACS,QADpB,GAEI,2BAFJ,GAGI,EAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAeE;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE;AAJF,KADT;AAOE,IAAA,SAAS,EACNL,OAAO,CAACM,aAAR,KAA0BV,aAAa,CAACc,MAAxC,IAAkDV,OAAO,CAACW,UAAR,KAAuBd,UAAU,CAACe,MAArF,IACAX,IAAI,CAACO,EAAL,KAAYR,OAAO,CAACS,QADpB,GAEI,4BAFJ,GAGI,EAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eA6BE;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE;AAJF,KADT;AAOE,IAAA,SAAS,EACPL,OAAO,CAACM,aAAR,KAA0BV,aAAa,CAACiB,SAAxC,IACAb,OAAO,CAACW,UAAR,KAAuBd,UAAU,CAACe,MADlC,IAEAX,IAAI,CAACO,EAAL,KAAYR,OAAO,CAACS,QAFpB,GAGI,mCAHJ,GAII,EAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,eA4CE;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE;AAJF,KADT;AAOE,IAAA,SAAS,EACPL,OAAO,CAACW,UAAR,KAAuBd,UAAU,CAACiB,IAAlC,IACAb,IAAI,CAACO,EAAL,KAAYR,OAAO,CAACS,QADpB,GAEI,mCAFJ,GAGI,EAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,eA0DE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIH,OAAO,CAACe,IAAR,KAAiB,EAAjB,IAAuBf,OAAO,CAACe,IAAR,KAAiB,KAAzC,GAAkDf,OAAO,CAACe,IAAR,GAAe,KAAjE,GAAyE,IAR5E,EASGf,OAAO,CAACe,IAAR,MAAkB,MAAM,KAAxB,KAAkCjB,QAAQ,CAACkB,OAAT,CAAiBhB,OAAO,CAACe,IAAzB,EAA+BE,QAA/B,CAAwC,OAAxC,CATrC,CA1DF,CADJ;AAwEH,CAzED;;AA2EA,eAAelB,iBAAf","sourcesContent":["import React from 'react'\r\nimport DeliverStatus from '../enuns/DeliverStatus';\r\nimport ReadStatus from '../enuns/ReadStatus';\r\nimport { DateTime } from \"luxon\"\r\n\r\nimport IMessage from '../alias/IMessage';\r\nimport IUser from '../alias/IUser';\r\n\r\ninterface IProps {\r\n    message: IMessage;\r\n    user: IUser;\r\n}\r\n\r\nconst ChatMessageFooter: React.FC<IProps> = ({ message, user }) => {\r\n    return (\r\n        <p className=\"chat-time mb-0\">\r\n          <i\r\n            style={{\r\n              position: \"relative\",\r\n              right: 8,\r\n              top: 1,\r\n              color: \"rgb(114, 105, 239)\",\r\n            }}\r\n            className={\r\n              message.deliverStatus === DeliverStatus.SENDING &&\r\n              user.id === message.fromUser\r\n                ? \"ri-time-line align-middle\"\r\n                : \"\"\r\n            }\r\n          ></i>\r\n          <i\r\n            style={{\r\n              position: \"relative\",\r\n              right: 8,\r\n              top: 1,\r\n              color: \"rgb(114, 105, 239)\",\r\n            }}\r\n            className={\r\n              (message.deliverStatus === DeliverStatus.QUEUED && message.readStatus === ReadStatus.UNREAD) &&\r\n              user.id === message.fromUser\r\n                ? \"ri-check-line align-middle\"\r\n                : \"\"\r\n            }\r\n          ></i>\r\n          <i\r\n            style={{\r\n              position: \"relative\",\r\n              right: 8,\r\n              top: 1,\r\n              color: \"rgb(114, 105, 239)\",\r\n            }}\r\n            className={\r\n              message.deliverStatus === DeliverStatus.DELIVERED &&\r\n              message.readStatus === ReadStatus.UNREAD &&\r\n              user.id === message.fromUser\r\n                ? \"ri-check-double-line align-middle\"\r\n                : \"\"\r\n            }\r\n          ></i>\r\n          <i\r\n            style={{\r\n              position: \"relative\",\r\n              right: 8,\r\n              top: 1,\r\n              color: \"rgb(35, 198, 10)\",\r\n            }}\r\n            className={\r\n              message.readStatus === ReadStatus.READ &&\r\n              user.id === message.fromUser\r\n                ? \"ri-check-double-line align-middle\"\r\n                : \"\"\r\n            }\r\n          ></i>\r\n          <span\r\n            className=\"align-middle\"\r\n            style={{ position: \"relative\", right: 4 }}\r\n          >\r\n            {/* Necessário fazer o parse para mensagens da api */}\r\n            {/* {DateTime.fromISO(new Date(message.time).toISOString()).toFormat(\r\n              \"HH:mm\"\r\n            )} */}\r\n            {(message.time === \"\" || message.time === \"—:—\") ? message.time = \"—:—\" : null}\r\n            {message.time !== (\"\" || \"—:—\") && DateTime.fromISO(message.time).toFormat(\"HH:mm\")}\r\n          </span>\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default ChatMessageFooter;"]},"metadata":{},"sourceType":"module"}