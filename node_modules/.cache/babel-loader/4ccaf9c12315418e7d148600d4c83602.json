{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport Dashboard from \"./pages/Dashboard\";\nimport IncomingCall from \"./components/IncomingCall\";\nimport { useLoading } from \"./contexts/LoadingContext\";\nimport LoadingPage from \"./components/LoadingPage\";\nimport { useChat } from \"./contexts/ChatContext\";\nimport Favicon from \"react-favicon\";\n\nfunction App() {\n  const {\n    isLoadingApp\n  } = useLoading();\n  const {\n    chats\n  } = useChat();\n  const [unreadSum, setUnreadSum] = useState(0);\n\n  const init = () => {\n    chats.forEach(cht => {\n      setUnreadSum(unreadSum + cht.unRead);\n      console.log('AQUI:', unreadSum + cht.unRead);\n    });\n  };\n\n  useEffect(init, [chats]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, isLoadingApp ? /*#__PURE__*/React.createElement(LoadingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, unreadSum <= 0 ? /*#__PURE__*/React.createElement(Favicon, {\n    url: \"./favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }) : /*#__PURE__*/React.createElement(Favicon, {\n    alertCount: unreadSum,\n    url: \"./favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IncomingCall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/App.tsx"],"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Dashboard","IncomingCall","useLoading","LoadingPage","useChat","Favicon","App","isLoadingApp","chats","unreadSum","setUnreadSum","init","forEach","cht","unRead","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,UAAU,EAAnC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAUJ,OAAO,EAAvB;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMe,IAAI,GAAG,MAAM;AACjBH,IAAAA,KAAK,CAACI,OAAN,CAAeC,GAAD,IAAS;AACrBH,MAAAA,YAAY,CAACD,SAAS,GAAGI,GAAG,CAACC,MAAjB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,SAAS,GAAGI,GAAG,CAACC,MAArC;AACD,KAHD;AAID,GALD;;AAOAnB,EAAAA,SAAS,CAACgB,IAAD,EAAO,CAACH,KAAD,CAAP,CAAT;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YAAY,gBACX,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAGX,0CACGE,SAAS,IAAI,CAAb,gBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAEE,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEA,SAArB;AAAgC,IAAA,GAAG,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJJ,CADF;AAkBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./routes\";\r\n\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport IncomingCall from \"./components/IncomingCall\";\r\nimport { useLoading } from \"./contexts/LoadingContext\";\r\nimport LoadingPage from \"./components/LoadingPage\";\r\nimport { useChat } from \"./contexts/ChatContext\";\r\nimport Favicon from \"react-favicon\";\r\n\r\nfunction App() {\r\n  const { isLoadingApp } = useLoading();\r\n  const {chats} = useChat();\r\n  const [unreadSum, setUnreadSum] = useState(0);\r\n  \r\n  const init = () => {\r\n    chats.forEach((cht) => {\r\n      setUnreadSum(unreadSum + cht.unRead)\r\n      console.log('AQUI:', unreadSum + cht.unRead);\r\n    });\r\n  }\r\n\r\n  useEffect(init, [chats]);\r\n\r\n  return (\r\n    <Router>\r\n      {isLoadingApp ? (\r\n        <LoadingPage />\r\n      ) : (\r\n        <>\r\n          {unreadSum <= 0 ? \r\n            (<Favicon url=\"./favicon.ico\"/>) : \r\n            (<Favicon alertCount={unreadSum} url=\"./favicon.ico\"/>) \r\n          }\r\n          <Dashboard>\r\n            <Routes />\r\n          </Dashboard>\r\n          <IncomingCall />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}