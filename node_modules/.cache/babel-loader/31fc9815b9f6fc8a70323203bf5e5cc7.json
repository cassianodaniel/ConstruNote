{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInputAttachedFileButton.tsx\";\nimport React from \"react\";\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\n\nconst ChatInputAttachedFileButton = ({\n  file,\n  setFile\n}) => {\n  const handleFileChange = e => {\n    if (e.target.files.length !== 0) {\n      setFile({\n        name: e.target.files[0].name,\n        size: e.target.files[0].size\n      });\n    }\n\n    for (var i = 0; i < e.target.files.length; i++) {\n      if (e.target.files[i].size > 15000) {\n        alert(\"Tamanho de arquivo \" + e.target.files[i].name + \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      } else {\n        //sendFiles(activeChat, e.target.files[i]);\n        console.log(\"revisar essa linha\");\n      }\n    }\n  };\n\n  const handlePaste = e => {\n    if (e.clipboardData.files.length !== 0) {\n      setFile({\n        name: e.clipboardData.files[0].name,\n        size: e.clipboardData.files[0].size\n      });\n    }\n\n    for (var i = 0; i < e.clipboardData.files.length; i++) {\n      if (e.clipboardData.files.size > 15000) {\n        alert(\"Tamanho de arquivo \" + e.target.files[i].name + \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      } else {\n        //pasteFiles(activeChat, e.clipboardData.files[i]);\n        console.log(\"revisar essa linha\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"files\",\n    className: \"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-attachment-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => handleFileChange(e),\n    type: \"file\",\n    name: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"files\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Attached File\"));\n};\n\nexport default ChatInputAttachedFileButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInputAttachedFileButton.tsx"],"names":["React","Input","UncontrolledTooltip","Label","ChatInputAttachedFileButton","file","setFile","handleFileChange","e","target","files","length","name","size","i","alert","console","log","handlePaste","clipboardData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\r\nimport IFiles from \"../alias/IFiles\";\r\n\r\ninterface IProps {\r\n  file: IFiles;\r\n  setFile(value: IFiles): void;\r\n}\r\n\r\nconst ChatInputAttachedFileButton: React.FC<IProps> = ({ file, setFile }) => {\r\n  const handleFileChange = (e: any) => {\r\n    if (e.target.files.length !== 0) {\r\n      setFile({\r\n        name: e.target.files[0].name,\r\n        size: e.target.files[0].size,\r\n      });\r\n    }\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      if (e.target.files[i].size > 15000) {\r\n        alert(\r\n          \"Tamanho de arquivo \" +\r\n            e.target.files[i].name +\r\n            \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n        );\r\n      } else {\r\n        //sendFiles(activeChat, e.target.files[i]);\r\n        console.log(\"revisar essa linha\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e: any) => {\r\n    if (e.clipboardData.files.length !== 0) {\r\n      setFile({\r\n        name: e.clipboardData.files[0].name,\r\n        size: e.clipboardData.files[0].size,\r\n      });\r\n    }\r\n    for (var i = 0; i < e.clipboardData.files.length; i++) {\r\n      if (e.clipboardData.files.size > 15000) {\r\n        alert(\r\n          \"Tamanho de arquivo \" +\r\n            e.target.files[i].name +\r\n            \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n        );\r\n      } else {\r\n        //pasteFiles(activeChat, e.clipboardData.files[i]);\r\n        console.log(\"revisar essa linha\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"list-inline-item input-file\">\r\n      <Label\r\n        id=\"files\"\r\n        className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"\r\n      >\r\n        <i className=\"ri-attachment-line\"></i>\r\n        <Input\r\n          onChange={(e) => handleFileChange(e)}\r\n          type=\"file\"\r\n          name=\"fileInput\"\r\n        />\r\n      </Label>\r\n      <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n        Attached File\r\n      </UncontrolledTooltip>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatInputAttachedFileButton;\r\n"]},"metadata":{},"sourceType":"module"}