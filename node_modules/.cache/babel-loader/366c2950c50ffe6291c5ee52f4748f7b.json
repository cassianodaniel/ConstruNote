{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyModeratorLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport Swal from 'sweetalert2';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyModeratorLinkButtonInActiveCall = ({\n  moderatorLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(moderatorLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rounded-circle\",\n    style: {\n      height: 20,\n      width: 20,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      Swal.fire({\n        position: \"top-start\",\n        icon: \"success\",\n        title: t(\"Copied to clipboard a moderator invite!\"),\n        showConfirmButton: false,\n        timer: 1500,\n        customClass: {\n          popup: \"swal-mini-popup\"\n        },\n        backdrop: false\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default CopyModeratorLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyModeratorLinkButtonInActiveCall.tsx"],"names":["React","Button","useCopy","Swal","useTranslation","CopyModeratorLinkButtonInActiveCall","moderatorLink","buttonIcon","copy","t","height","width","backgroundColor","fire","position","icon","title","showConfirmButton","timer","customClass","popup","backdrop","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAOA,MAAMC,mCAAoF,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAC1H,QAAM;AAAEC,IAAAA;AAAF,MAAWN,OAAO,CAACI,aAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AACnCM,MAAAA,MAAM,EAAE,EAD2B;AAEnCC,MAAAA,KAAK,EAAE,EAF4B;AAGnCC,MAAAA,eAAe,EAAE;AAHkB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACXJ,MAAAA,IAAI;AACJL,MAAAA,IAAI,CAACU,IAAL,CAAU;AACNC,QAAAA,QAAQ,EAAE,WADJ;AAENC,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,KAAK,EAAEP,CAAC,CAAC,yCAAD,CAHF;AAINQ,QAAAA,iBAAiB,EAAE,KAJb;AAKNC,QAAAA,KAAK,EAAE,IALD;AAMNC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE;AADI,SANP;AASNC,QAAAA,QAAQ,EAAE;AATJ,OAAV;AAWH,KAhBD;AAiBA,IAAA,SAAS,EAAC,2BAjBV;AAkBA,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AADJ,KAlBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAsBI;AAAG,IAAA,SAAS,EAAEf,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CALJ,CADA,CADJ;AAkCH,CArCD;;AAuCA,eAAeF,mCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport Swal from 'sweetalert2';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ICopyModeratorLinkButtonInActiveCall{\r\n    moderatorLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\nconst CopyModeratorLinkButtonInActiveCall : React.FC<ICopyModeratorLinkButtonInActiveCall> = ({moderatorLink, buttonIcon}) => {\r\n    const { copy } = useCopy(moderatorLink);    \r\n    const { t } = useTranslation();\r\n    return(\r\n        <>  \r\n        <div className=\"rounded-circle\" style={{\r\n            height: 20,\r\n            width: 20,\r\n            backgroundColor: \"white\"\r\n        }}>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n                copy();\r\n                Swal.fire({\r\n                    position: \"top-start\",\r\n                    icon: \"success\",\r\n                    title: t(\"Copied to clipboard a moderator invite!\"),\r\n                    showConfirmButton: false,\r\n                    timer: 1500,\r\n                    customClass: {\r\n                      popup: \"swal-mini-popup\",\r\n                    },\r\n                    backdrop: false\r\n                });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            style={{\r\n                color: \"black\",\r\n            }}\r\n            >\r\n                <i className={buttonIcon}></i>\r\n            </Button>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CopyModeratorLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}