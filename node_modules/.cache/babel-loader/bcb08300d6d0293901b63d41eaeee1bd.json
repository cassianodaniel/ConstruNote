{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState,useEffect}from\"react\";export var LoadingContext=createContext({});export var LoadingProvider=function LoadingProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDisconnected=_useState2[0],setDisconnected=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoadingApp=_useState4[0],setLoadingApp=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoadingMedia=_useState6[0],setIsLoadingMedia=_useState6[1];var init=function init(){setTimeout(function(){return setLoadingApp(false);},4000);};useEffect(init,[]);return/*#__PURE__*/React.createElement(LoadingContext.Provider,{value:{isDisconnected:isDisconnected,setDisconnected:setDisconnected,isLoadingApp:isLoadingApp,setLoadingApp:setLoadingApp,isLoadingMedia:isLoadingMedia,setIsLoadingMedia:setIsLoadingMedia}},children);};export function useLoading(){return useContext(LoadingContext);}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/LoadingContext.tsx"],"names":["React","createContext","useContext","useState","useEffect","LoadingContext","LoadingProvider","children","isDisconnected","setDisconnected","isLoadingApp","setLoadingApp","isLoadingMedia","setIsLoadingMedia","init","setTimeout","useLoading"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,CAAqDC,SAArD,KAAsE,OAAtE,CAWA,MAAO,IAAMC,CAAAA,cAAc,CAAGJ,aAAa,CACzC,EADyC,CAApC,CAIP,MAAO,IAAMK,CAAAA,eAAyB,CAAG,QAA5BA,CAAAA,eAA4B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACfJ,QAAQ,CAAC,KAAD,CADO,wCAClDK,cADkD,eAClCC,eADkC,8BAEnBN,QAAQ,CAAC,IAAD,CAFW,yCAElDO,YAFkD,eAEpCC,aAFoC,8BAGbR,QAAQ,CAAC,IAAD,CAHK,yCAGlDS,cAHkD,eAGlCC,iBAHkC,eAKzD,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBC,UAAU,CAAC,iBAAMJ,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAAD,CAA6B,IAA7B,CAAV,CACD,CAFD,CAIAP,SAAS,CAACU,IAAD,CAAO,EAAP,CAAT,CAEA,mBACE,oBAAC,cAAD,CAAgB,QAAhB,EACE,KAAK,CAAE,CAAEN,cAAc,CAAdA,cAAF,CAAkBC,eAAe,CAAfA,eAAlB,CAAmCC,YAAY,CAAZA,YAAnC,CAAiDC,aAAa,CAAbA,aAAjD,CAAgEC,cAAc,CAAdA,cAAhE,CAAgFC,iBAAiB,CAAjBA,iBAAhF,CADT,EAGGN,QAHH,CADF,CAOD,CAlBM,CAoBP,MAAO,SAASS,CAAAA,UAAT,EAAsB,CAC3B,MAAOd,CAAAA,UAAU,CAACG,cAAD,CAAjB,CACD","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\ninterface ILoadingContextData {\r\n  isDisconnected: boolean;\r\n  setDisconnected(value: boolean): void;\r\n  isLoadingApp: boolean;\r\n  setLoadingApp(value: boolean): void;\r\n  isLoadingMedia: boolean;\r\n  setIsLoadingMedia(value: boolean): void;\r\n}\r\n\r\nexport const LoadingContext = createContext<ILoadingContextData>(\r\n  {} as ILoadingContextData\r\n);\r\n\r\nexport const LoadingProvider: React.FC = ({ children }) => {\r\n  const [isDisconnected, setDisconnected] = useState(false);\r\n  const [isLoadingApp, setLoadingApp] = useState(true);\r\n  const [isLoadingMedia, setIsLoadingMedia] = useState(true);\r\n\r\n  const init = () => {\r\n    setTimeout(() => setLoadingApp(false), 4000);\r\n  };\r\n\r\n  useEffect(init, []);\r\n\r\n  return (\r\n    <LoadingContext.Provider\r\n      value={{ isDisconnected, setDisconnected, isLoadingApp, setLoadingApp, isLoadingMedia, setIsLoadingMedia }}\r\n    >\r\n      {children}\r\n    </LoadingContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useLoading() {\r\n  return useContext(LoadingContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}