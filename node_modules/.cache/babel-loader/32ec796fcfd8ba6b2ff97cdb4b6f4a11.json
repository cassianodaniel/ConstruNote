{"ast":null,"code":"(function (root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports, module);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports', 'module'], factory);\n  }\n})(this, function (exports, module) {\n  /**\n   * ANONYMOUS `Mechanism` constructor.\n   *\n   * This class implements the ANONYMOUS SASL mechanism.\n   *\n   * The ANONYMOUS SASL mechanism provides support for permitting anonymous\n   * access to various services\n   *\n   * References:\n   *  - [RFC 4505](http://tools.ietf.org/html/rfc4505)\n   *\n   * @api public\n   */\n  function Mechanism() {}\n\n  Mechanism.prototype.name = 'ANONYMOUS';\n  Mechanism.prototype.clientFirst = true;\n  /**\n   * Encode a response using optional trace information.\n   *\n   * Options:\n   *  - `trace`  trace information (optional)\n   *\n   * @param {Object} cred\n   * @api public\n   */\n\n  Mechanism.prototype.response = function (cred) {\n    return cred.trace || '';\n  };\n  /**\n   * Decode a challenge issued by the server.\n   *\n   * @param {String} chal\n   * @api public\n   */\n\n\n  Mechanism.prototype.challenge = function (chal) {};\n\n  exports = module.exports = Mechanism;\n});","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/sasl-anonymous/lib/mechanism.js"],"names":["root","factory","exports","module","define","amd","Mechanism","prototype","name","clientFirst","response","cred","trace","challenge","chal"],"mappings":"AAAC,WAASA,IAAT,EAAeC,OAAf,EAAwB;AACvB,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAC/B;AACAD,IAAAA,OAAO,CAACC,OAAD,EAAUC,MAAV,CAAP;AACD,GAHD,MAGO,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACrD;AACAD,IAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,QAAZ,CAAD,EAAwBH,OAAxB,CAAN;AACD;AACF,CARA,EAQC,IARD,EAQO,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAEhC;;;;;;;;;;;;;AAaA,WAASG,SAAT,GAAqB,CACpB;;AAEDA,EAAAA,SAAS,CAACC,SAAV,CAAoBC,IAApB,GAA2B,WAA3B;AACAF,EAAAA,SAAS,CAACC,SAAV,CAAoBE,WAApB,GAAkC,IAAlC;AAEA;;;;;;;;;;AASAH,EAAAA,SAAS,CAACC,SAAV,CAAoBG,QAApB,GAA+B,UAASC,IAAT,EAAe;AAC5C,WAAOA,IAAI,CAACC,KAAL,IAAc,EAArB;AACD,GAFD;AAIA;;;;;;;;AAMAN,EAAAA,SAAS,CAACC,SAAV,CAAoBM,SAApB,GAAgC,UAASC,IAAT,EAAe,CAC9C,CADD;;AAGAZ,EAAAA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBI,SAA3B;AAED,CArDA,CAAD","sourcesContent":["(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports, module);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports', 'module'], factory);\n  }\n}(this, function(exports, module) {\n\n  /**\n   * ANONYMOUS `Mechanism` constructor.\n   *\n   * This class implements the ANONYMOUS SASL mechanism.\n   *\n   * The ANONYMOUS SASL mechanism provides support for permitting anonymous\n   * access to various services\n   *\n   * References:\n   *  - [RFC 4505](http://tools.ietf.org/html/rfc4505)\n   *\n   * @api public\n   */\n  function Mechanism() {\n  }\n  \n  Mechanism.prototype.name = 'ANONYMOUS';\n  Mechanism.prototype.clientFirst = true;\n  \n  /**\n   * Encode a response using optional trace information.\n   *\n   * Options:\n   *  - `trace`  trace information (optional)\n   *\n   * @param {Object} cred\n   * @api public\n   */\n  Mechanism.prototype.response = function(cred) {\n    return cred.trace || '';\n  };\n  \n  /**\n   * Decode a challenge issued by the server.\n   *\n   * @param {String} chal\n   * @api public\n   */\n  Mechanism.prototype.challenge = function(chal) {\n  };\n\n  exports = module.exports = Mechanism;\n  \n}));\n"]},"metadata":{},"sourceType":"script"}