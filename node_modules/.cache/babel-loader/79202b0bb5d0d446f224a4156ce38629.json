{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\DragNDropImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nconst {\n  chats,\n  setChats,\n  activeChat\n} = useChat();\nconst {\n  user\n} = useAuth();\n\nconst onAddMessage = file => {\n  setChats(chats.map(item => {\n    if (activeChat) if (item.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n      item.messages.push({\n        id: `${item.messages.length + 1}`,\n        userName: user.name,\n        message: \"Carregando...\",\n        time: \"\",\n        isImageMessage: false,\n        isFileMessage: false,\n        isVideoMessage: false,\n        isAudioMessage: false,\n        fileUrl: \"\",\n        sendFile: file,\n        toUser: activeChat.id,\n        fromUser: user.id,\n        deliverStatus: DeliverStatus.SENDING,\n        readStatus: ReadStatus.UNREAD,\n        deliverTimestamp: \"\",\n        readTimestamp: \"\",\n        content: \"metadata\",\n        contentType: \"type\",\n        isReplyMessage: false,\n        isForwardMessage: false\n      });\n    }\n    return item;\n  }));\n};\n\nconst ImageUpload = ({\n  addFile,\n  files\n}) => {\n  const [warningMsg, setWarningMsg] = useState(\"\");\n\n  const onDrop = (accepted, rejected) => {\n    if (Object.keys(rejected).length !== 0) {\n      const message = \"Please submit valid file type\";\n      setWarningMsg(message);\n    } else {\n      addFile(accepted);\n      setWarningMsg(\"\");\n      console.log(accepted[0].preview);\n      var blobPromise = new Promise((resolve, reject) => {\n        const reader = new window.FileReader();\n        reader.readAsDataURL(accepted[0]);\n\n        reader.onloadend = () => {\n          const base64data = reader.result;\n          resolve(base64data);\n        };\n      });\n      blobPromise.then(value => {// console.log(value);\n      }); //________________________________________________________________\n\n      let file = files === null || files === void 0 ? void 0 : files.item(0);\n\n      if (file && file.size > 15728640) {\n        alert(\"Tamanho de arquivo \" + file.name + \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\");\n        return;\n      } else {\n        onAddMessage(file);\n      }\n    }\n  };\n\n  const thumbs = /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    },\n    src: files,\n    alt: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n  const render = Object.keys(files).length !== 0 ? /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, thumbs) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"+ image here to prompt users to click\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\",\n      border: \" 1px dashed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, warningMsg), /*#__PURE__*/React.createElement(Dropzone, {\n    multiple: false\n    /* accept=\"image/*\" */\n    ,\n    onDrop: (accepted, rejected) => onDrop(accepted, rejected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })), render)));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/DragNDropImageUpload.tsx"],"names":["React","useState","Dropzone","useAuth","useChat","DeliverStatus","ReadStatus","chats","setChats","activeChat","user","onAddMessage","file","map","item","id","messages","push","length","userName","name","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","ImageUpload","addFile","files","warningMsg","setWarningMsg","onDrop","accepted","rejected","Object","keys","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","size","alert","thumbs","width","height","borderRadius","objectFit","objectPosition","render","border","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\n\r\ninterface IProps{\r\n    addFile(value: any): any;\r\n    files: any;\r\n}\r\n\r\nconst { chats, setChats, activeChat } = useChat();\r\nconst { user } = useAuth();\r\n\r\nconst onAddMessage = (file: File) => {\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (activeChat)\r\n          if (item.id === activeChat?.id) {\r\n            item.messages.push({\r\n              id: `${item.messages.length + 1}`,\r\n              userName: user.name,\r\n              message: \"Carregando...\",\r\n              time: \"\",\r\n              isImageMessage: false,\r\n              isFileMessage: false,\r\n              isVideoMessage: false,\r\n              isAudioMessage: false,\r\n              fileUrl: \"\",\r\n              sendFile: file,\r\n              toUser: activeChat.id,\r\n              fromUser: user.id,\r\n              deliverStatus: DeliverStatus.SENDING,\r\n              readStatus: ReadStatus.UNREAD,\r\n              deliverTimestamp: \"\",\r\n              readTimestamp: \"\",\r\n              content: \"metadata\",\r\n              contentType: \"type\",\r\n              isReplyMessage: false,\r\n              isForwardMessage: false,\r\n            });\r\n          }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\nconst ImageUpload: React.FC<IProps> = ({ addFile, files }) => {\r\n  const [warningMsg, setWarningMsg] = useState(\"\");\r\n  const onDrop = (accepted: any, rejected: any) => {\r\n    if (Object.keys(rejected).length !== 0) {\r\n      const message = \"Please submit valid file type\";\r\n      setWarningMsg(message);\r\n    } else {\r\n      addFile(accepted);\r\n      setWarningMsg(\"\");\r\n      console.log(accepted[0].preview);\r\n\r\n      var blobPromise = new Promise((resolve, reject) => {\r\n        const reader = new window.FileReader();\r\n        reader.readAsDataURL(accepted[0]);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          resolve(base64data);\r\n        };\r\n      });\r\n      blobPromise.then(value => {\r\n        // console.log(value);\r\n      });\r\n      //________________________________________________________________\r\n        let file = files?.item(0);\r\n        if (file && file.size > 15728640) {\r\n          alert(\r\n            \"Tamanho de arquivo \" +\r\n              file.name +\r\n              \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n          );\r\n          return;\r\n        }else{\r\n          onAddMessage(file);\r\n        }\r\n    }\r\n  };\r\n\r\n    const thumbs = \r\n    <img style={{\r\n    width: \"150px\",\r\n    height: \"150px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"center\"}} \r\n    src={files} alt=\"profile\" />;\r\n\r\n    const render =\r\n      Object.keys(files).length !== 0 ? (\r\n        <aside>{thumbs}</aside>\r\n      ) : (\r\n        <p className=\"hello\">+ image here to prompt users to click</p>\r\n      );\r\n\r\n    return (\r\n      <div\r\n      style={{\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        objectFit: \"cover\",\r\n        objectPosition: \"center\",\r\n        border: \" 1px dashed\"\r\n      }}>\r\n        <p>{warningMsg}</p>\r\n\r\n        <Dropzone\r\n          multiple={false}\r\n          /* accept=\"image/*\" */\r\n          onDrop={(accepted, rejected) => onDrop(accepted, rejected)}\r\n        >\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {render}\r\n            </div>\r\n        )}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}