{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from\"react\";export var AuthContext=createContext({});export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState({id:\"\",name:\"\",email:\"\",status:\"offline\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState({email:\"\",name:\"\"}),_useState4=_slicedToArray(_useState3,2),changedUserData=_useState4[0],setChangedUserData=_useState4[1];var _useState5=useState({oldPassword:\"\",newPassword:\"\"}),_useState6=_slicedToArray(_useState5,2),changedUserPassword=_useState6[0],setChangedUserPassword=_useState6[1];return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{user:user,setUser:setUser,changedUserData:changedUserData,setChangedUserData:setChangedUserData,changedUserPassword:changedUserPassword,setChangedUserPassword:setChangedUserPassword}},children);};export function useAuth(){return useContext(AuthContext);}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/AuthContext.tsx"],"names":["React","createContext","useContext","useState","AuthContext","AuthProvider","children","id","name","email","status","user","setUser","changedUserData","setChangedUserData","oldPassword","newPassword","changedUserPassword","setChangedUserPassword","useAuth"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAcA,MAAO,IAAMC,CAAAA,WAAW,CAAGH,aAAa,CACtC,EADsC,CAAjC,CAIP,MAAO,IAAMI,CAAAA,YAAsB,CAAG,QAAzBA,CAAAA,YAAyB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eAC9BH,QAAQ,CAAQ,CAAEI,EAAE,CAAE,EAAN,CAAUC,IAAI,CAAE,EAAhB,CAAoBC,KAAK,CAAE,EAA3B,CAA+BC,MAAM,CAAE,SAAvC,CAAR,CADsB,wCAC/CC,IAD+C,eACzCC,OADyC,8BAERT,QAAQ,CAAmB,CAAEM,KAAK,CAAE,EAAT,CAAaD,IAAI,CAAE,EAAnB,CAAnB,CAFA,yCAE/CK,eAF+C,eAE9BC,kBAF8B,8BAGAX,QAAQ,CAAsB,CAAEY,WAAW,CAAE,EAAf,CAAmBC,WAAW,CAAE,EAAhC,CAAtB,CAHR,yCAG/CC,mBAH+C,eAG1BC,sBAH0B,eAKtD,mBACE,oBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLP,IAAI,CAAJA,IADK,CAELC,OAAO,CAAPA,OAFK,CAGLC,eAAe,CAAfA,eAHK,CAILC,kBAAkB,CAAlBA,kBAJK,CAKLG,mBAAmB,CAAnBA,mBALK,CAMLC,sBAAsB,CAAtBA,sBANK,CADT,EAUGZ,QAVH,CADF,CAcD,CAnBM,CAqBP,MAAO,SAASa,CAAAA,OAAT,EAAmB,CACxB,MAAOjB,CAAAA,UAAU,CAACE,WAAD,CAAjB,CACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport IUser from \"../alias/IUser\";\r\nimport IChangedDataUser from '../alias/IChangedUserData';\r\nimport IUserPasswordChange from \"../alias/IUserPasswordChange\";\r\n\r\ninterface IAuthContextData {\r\n  user: IUser;\r\n  setUser(value: IUser): void;\r\n  changedUserData: IChangedDataUser;\r\n  setChangedUserData(value: IChangedDataUser): void;\r\n  changedUserPassword: IUserPasswordChange,\r\n  setChangedUserPassword(value: IUserPasswordChange): void;\r\n}\r\n\r\nexport const AuthContext = createContext<IAuthContextData>(\r\n  {} as IAuthContextData\r\n);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUser>({ id: \"\", name: \"\", email: \"\", status: \"offline\"});\r\n  const [changedUserData, setChangedUserData] = useState<IChangedDataUser>({ email: \"\", name: \"\"});\r\n  const [changedUserPassword, setChangedUserPassword] = useState<IUserPasswordChange>({ oldPassword: \"\", newPassword: \"\"});\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        changedUserData,\r\n        setChangedUserData,\r\n        changedUserPassword,\r\n        setChangedUserPassword\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}