{"ast":null,"code":"'use strict';\n\nvar escape = require('./escape');\n\nvar escapeXML = escape.escapeXML;\nvar escapeXMLText = escape.escapeXMLText;\n\nvar equality = require('./equal');\n\nvar equal = equality.equal;\nvar nameEqual = equality.name;\nvar attrsEqual = equality.attrs;\nvar childrenEqual = equality.children;\n\nvar clone = require('./clone');\n/**\n * Element\n *\n * Attributes are in the element.attrs object. Children is a list of\n * either other Elements or Strings for text content.\n **/\n\n\nfunction Element(name, attrs) {\n  this.name = name;\n  this.parent = null;\n  this.children = [];\n  this.attrs = {};\n  this.setAttrs(attrs);\n}\n/* Accessors */\n\n/**\n * if (element.is('message', 'jabber:client')) ...\n **/\n\n\nElement.prototype.is = function (name, xmlns) {\n  return this.getName() === name && (!xmlns || this.getNS() === xmlns);\n};\n/* without prefix */\n\n\nElement.prototype.getName = function () {\n  if (this.name.indexOf(':') >= 0) {\n    return this.name.substr(this.name.indexOf(':') + 1);\n  } else {\n    return this.name;\n  }\n};\n/**\n * retrieves the namespace of the current element, upwards recursively\n **/\n\n\nElement.prototype.getNS = function () {\n  if (this.name.indexOf(':') >= 0) {\n    var prefix = this.name.substr(0, this.name.indexOf(':'));\n    return this.findNS(prefix);\n  }\n\n  return this.findNS();\n};\n/**\n * find the namespace to the given prefix, upwards recursively\n **/\n\n\nElement.prototype.findNS = function (prefix) {\n  if (!prefix) {\n    /* default namespace */\n    if (this.attrs.xmlns) {\n      return this.attrs.xmlns;\n    } else if (this.parent) {\n      return this.parent.findNS();\n    }\n  } else {\n    /* prefixed namespace */\n    var attr = 'xmlns:' + prefix;\n\n    if (this.attrs[attr]) {\n      return this.attrs[attr];\n    } else if (this.parent) {\n      return this.parent.findNS(prefix);\n    }\n  }\n};\n/**\n * Recursiverly gets all xmlns defined, in the form of {url:prefix}\n **/\n\n\nElement.prototype.getXmlns = function () {\n  var namespaces = {};\n\n  if (this.parent) {\n    namespaces = this.parent.getXmlns();\n  }\n\n  for (var attr in this.attrs) {\n    var m = attr.match('xmlns:?(.*)'); // eslint-disable-next-line  no-prototype-builtins\n\n    if (this.attrs.hasOwnProperty(attr) && m) {\n      namespaces[this.attrs[attr]] = m[1];\n    }\n  }\n\n  return namespaces;\n};\n\nElement.prototype.setAttrs = function (attrs) {\n  if (typeof attrs === 'string') {\n    this.attrs.xmlns = attrs;\n  } else if (attrs) {\n    Object.keys(attrs).forEach(function (key) {\n      this.attrs[key] = attrs[key];\n    }, this);\n  }\n};\n/**\n * xmlns can be null, returns the matching attribute.\n **/\n\n\nElement.prototype.getAttr = function (name, xmlns) {\n  if (!xmlns) {\n    return this.attrs[name];\n  }\n\n  var namespaces = this.getXmlns();\n\n  if (!namespaces[xmlns]) {\n    return null;\n  }\n\n  return this.attrs[[namespaces[xmlns], name].join(':')];\n};\n/**\n * xmlns can be null\n **/\n\n\nElement.prototype.getChild = function (name, xmlns) {\n  return this.getChildren(name, xmlns)[0];\n};\n/**\n * xmlns can be null\n **/\n\n\nElement.prototype.getChildren = function (name, xmlns) {\n  var result = [];\n\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n\n    if (child.getName && child.getName() === name && (!xmlns || child.getNS() === xmlns)) {\n      result.push(child);\n    }\n  }\n\n  return result;\n};\n/**\n * xmlns and recursive can be null\n **/\n\n\nElement.prototype.getChildByAttr = function (attr, val, xmlns, recursive) {\n  return this.getChildrenByAttr(attr, val, xmlns, recursive)[0];\n};\n/**\n * xmlns and recursive can be null\n **/\n\n\nElement.prototype.getChildrenByAttr = function (attr, val, xmlns, recursive) {\n  var result = [];\n\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n\n    if (child.attrs && child.attrs[attr] === val && (!xmlns || child.getNS() === xmlns)) {\n      result.push(child);\n    }\n\n    if (recursive && child.getChildrenByAttr) {\n      result.push(child.getChildrenByAttr(attr, val, xmlns, true));\n    }\n  }\n\n  if (recursive) {\n    result = [].concat.apply([], result);\n  }\n\n  return result;\n};\n\nElement.prototype.getChildrenByFilter = function (filter, recursive) {\n  var result = [];\n\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n\n    if (filter(child)) {\n      result.push(child);\n    }\n\n    if (recursive && child.getChildrenByFilter) {\n      result.push(child.getChildrenByFilter(filter, true));\n    }\n  }\n\n  if (recursive) {\n    result = [].concat.apply([], result);\n  }\n\n  return result;\n};\n\nElement.prototype.getText = function () {\n  var text = '';\n\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n\n    if (typeof child === 'string' || typeof child === 'number') {\n      text += child;\n    }\n  }\n\n  return text;\n};\n\nElement.prototype.getChildText = function (name, xmlns) {\n  var child = this.getChild(name, xmlns);\n  return child ? child.getText() : null;\n};\n/**\n * Return all direct descendents that are Elements.\n * This differs from `getChildren` in that it will exclude text nodes,\n * processing instructions, etc.\n */\n\n\nElement.prototype.getChildElements = function () {\n  return this.getChildrenByFilter(function (child) {\n    return child instanceof Element;\n  });\n};\n/* Builder */\n\n/** returns uppermost parent */\n\n\nElement.prototype.root = function () {\n  if (this.parent) {\n    return this.parent.root();\n  }\n\n  return this;\n};\n\nElement.prototype.tree = Element.prototype.root;\n/** just parent or itself */\n\nElement.prototype.up = function () {\n  if (this.parent) {\n    return this.parent;\n  }\n\n  return this;\n};\n/** create child node and return it */\n\n\nElement.prototype.c = function (name, attrs) {\n  return this.cnode(new Element(name, attrs));\n};\n\nElement.prototype.cnode = function (child) {\n  this.children.push(child);\n\n  if (typeof child === 'object') {\n    child.parent = this;\n  }\n\n  return child;\n};\n/** add text node and return element */\n\n\nElement.prototype.t = function (text) {\n  this.children.push(text);\n  return this;\n};\n/* Manipulation */\n\n/**\n * Either:\n *   el.remove(childEl)\n *   el.remove('author', 'urn:...')\n */\n\n\nElement.prototype.remove = function (el, xmlns) {\n  var filter;\n\n  if (typeof el === 'string') {\n    /* 1st parameter is tag name */\n    filter = function filter(child) {\n      return !(child.is && child.is(el, xmlns));\n    };\n  } else {\n    /* 1st parameter is element */\n    filter = function filter(child) {\n      return child !== el;\n    };\n  }\n\n  this.children = this.children.filter(filter);\n  return this;\n};\n\nElement.prototype.clone = function () {\n  return clone(this);\n};\n\nElement.prototype.text = function (val) {\n  if (val && this.children.length === 1) {\n    this.children[0] = val;\n    return this;\n  }\n\n  return this.getText();\n};\n\nElement.prototype.attr = function (attr, val) {\n  if (typeof val !== 'undefined' || val === null) {\n    if (!this.attrs) {\n      this.attrs = {};\n    }\n\n    this.attrs[attr] = val;\n    return this;\n  }\n\n  return this.attrs[attr];\n};\n/* Serialization */\n\n\nElement.prototype.toString = function () {\n  var s = '';\n  this.write(function (c) {\n    s += c;\n  });\n  return s;\n};\n\nElement.prototype.toJSON = function () {\n  return {\n    name: this.name,\n    attrs: this.attrs,\n    children: this.children.map(function (child) {\n      return child && child.toJSON ? child.toJSON() : child;\n    })\n  };\n};\n\nElement.prototype._addChildren = function (writer) {\n  writer('>');\n\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n    /* Skip null/undefined */\n\n    if (child || child === 0) {\n      if (child.write) {\n        child.write(writer);\n      } else if (typeof child === 'string') {\n        writer(escapeXMLText(child));\n      } else if (child.toString) {\n        writer(escapeXMLText(child.toString(10)));\n      }\n    }\n  }\n\n  writer('</');\n  writer(this.name);\n  writer('>');\n};\n\nElement.prototype.write = function (writer) {\n  writer('<');\n  writer(this.name);\n\n  for (var k in this.attrs) {\n    var v = this.attrs[k];\n\n    if (v != null) {\n      // === null || undefined\n      writer(' ');\n      writer(k);\n      writer('=\"');\n\n      if (typeof v !== 'string') {\n        v = v.toString();\n      }\n\n      writer(escapeXML(v));\n      writer('\"');\n    }\n  }\n\n  if (this.children.length === 0) {\n    writer('/>');\n  } else {\n    this._addChildren(writer);\n  }\n};\n\nElement.prototype.nameEquals = function (el) {\n  return nameEqual(this, el);\n};\n\nElement.prototype.attrsEquals = function (el) {\n  return attrsEqual(this, el);\n};\n\nElement.prototype.childrenEquals = function (el) {\n  return childrenEqual(this, el);\n};\n\nElement.prototype.equals = function (el) {\n  return equal(this, el);\n};\n\nmodule.exports = Element;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/ltx/lib/Element.js"],"names":["escape","require","escapeXML","escapeXMLText","equality","equal","nameEqual","name","attrsEqual","attrs","childrenEqual","children","clone","Element","parent","setAttrs","prototype","is","xmlns","getName","getNS","indexOf","substr","prefix","findNS","attr","getXmlns","namespaces","m","match","hasOwnProperty","Object","keys","forEach","key","getAttr","join","getChild","getChildren","result","i","length","child","push","getChildByAttr","val","recursive","getChildrenByAttr","concat","apply","getChildrenByFilter","filter","getText","text","getChildText","getChildElements","root","tree","up","c","cnode","t","remove","el","toString","s","write","toJSON","map","_addChildren","writer","k","v","nameEquals","attrsEquals","childrenEquals","equals","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar escape = require('./escape')\nvar escapeXML = escape.escapeXML\nvar escapeXMLText = escape.escapeXMLText\n\nvar equality = require('./equal')\nvar equal = equality.equal\nvar nameEqual = equality.name\nvar attrsEqual = equality.attrs\nvar childrenEqual = equality.children\n\nvar clone = require('./clone')\n\n/**\n * Element\n *\n * Attributes are in the element.attrs object. Children is a list of\n * either other Elements or Strings for text content.\n **/\nfunction Element (name, attrs) {\n  this.name = name\n  this.parent = null\n  this.children = []\n  this.attrs = {}\n  this.setAttrs(attrs)\n}\n\n/* Accessors */\n\n/**\n * if (element.is('message', 'jabber:client')) ...\n **/\nElement.prototype.is = function (name, xmlns) {\n  return (this.getName() === name) &&\n  (!xmlns || (this.getNS() === xmlns))\n}\n\n/* without prefix */\nElement.prototype.getName = function () {\n  if (this.name.indexOf(':') >= 0) {\n    return this.name.substr(this.name.indexOf(':') + 1)\n  } else {\n    return this.name\n  }\n}\n\n/**\n * retrieves the namespace of the current element, upwards recursively\n **/\nElement.prototype.getNS = function () {\n  if (this.name.indexOf(':') >= 0) {\n    var prefix = this.name.substr(0, this.name.indexOf(':'))\n    return this.findNS(prefix)\n  }\n  return this.findNS()\n}\n\n/**\n * find the namespace to the given prefix, upwards recursively\n **/\nElement.prototype.findNS = function (prefix) {\n  if (!prefix) {\n    /* default namespace */\n    if (this.attrs.xmlns) {\n      return this.attrs.xmlns\n    } else if (this.parent) {\n      return this.parent.findNS()\n    }\n  } else {\n    /* prefixed namespace */\n    var attr = 'xmlns:' + prefix\n    if (this.attrs[attr]) {\n      return this.attrs[attr]\n    } else if (this.parent) {\n      return this.parent.findNS(prefix)\n    }\n  }\n}\n\n/**\n * Recursiverly gets all xmlns defined, in the form of {url:prefix}\n **/\nElement.prototype.getXmlns = function () {\n  var namespaces = {}\n\n  if (this.parent) {\n    namespaces = this.parent.getXmlns()\n  }\n\n  for (var attr in this.attrs) {\n    var m = attr.match('xmlns:?(.*)')\n    // eslint-disable-next-line  no-prototype-builtins\n    if (this.attrs.hasOwnProperty(attr) && m) {\n      namespaces[this.attrs[attr]] = m[1]\n    }\n  }\n  return namespaces\n}\n\nElement.prototype.setAttrs = function (attrs) {\n  if (typeof attrs === 'string') {\n    this.attrs.xmlns = attrs\n  } else if (attrs) {\n    Object.keys(attrs).forEach(function (key) {\n      this.attrs[key] = attrs[key]\n    }, this)\n  }\n}\n\n/**\n * xmlns can be null, returns the matching attribute.\n **/\nElement.prototype.getAttr = function (name, xmlns) {\n  if (!xmlns) {\n    return this.attrs[name]\n  }\n\n  var namespaces = this.getXmlns()\n\n  if (!namespaces[xmlns]) {\n    return null\n  }\n\n  return this.attrs[[namespaces[xmlns], name].join(':')]\n}\n\n/**\n * xmlns can be null\n **/\nElement.prototype.getChild = function (name, xmlns) {\n  return this.getChildren(name, xmlns)[0]\n}\n\n/**\n * xmlns can be null\n **/\nElement.prototype.getChildren = function (name, xmlns) {\n  var result = []\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i]\n    if (child.getName &&\n      (child.getName() === name) &&\n      (!xmlns || (child.getNS() === xmlns))) {\n      result.push(child)\n    }\n  }\n  return result\n}\n\n/**\n * xmlns and recursive can be null\n **/\nElement.prototype.getChildByAttr = function (attr, val, xmlns, recursive) {\n  return this.getChildrenByAttr(attr, val, xmlns, recursive)[0]\n}\n\n/**\n * xmlns and recursive can be null\n **/\nElement.prototype.getChildrenByAttr = function (attr, val, xmlns, recursive) {\n  var result = []\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i]\n    if (child.attrs &&\n      (child.attrs[attr] === val) &&\n      (!xmlns || (child.getNS() === xmlns))) {\n      result.push(child)\n    }\n    if (recursive && child.getChildrenByAttr) {\n      result.push(child.getChildrenByAttr(attr, val, xmlns, true))\n    }\n  }\n  if (recursive) {\n    result = [].concat.apply([], result)\n  }\n  return result\n}\n\nElement.prototype.getChildrenByFilter = function (filter, recursive) {\n  var result = []\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i]\n    if (filter(child)) {\n      result.push(child)\n    }\n    if (recursive && child.getChildrenByFilter) {\n      result.push(child.getChildrenByFilter(filter, true))\n    }\n  }\n  if (recursive) {\n    result = [].concat.apply([], result)\n  }\n  return result\n}\n\nElement.prototype.getText = function () {\n  var text = ''\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i]\n    if ((typeof child === 'string') || (typeof child === 'number')) {\n      text += child\n    }\n  }\n  return text\n}\n\nElement.prototype.getChildText = function (name, xmlns) {\n  var child = this.getChild(name, xmlns)\n  return child ? child.getText() : null\n}\n\n/**\n * Return all direct descendents that are Elements.\n * This differs from `getChildren` in that it will exclude text nodes,\n * processing instructions, etc.\n */\nElement.prototype.getChildElements = function () {\n  return this.getChildrenByFilter(function (child) {\n    return child instanceof Element\n  })\n}\n\n/* Builder */\n\n/** returns uppermost parent */\nElement.prototype.root = function () {\n  if (this.parent) {\n    return this.parent.root()\n  }\n  return this\n}\nElement.prototype.tree = Element.prototype.root\n\n/** just parent or itself */\nElement.prototype.up = function () {\n  if (this.parent) {\n    return this.parent\n  }\n  return this\n}\n\n/** create child node and return it */\nElement.prototype.c = function (name, attrs) {\n  return this.cnode(new Element(name, attrs))\n}\n\nElement.prototype.cnode = function (child) {\n  this.children.push(child)\n  if (typeof child === 'object') {\n    child.parent = this\n  }\n  return child\n}\n\n/** add text node and return element */\nElement.prototype.t = function (text) {\n  this.children.push(text)\n  return this\n}\n\n/* Manipulation */\n\n/**\n * Either:\n *   el.remove(childEl)\n *   el.remove('author', 'urn:...')\n */\nElement.prototype.remove = function (el, xmlns) {\n  var filter\n  if (typeof el === 'string') {\n    /* 1st parameter is tag name */\n    filter = function (child) {\n      return !(child.is &&\n      child.is(el, xmlns))\n    }\n  } else {\n    /* 1st parameter is element */\n    filter = function (child) {\n      return child !== el\n    }\n  }\n\n  this.children = this.children.filter(filter)\n\n  return this\n}\n\nElement.prototype.clone = function () {\n  return clone(this)\n}\n\nElement.prototype.text = function (val) {\n  if (val && this.children.length === 1) {\n    this.children[0] = val\n    return this\n  }\n  return this.getText()\n}\n\nElement.prototype.attr = function (attr, val) {\n  if (typeof val !== 'undefined' || val === null) {\n    if (!this.attrs) {\n      this.attrs = {}\n    }\n    this.attrs[attr] = val\n    return this\n  }\n  return this.attrs[attr]\n}\n\n/* Serialization */\n\nElement.prototype.toString = function () {\n  var s = ''\n  this.write(function (c) {\n    s += c\n  })\n  return s\n}\n\nElement.prototype.toJSON = function () {\n  return {\n    name: this.name,\n    attrs: this.attrs,\n    children: this.children.map(function (child) {\n      return child && child.toJSON ? child.toJSON() : child\n    })\n  }\n}\n\nElement.prototype._addChildren = function (writer) {\n  writer('>')\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i]\n    /* Skip null/undefined */\n    if (child || (child === 0)) {\n      if (child.write) {\n        child.write(writer)\n      } else if (typeof child === 'string') {\n        writer(escapeXMLText(child))\n      } else if (child.toString) {\n        writer(escapeXMLText(child.toString(10)))\n      }\n    }\n  }\n  writer('</')\n  writer(this.name)\n  writer('>')\n}\n\nElement.prototype.write = function (writer) {\n  writer('<')\n  writer(this.name)\n  for (var k in this.attrs) {\n    var v = this.attrs[k]\n    if (v != null) { // === null || undefined\n      writer(' ')\n      writer(k)\n      writer('=\"')\n      if (typeof v !== 'string') {\n        v = v.toString()\n      }\n      writer(escapeXML(v))\n      writer('\"')\n    }\n  }\n  if (this.children.length === 0) {\n    writer('/>')\n  } else {\n    this._addChildren(writer)\n  }\n}\n\nElement.prototype.nameEquals = function (el) {\n  return nameEqual(this, el)\n}\n\nElement.prototype.attrsEquals = function (el) {\n  return attrsEqual(this, el)\n}\n\nElement.prototype.childrenEquals = function (el) {\n  return childrenEqual(this, el)\n}\n\nElement.prototype.equals = function (el) {\n  return equal(this, el)\n}\n\nmodule.exports = Element\n"]},"metadata":{},"sourceType":"script"}