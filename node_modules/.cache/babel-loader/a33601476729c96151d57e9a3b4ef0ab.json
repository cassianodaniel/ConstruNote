{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInputAttachedFileButton.tsx\";\nimport React from \"react\";\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nimport { useTranslation } from \"react-i18next\";\nimport Swal from 'sweetalert2';\n\nconst ChatInputAttachedFileButton = () => {\n  const {\n    chats,\n    setChats,\n    activeChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n\n  const handleFileChange = e => {\n    let files = e.target.files;\n    if ((files === null || files === void 0 ? void 0 : files.length) === 0) return;\n    let file = files === null || files === void 0 ? void 0 : files.item(0);\n\n    if (file && file.size > 15728640) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'File size must be less than 15mb!',\n        footer: '',\n        customClass: {\n          popup: \"swal-big-popup\"\n        }\n      });\n      return;\n    }\n\n    if (file) {\n      onAddFile(file);\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n\n  const onAddFile = file => {\n    console.log(file);\n    setChats(chats.map(cht => {\n      if (activeChat) if (cht.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n        var _activeChat$attachedF;\n\n        cht.messages.push({\n          id: `${cht.messages.length + 1}`,\n          userName: user.name,\n          message: \"Carregando...\",\n          time: \"\",\n          isImageMessage: false,\n          isFileMessage: false,\n          isVideoMessage: false,\n          isAudioMessage: false,\n          fileUrl: \"\",\n          sendFile: file,\n          toUser: activeChat.id,\n          fromUser: user.id,\n          deliverStatus: DeliverStatus.SENDING,\n          readStatus: ReadStatus.UNREAD,\n          deliverTimestamp: \"\",\n          readTimestamp: \"\",\n          content: \"metadata\",\n          contentType: \"type\",\n          isReplyMessage: false,\n          isForwardMessage: false\n        });\n        (_activeChat$attachedF = activeChat.attachedFileList) === null || _activeChat$attachedF === void 0 ? void 0 : _activeChat$attachedF.push();\n      }\n      return cht;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"files\",\n    className: \"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-attachment-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleFileChange,\n    type: \"file\",\n    name: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"files\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, t(\"Attach File\")));\n};\n\nexport default ChatInputAttachedFileButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInputAttachedFileButton.tsx"],"names":["React","Input","UncontrolledTooltip","Label","useAuth","useChat","DeliverStatus","ReadStatus","useTranslation","Swal","ChatInputAttachedFileButton","chats","setChats","activeChat","user","handleFileChange","e","files","target","length","file","item","size","fire","icon","title","text","footer","customClass","popup","onAddFile","t","console","log","map","cht","id","messages","push","userName","name","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","attachedFileList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ChatInputAttachedFileButton: React.FC = () => {\r\n  const { chats, setChats, activeChat } = useChat();\r\n  const { user } = useAuth();\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    if (files?.length === 0) return;\r\n    let file = files?.item(0);\r\n    if (file && file.size > 15728640) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'File size must be less than 15mb!',\r\n        footer: '',\r\n        customClass: {\r\n          popup: \"swal-big-popup\"\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    if (file) {\r\n      onAddFile(file);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onAddFile = (file: File) => {\r\n    console.log(file);\r\n    setChats(\r\n      chats.map((cht) => {\r\n        if (activeChat)\r\n          if (cht.id === activeChat?.id) {\r\n            cht.messages.push({\r\n              id: `${cht.messages.length + 1}`,\r\n              userName: user.name,\r\n              message: \"Carregando...\",\r\n              time: \"\",\r\n              isImageMessage: false,\r\n              isFileMessage: false,\r\n              isVideoMessage: false,\r\n              isAudioMessage: false,\r\n              fileUrl: \"\",\r\n              sendFile: file,\r\n              toUser: activeChat.id,\r\n              fromUser: user.id,\r\n              deliverStatus: DeliverStatus.SENDING,\r\n              readStatus: ReadStatus.UNREAD,\r\n              deliverTimestamp: \"\",\r\n              readTimestamp: \"\",\r\n              content: \"metadata\",\r\n              contentType: \"type\",\r\n              isReplyMessage: false,\r\n              isForwardMessage: false,\r\n            });\r\n            activeChat.attachedFileList?.push();\r\n          }\r\n        return cht;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li className=\"list-inline-item input-file\">\r\n      <Label\r\n        id=\"files\"\r\n        className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"\r\n      >\r\n        <i className=\"ri-attachment-line\"></i>\r\n        <Input onChange={handleFileChange} type=\"file\" name=\"fileInput\" />\r\n      </Label>\r\n      <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n        {t(\"Attach File\")}\r\n      </UncontrolledTooltip>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatInputAttachedFileButton;\r\n"]},"metadata":{},"sourceType":"module"}