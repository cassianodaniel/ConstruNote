{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessageMenuOption.tsx\";\nimport React from \"react\";\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"../contexts/ModalContext\";\n/* import { copyFile } from \"fs\"; */\n\nimport useCopy from \"@react-hook/copy\";\nimport { useChat } from \"../contexts/ChatContext\";\n\nconst ChatMessageMenuOption = ({\n  activeChat,\n  message\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    setShowModalForwardMessageTo\n  } = useModal();\n  const {\n    setReplyMsg,\n    setFavoriteMessagePayload\n  } = useChat();\n  const {\n    copy\n  } = useCopy(message.message);\n\n  if (!activeChat.isTyping) {\n    return /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      className: \"align-self-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      tag: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ri-more-2-fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: copy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, t(\"Copy\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ri-file-copy-line float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => {\n        setReplyMsg(message);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, t(\"Reply\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ri-reply-line float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => {\n        setFavoriteMessagePayload({\n          messageId: message.id,\n          contactTo: activeChat.id,\n          contactType: activeChat.chatType,\n          message: message.message,\n          messageDate: message.time.split(\"T\").join(\" \").slice(0, 18)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, t(\"Favorite\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ri-star-line float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => setShowModalForwardMessageTo(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, t(\"Forward\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ri-group-line float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default ChatMessageMenuOption;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageMenuOption.tsx"],"names":["React","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","useTranslation","useModal","useCopy","useChat","ChatMessageMenuOption","activeChat","message","t","setShowModalForwardMessageTo","setReplyMsg","setFavoriteMessagePayload","copy","isTyping","messageId","id","contactTo","contactType","chatType","messageDate","time","split","join","slice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\n/* import { copyFile } from \"fs\"; */\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n}\r\n\r\n\r\nconst ChatMessageMenuOption: React.FC<IProps> = ({ activeChat, message }) => {\r\n  const { t } = useTranslation();\r\n  const { setShowModalForwardMessageTo } = useModal();\r\n  const { setReplyMsg, setFavoriteMessagePayload } = useChat();\r\n  const { copy } = useCopy(message.message);\r\n\r\n\r\n  if (!activeChat.isTyping) {\r\n    return (\r\n      <UncontrolledDropdown className=\"align-self-start\">\r\n        <DropdownToggle tag=\"a\">\r\n          <i className=\"ri-more-2-fill\"></i>\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={copy}>\r\n            {t(\"Copy\")}\r\n            <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          {/* <DropdownItem>\r\n            {t(\"Save\")} <i className=\"ri-save-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n          <DropdownItem\r\n            onClick={() => {\r\n              setReplyMsg(message);\r\n            }}\r\n          >\r\n            {t(\"Reply\")}{\" \"}\r\n            <i className=\"ri-reply-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={() => {\r\n              setFavoriteMessagePayload({\r\n                messageId: message.id,\r\n                contactTo: activeChat.id,\r\n                contactType: activeChat.chatType,\r\n                message: message.message,\r\n                messageDate: message.time.split(\"T\").join(\" \").slice(0, 18)\r\n              });\r\n            }}\r\n          >\r\n            {t(\"Favorite\")}{\" \"}\r\n            <i className=\"ri-star-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => setShowModalForwardMessageTo(message)}>\r\n            {t(\"Forward\")}{\" \"}\r\n            <i className=\"ri-group-line float-right text-muted\" />\r\n          </DropdownItem>\r\n          {/* <DropdownItem onClick={() => deleteMessage(message.id)}>\r\n            Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default ChatMessageMenuOption;\r\n"]},"metadata":{},"sourceType":"module"}