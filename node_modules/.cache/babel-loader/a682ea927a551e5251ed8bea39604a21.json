{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\MainBox.tsx\";\nimport React from \"react\"; //Import Components\n\nimport { useCall } from \"../contexts/CallContext\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport CallStatus from \"../enuns/CallStatus\";\nimport ScreenType from \"../enuns/ScreenType\";\nimport CallManager from \"./CallManager\";\nimport ChatBox from \"./ChatBox\";\nimport ParticipantsDrawer from \"./ParticipantsDrawer\";\nimport VideoBox from \"./VideoBox\";\nimport Welcome from \"./Welcome\";\n\nconst MainBox = () => {\n  const {\n    currentCalls\n  } = useCall();\n  const {\n    screen\n  } = useMainBox();\n  const ringCall = Array.from(currentCalls.values()).find(call => call.callStatus === CallStatus.CALLING);\n\n  function showScreen() {\n    switch (screen) {\n      case ScreenType.WELCOME:\n        return /*#__PURE__*/React.createElement(Welcome, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        });\n\n      case ScreenType.CHAT:\n        return /*#__PURE__*/React.createElement(ChatBox, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 16\n          }\n        });\n\n      case ScreenType.CALL_MANAGER:\n        return /*#__PURE__*/React.createElement(CallManager, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, showScreen(), ringCall && /*#__PURE__*/React.createElement(\"audio\", {\n    autoPlay: true,\n    loop: true,\n    src: require(\"../assets/audio/ring.mp3\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VideoBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ParticipantsDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MainBox;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MainBox.tsx"],"names":["React","useCall","useMainBox","CallStatus","ScreenType","CallManager","ChatBox","ParticipantsDrawer","VideoBox","Welcome","MainBox","currentCalls","screen","ringCall","Array","from","values","find","call","callStatus","CALLING","showScreen","WELCOME","CHAT","CALL_MANAGER","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAmBV,OAAO,EAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,UAAU,EAA7B;AACA,QAAMW,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWJ,YAAY,CAACK,MAAb,EAAX,EAAkCC,IAAlC,CACdC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoBhB,UAAU,CAACiB,OAD1B,CAAjB;;AAIA,WAASC,UAAT,GAAsB;AACpB,YAAQT,MAAR;AACE,WAAKR,UAAU,CAACkB,OAAhB;AACE,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAKlB,UAAU,CAACmB,IAAhB;AACE,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAKnB,UAAU,CAACoB,YAAhB;AACE,4BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AANJ;AAQD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,EADb,EAEGR,QAAQ,iBACP;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,GAAG,EAAEY,OAAO,CAAC,0BAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA5BD;;AA8BA,eAAef,OAAf","sourcesContent":["import React from \"react\";\r\n\r\n//Import Components\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport CallStatus from \"../enuns/CallStatus\";\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport CallManager from \"./CallManager\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport ParticipantsDrawer from \"./ParticipantsDrawer\";\r\nimport VideoBox from \"./VideoBox\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nconst MainBox = () => {\r\n  const { currentCalls } = useCall();\r\n  const { screen } = useMainBox();\r\n  const ringCall = Array.from(currentCalls.values()).find(\r\n    (call) => call.callStatus === CallStatus.CALLING\r\n  );\r\n\r\n  function showScreen() {\r\n    switch (screen) {\r\n      case ScreenType.WELCOME:\r\n        return <Welcome />;\r\n      case ScreenType.CHAT:\r\n        return <ChatBox />;\r\n      case ScreenType.CALL_MANAGER:\r\n        return <CallManager />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showScreen()}\r\n      {ringCall && (\r\n        <audio autoPlay loop src={require(\"../assets/audio/ring.mp3\")} />\r\n      )}\r\n      <VideoBox />\r\n      <ParticipantsDrawer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainBox;\r\n"]},"metadata":{},"sourceType":"module"}