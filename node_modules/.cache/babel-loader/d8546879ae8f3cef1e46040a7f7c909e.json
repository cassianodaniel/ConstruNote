{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyParticipantLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport { useTranslation } from 'react-i18next';\n\nconst CopyParticipantLinkButtonInActiveCall = ({\n  participantLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(participantLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      toast.success(t('Copied to clipboard a participant invite!'), {\n        position: \"top-center\",\n        autoClose: 1700,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        progress: undefined\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 1,\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default CopyParticipantLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyParticipantLinkButtonInActiveCall.tsx"],"names":["React","Button","ToastContainer","toast","useCopy","useTranslation","CopyParticipantLinkButtonInActiveCall","participantLink","buttonIcon","copy","t","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined","backgroundColor","borderRadius","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAOA,MAAMC,qCAAwF,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAChI,QAAM;AAAEC,IAAAA;AAAF,MAAWL,OAAO,CAACG,eAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,sBACI,uDACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACfI,MAAAA,IAAI;AACJN,MAAAA,KAAK,CAACQ,OAAN,CAAcD,CAAC,CAAC,2CAAD,CAAf,EAA8D;AAC9DE,QAAAA,QAAQ,EAAE,YADoD;AAE9DC,QAAAA,SAAS,EAAE,IAFmD;AAG9DC,QAAAA,eAAe,EAAE,IAH6C;AAI9DC,QAAAA,YAAY,EAAE,IAJgD;AAK9DC,QAAAA,YAAY,EAAE,IALgD;AAM9DC,QAAAA,QAAQ,EAAEC;AANoD,OAA9D;AAQC,KAbD;AAcA,IAAA,SAAS,EAAC,2BAdV;AAeA,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAE,OADd;AAEHC,MAAAA,YAAY,EAAE,CAFX;AAGHC,MAAAA,KAAK,EAAE;AAHJ,KAfP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAqBA;AAAG,IAAA,SAAS,EAAEb,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBA,CAFJ,CADJ;AA4BH,CA/BD;;AAiCA,eAAeF,qCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ICopyParticipantLinkButtonInActiveCall{\r\n    participantLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\nconst CopyParticipantLinkButtonInActiveCall : React.FC<ICopyParticipantLinkButtonInActiveCall> = ({participantLink, buttonIcon}) => {\r\n    const { copy } = useCopy(participantLink);\r\n    const { t } = useTranslation();\r\n    return(\r\n        <>\r\n            <ToastContainer/>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n            copy();\r\n            toast.success(t('Copied to clipboard a participant invite!'), {\r\n            position: \"top-center\",\r\n            autoClose: 1700,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            progress: undefined,\r\n            });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: 1,\r\n                color: \"black\",\r\n            }}\r\n            >\r\n            <i className={buttonIcon}></i>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CopyParticipantLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}