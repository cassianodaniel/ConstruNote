{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\contexts\\\\ErrorContext.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useChat } from \"./ChatContext\";\nexport const ErrorContext = createContext({});\nexport const ErrorProvider = ({\n  children\n}) => {\n  const {\n    chats,\n    setChats\n  } = useChat();\n  const [imgError, setImgError] = useState();\n\n  const onImgError = () => {\n    console.log(imgError);\n\n    if (imgError) {\n      setChats(chats.map(cht => {\n        if (cht.jid === imgError.jid) {\n          cht.profilePicture = undefined;\n        }\n\n        return cht;\n      }));\n      setImgError(undefined);\n    }\n  };\n\n  useEffect(onImgError, [imgError]);\n  return /*#__PURE__*/React.createElement(ErrorContext.Provider, {\n    value: {\n      imgError,\n      setImgError\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport function useError() {\n  return useContext(ErrorContext);\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/ErrorContext.tsx"],"names":["React","createContext","useContext","useEffect","useState","useChat","ErrorContext","ErrorProvider","children","chats","setChats","imgError","setImgError","onImgError","console","log","map","cht","jid","profilePicture","undefined","useError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AAIA,SAASC,OAAT,QAAwB,eAAxB;AAOA,OAAO,MAAMC,YAAY,GAAGL,aAAa,CACvC,EADuC,CAAlC;AAIP,OAAO,MAAMM,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,OAAO,EAAnC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;;AAGA,QAAMS,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAIA,QAAJ,EAAc;AACZD,MAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,GAAD,IAAS;AACjB,YAAIA,GAAG,CAACC,GAAJ,KAAYP,QAAQ,CAACO,GAAzB,EAA8B;AAC5BD,UAAAA,GAAG,CAACE,cAAJ,GAAqBC,SAArB;AACD;;AACD,eAAOH,GAAP;AACD,OALD,CADM,CAAR;AAQAL,MAAAA,WAAW,CAACQ,SAAD,CAAX;AACD;AACF,GAbD;;AAcAjB,EAAAA,SAAS,CAACU,UAAD,EAAa,CAACF,QAAD,CAAb,CAAT;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,QADK;AAELC,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,QANH,CADF;AAUD,CA9BM;AAgCP,OAAO,SAASa,QAAT,GAAoB;AACzB,SAAOnB,UAAU,CAACI,YAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport IUser from \"../alias/IUser\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport IChat from \"../alias/IChat\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\ninterface IErrorContextData {\r\n  imgError: IUser | IGroup | IChat | undefined;\r\n  setImgError(data: IUser | IGroup | IChat | undefined): void;\r\n}\r\n\r\nexport const ErrorContext = createContext<IErrorContextData>(\r\n  {} as IErrorContextData\r\n);\r\n\r\nexport const ErrorProvider: React.FC = ({ children }) => {\r\n  const { chats, setChats } = useChat();\r\n  const [imgError, setImgError] = useState<\r\n    IUser | IGroup | IChat | undefined\r\n  >();\r\n  const onImgError = () => {\r\n    console.log(imgError);\r\n    if (imgError) {\r\n      setChats(\r\n        chats.map((cht) => {\r\n          if (cht.jid === imgError.jid) {\r\n            cht.profilePicture = undefined;\r\n          }\r\n          return cht;\r\n        })\r\n      );\r\n      setImgError(undefined);\r\n    }\r\n  };\r\n  useEffect(onImgError, [imgError]);\r\n  return (\r\n    <ErrorContext.Provider\r\n      value={{\r\n        imgError,\r\n        setImgError,\r\n      }}\r\n    >\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useError() {\r\n  return useContext(ErrorContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}