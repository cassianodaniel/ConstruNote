{"ast":null,"code":"import { invariant } from '../utils';\nimport { Type } from '../../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\n\nexport function SingularRelativeTimeUnit(unit) {\n  invariant(Type(unit) === 'String', 'unit must be a string');\n  if (unit === 'seconds') return 'second';\n  if (unit === 'minutes') return 'minute';\n  if (unit === 'hours') return 'hour';\n  if (unit === 'days') return 'day';\n  if (unit === 'weeks') return 'week';\n  if (unit === 'months') return 'month';\n  if (unit === 'quarters') return 'quarter';\n  if (unit === 'years') return 'year';\n\n  if (unit !== 'second' && unit !== 'minute' && unit !== 'hour' && unit !== 'day' && unit !== 'week' && unit !== 'month' && unit !== 'quarter' && unit !== 'year') {\n    throw new RangeError('invalid unit');\n  }\n\n  return unit;\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/RelativeTimeFormat/SingularRelativeTimeUnit.js"],"names":["invariant","Type","SingularRelativeTimeUnit","unit","RangeError"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA;;;;;AAIA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AAC3CH,EAAAA,SAAS,CAACC,IAAI,CAACE,IAAD,CAAJ,KAAe,QAAhB,EAA0B,uBAA1B,CAAT;AACA,MAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;AACJ,MAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;AACJ,MAAIA,IAAI,KAAK,MAAb,EACI,OAAO,KAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;AACJ,MAAIA,IAAI,KAAK,QAAb,EACI,OAAO,OAAP;AACJ,MAAIA,IAAI,KAAK,UAAb,EACI,OAAO,SAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;;AACJ,MAAIA,IAAI,KAAK,QAAT,IACAA,IAAI,KAAK,QADT,IAEAA,IAAI,KAAK,MAFT,IAGAA,IAAI,KAAK,KAHT,IAIAA,IAAI,KAAK,MAJT,IAKAA,IAAI,KAAK,OALT,IAMAA,IAAI,KAAK,SANT,IAOAA,IAAI,KAAK,MAPb,EAOqB;AACjB,UAAM,IAAIC,UAAJ,CAAe,cAAf,CAAN;AACH;;AACD,SAAOD,IAAP;AACH","sourcesContent":["import { invariant } from '../utils';\nimport { Type } from '../../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\nexport function SingularRelativeTimeUnit(unit) {\n    invariant(Type(unit) === 'String', 'unit must be a string');\n    if (unit === 'seconds')\n        return 'second';\n    if (unit === 'minutes')\n        return 'minute';\n    if (unit === 'hours')\n        return 'hour';\n    if (unit === 'days')\n        return 'day';\n    if (unit === 'weeks')\n        return 'week';\n    if (unit === 'months')\n        return 'month';\n    if (unit === 'quarters')\n        return 'quarter';\n    if (unit === 'years')\n        return 'year';\n    if (unit !== 'second' &&\n        unit !== 'minute' &&\n        unit !== 'hour' &&\n        unit !== 'day' &&\n        unit !== 'week' &&\n        unit !== 'month' &&\n        unit !== 'quarter' &&\n        unit !== 'year') {\n        throw new RangeError('invalid unit');\n    }\n    return unit;\n}\n"]},"metadata":{},"sourceType":"module"}