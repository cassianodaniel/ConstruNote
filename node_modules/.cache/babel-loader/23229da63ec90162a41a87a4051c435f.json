{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{RegistererState,SessionState}from\"sip.js\";import{Events}from\"./voice/types/types\";import SIP from\"./voice/voicecommunicator\";var SquadVoiceCommunicator=/*#__PURE__*/function(){function SquadVoiceCommunicator(settings,cb){var _this=this;var constraints=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,SquadVoiceCommunicator);this.settings=settings;this.constraints=constraints;this.onMakeCall=function(state,inviter){console.log(\"Session state changed to \".concat(state));switch(state){case SessionState.Initial:_this.notify(Events.MAKE_CALL,inviter);break;case SessionState.Establishing:break;case SessionState.Established:var _ref=_this.sip.setupRemoteMedia(inviter,_this.getSpeakerId())||{},receivingVideo=_ref.receivingVideo,tagId=_ref.tagId;_this.notify(Events.CALL_ON_GOING,{inviter:inviter,receivingVideo:receivingVideo,tagId:tagId});break;case SessionState.Terminating:// fall through\ncase SessionState.Terminated:_this.notify(Events.CALL_HANGUP,inviter);_this.sip.activeCalls.delete(inviter.id);_this.sip.cleanupMedia(inviter.id);break;default:throw new Error(\"Unknown session state.\");}};this.acceptCall=function(call,useVideo){var acceptedCall={callId:call.id,useVideo:useVideo};_this.updateConstraintsParams({useVideo:useVideo});call.accept({sessionDescriptionHandlerOptions:{constraints:_this.getConstraints()}});_this.notify(Events.ACCEPTED_CALL,acceptedCall);};this.onReceiveCall=function(state,invitation){console.log(\"Session state changed to \".concat(state));switch(state){case SessionState.Initial:_this.notify(Events.RECEIVED_CALL,invitation);break;case SessionState.Establishing:break;case SessionState.Established:var _ref2=_this.sip.setupRemoteMedia(invitation,_this.getSpeakerId())||{},receivingVideo=_ref2.receivingVideo,tagId=_ref2.tagId;_this.notify(Events.CALL_ON_GOING,{invitation:invitation,receivingVideo:receivingVideo,tagId:tagId});break;case SessionState.Terminating:// fall through\ncase SessionState.Terminated:_this.notify(Events.CALL_HANGUP,invitation);_this.sip.activeCalls.delete(invitation.id);_this.sip.cleanupMedia(invitation.id);break;default:break;}};this.muteMic=function(callId){_this.notify(Events.MUTE_MIC,{callId:callId,status:true});_this.sip.muteMic(callId);};this.unMuteMic=function(callId){_this.notify(Events.MUTE_MIC,{callId:callId,status:false});_this.sip.unMuteMic(callId);};this.disableCam=function(callId){_this.notify(Events.MUTE_CAM,{callId:callId,status:true});_this.sip.disableCam(callId);};this.enableCam=function(callId){_this.notify(Events.MUTE_CAM,{callId:callId,status:false});_this.sip.enableCam(callId);};this.holdCall=function(callId){_this.notify(Events.HOLD_CALL,{callId:callId,status:true});_this.sip.holdCall(callId);};this.unHoldCall=function(callId){Array.from(_this.sip.activeCalls.values()).filter(function(cl){return cl.id!==callId;}).forEach(function(call){_this.sip.holdCall(call.id);_this.notify(Events.HOLD_CALL,{callId:call.id,status:true});});_this.notify(Events.HOLD_CALL,{callId:callId,status:false});_this.sip.unHoldCall(callId);};this.nextSubscriptionId=0;this.subscriptions=new Map();this.makeSIP();}_createClass(SquadVoiceCommunicator,[{key:\"makeSIP\",value:function makeSIP(){var _this2=this;this.settings.get(function(settings){_this2.sip=new SIP({user:settings.sipUser,password:settings.sipPw,domain:settings.sipDomain,wsURL:\"\",connectionCB:_this2.connectionListener.bind(_this2),onMakeCall:_this2.onMakeCall.bind(_this2),onReceiveCall:_this2.onReceiveCall.bind(_this2)});});}},{key:\"getConstraints\",value:function getConstraints(){var newConstraints={video:this.constraints.useVideo&&this.constraints.videoId?{deviceId:this.constraints.videoId}:this.constraints.useVideo||false,audio:this.constraints.audioId?{deviceId:this.constraints.audioId}:true};return newConstraints;}},{key:\"getSpeakerId\",value:function getSpeakerId(){return this.constraints.speakerId;}},{key:\"updateConstraintsParams\",value:function updateConstraintsParams(params){this.constraints=_objectSpread(_objectSpread({},this.constraints),params);}},{key:\"connectionListener\",value:function connectionListener(data){switch(data){case RegistererState.Initial:break;case RegistererState.Registered:this.notify(Events.CONNECTED);break;case RegistererState.Terminated:this.notify(Events.DISCONNECTED);break;case RegistererState.Unregistered:this.notify(Events.UNREGISTERED);break;}}},{key:\"makeCall\",value:function makeCall(number){var constraints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.constraints;this.updateConstraintsParams(constraints);this.sip.invite(number,this.getConstraints());}},{key:\"subscribe\",// < -- Observer Pattern https://refactoring.guru/pt-br/design-patterns/observer\nvalue:function subscribe(subscribeCallback){var _this$subscriptions;(_this$subscriptions=this.subscriptions)===null||_this$subscriptions===void 0?void 0:_this$subscriptions.set(this.nextSubscriptionId||0,subscribeCallback);if(this.nextSubscriptionId)this.nextSubscriptionId+=1;}},{key:\"removeSubscription\",value:function removeSubscription(id){var _this$subscriptions2;(_this$subscriptions2=this.subscriptions)===null||_this$subscriptions2===void 0?void 0:_this$subscriptions2.delete(id);}},{key:\"removeAllSubscription\",value:function removeAllSubscription(){this.subscriptions=new Map();}},{key:\"notify\",value:function notify(event){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(this.subscriptions){this.subscriptions.forEach(function(subscribeCallback){if(subscribeCallback)subscribeCallback(event,data);});}}// -- >\n}]);return SquadVoiceCommunicator;}();export{SquadVoiceCommunicator as default};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadVoiceCommunicator.ts"],"names":["RegistererState","SessionState","Events","SIP","SquadVoiceCommunicator","settings","cb","constraints","onMakeCall","state","inviter","console","log","Initial","notify","MAKE_CALL","Establishing","Established","sip","setupRemoteMedia","getSpeakerId","receivingVideo","tagId","CALL_ON_GOING","Terminating","Terminated","CALL_HANGUP","activeCalls","delete","id","cleanupMedia","Error","acceptCall","call","useVideo","acceptedCall","callId","updateConstraintsParams","accept","sessionDescriptionHandlerOptions","getConstraints","ACCEPTED_CALL","onReceiveCall","invitation","RECEIVED_CALL","muteMic","MUTE_MIC","status","unMuteMic","disableCam","MUTE_CAM","enableCam","holdCall","HOLD_CALL","unHoldCall","Array","from","values","filter","cl","forEach","nextSubscriptionId","subscriptions","Map","makeSIP","get","user","sipUser","password","sipPw","domain","sipDomain","wsURL","connectionCB","connectionListener","bind","newConstraints","video","videoId","deviceId","audio","audioId","speakerId","params","data","Registered","CONNECTED","DISCONNECTED","Unregistered","UNREGISTERED","number","invite","subscribeCallback","set","event"],"mappings":"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","sourcesContent":["import {\r\n  Invitation,\r\n  Inviter,\r\n  RegistererState,\r\n  Session,\r\n  SessionState,\r\n} from \"sip.js\";\r\nimport SettingsBusiness from \"./business/Settings\";\r\nimport { Events, SubscriptionCallBack } from \"./voice/types/types\";\r\nimport SIP from \"./voice/voicecommunicator\";\r\nexport interface UpdateConstraintsParams {\r\n  useVideo?: boolean;\r\n  videoId?: string;\r\n  audioId?: string;\r\n  speakerId?: string;\r\n}\r\nexport default interface SquadVoiceCommunicator {\r\n  sip: SIP;\r\n  nextSubscriptionId?: number;\r\n  subscriptions?: Map<number, SubscriptionCallBack>;\r\n}\r\nexport default class SquadVoiceCommunicator {\r\n  constructor(\r\n    private settings: SettingsBusiness,\r\n    cb: SubscriptionCallBack,\r\n    private constraints: UpdateConstraintsParams = {}\r\n  ) {\r\n    this.nextSubscriptionId = 0;\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n    this.makeSIP();\r\n  }\r\n  makeSIP() {\r\n    this.settings.get((settings) => {\r\n      this.sip = new SIP({\r\n        user: settings.sipUser,\r\n        password: settings.sipPw,\r\n        domain: settings.sipDomain,\r\n        wsURL: \"\",\r\n        connectionCB: this.connectionListener.bind(this),\r\n        onMakeCall: this.onMakeCall.bind(this),\r\n        onReceiveCall: this.onReceiveCall.bind(this),\r\n      });\r\n    });\r\n  }\r\n  getConstraints() {\r\n    const newConstraints: MediaStreamConstraints = {\r\n      video:\r\n        this.constraints.useVideo && this.constraints.videoId\r\n          ? {\r\n              deviceId: this.constraints.videoId,\r\n            }\r\n          : this.constraints.useVideo || false,\r\n      audio: this.constraints.audioId\r\n        ? {\r\n            deviceId: this.constraints.audioId,\r\n          }\r\n        : true,\r\n    };\r\n    return newConstraints;\r\n  }\r\n  getSpeakerId() {\r\n    return this.constraints.speakerId;\r\n  }\r\n  updateConstraintsParams(params: UpdateConstraintsParams) {\r\n    this.constraints = { ...this.constraints, ...params };\r\n  }\r\n  connectionListener(data: RegistererState) {\r\n    switch (data) {\r\n      case RegistererState.Initial:\r\n        break;\r\n      case RegistererState.Registered:\r\n        this.notify(Events.CONNECTED);\r\n        break;\r\n      case RegistererState.Terminated:\r\n        this.notify(Events.DISCONNECTED);\r\n        break;\r\n      case RegistererState.Unregistered:\r\n        this.notify(Events.UNREGISTERED);\r\n        break;\r\n    }\r\n  }\r\n  makeCall(\r\n    number: string,\r\n    constraints: UpdateConstraintsParams = this.constraints\r\n  ) {\r\n    this.updateConstraintsParams(constraints);\r\n    this.sip.invite(number, this.getConstraints());\r\n  }\r\n  onMakeCall = (state: SessionState, inviter: Inviter) => {\r\n    console.log(`Session state changed to ${state}`);\r\n    switch (state) {\r\n      case SessionState.Initial:\r\n        this.notify(Events.MAKE_CALL, inviter);\r\n        break;\r\n      case SessionState.Establishing:\r\n        break;\r\n      case SessionState.Established:\r\n        const { receivingVideo, tagId } =\r\n          this.sip.setupRemoteMedia(inviter, this.getSpeakerId()) || {};\r\n        this.notify(Events.CALL_ON_GOING, { inviter, receivingVideo, tagId });\r\n        break;\r\n      case SessionState.Terminating:\r\n      // fall through\r\n      case SessionState.Terminated:\r\n        this.notify(Events.CALL_HANGUP, inviter);\r\n        this.sip.activeCalls.delete(inviter.id);\r\n        this.sip.cleanupMedia(inviter.id);\r\n        break;\r\n      default:\r\n        throw new Error(\"Unknown session state.\");\r\n    }\r\n  };\r\n  acceptCall = (call: Session, useVideo: boolean) => {\r\n    const acceptedCall = { callId: call.id, useVideo };\r\n    this.updateConstraintsParams({ useVideo });\r\n    (call as Invitation).accept({\r\n      sessionDescriptionHandlerOptions: {\r\n        constraints: this.getConstraints(),\r\n      },\r\n    });\r\n    this.notify(Events.ACCEPTED_CALL, acceptedCall);\r\n  };\r\n  onReceiveCall = (state: SessionState, invitation: Invitation) => {\r\n    console.log(`Session state changed to ${state}`);\r\n    switch (state) {\r\n      case SessionState.Initial:\r\n        this.notify(Events.RECEIVED_CALL, invitation);\r\n        break;\r\n      case SessionState.Establishing:\r\n        break;\r\n      case SessionState.Established:\r\n        const { receivingVideo, tagId } =\r\n          this.sip.setupRemoteMedia(invitation, this.getSpeakerId()) || {};\r\n        this.notify(Events.CALL_ON_GOING, {\r\n          invitation,\r\n          receivingVideo,\r\n          tagId,\r\n        });\r\n        break;\r\n      case SessionState.Terminating:\r\n      // fall through\r\n      case SessionState.Terminated:\r\n        this.notify(Events.CALL_HANGUP, invitation);\r\n        this.sip.activeCalls.delete(invitation.id);\r\n        this.sip.cleanupMedia(invitation.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  muteMic = (callId: string) => {\r\n    this.notify(Events.MUTE_MIC, { callId, status: true });\r\n    this.sip.muteMic(callId);\r\n  };\r\n  unMuteMic = (callId: string) => {\r\n    this.notify(Events.MUTE_MIC, { callId, status: false });\r\n    this.sip.unMuteMic(callId);\r\n  };\r\n  disableCam = (callId: string) => {\r\n    this.notify(Events.MUTE_CAM, { callId, status: true });\r\n    this.sip.disableCam(callId);\r\n  };\r\n  enableCam = (callId: string) => {\r\n    this.notify(Events.MUTE_CAM, { callId, status: false });\r\n    this.sip.enableCam(callId);\r\n  };\r\n  holdCall = (callId: string) => {\r\n    this.notify(Events.HOLD_CALL, { callId, status: true });\r\n    this.sip.holdCall(callId);\r\n  };\r\n  unHoldCall = (callId: string) => {\r\n    Array.from(this.sip.activeCalls.values())\r\n      .filter((cl) => cl.id !== callId)\r\n      .forEach((call) => {\r\n        this.sip.holdCall(call.id);\r\n        this.notify(Events.HOLD_CALL, { callId: call.id, status: true });\r\n      });\r\n    this.notify(Events.HOLD_CALL, { callId, status: false });\r\n    this.sip.unHoldCall(callId);\r\n  };\r\n\r\n  // < -- Observer Pattern https://refactoring.guru/pt-br/design-patterns/observer\r\n  subscribe(subscribeCallback: SubscriptionCallBack) {\r\n    this.subscriptions?.set(this.nextSubscriptionId || 0, subscribeCallback);\r\n    if (this.nextSubscriptionId) this.nextSubscriptionId += 1;\r\n  }\r\n  removeSubscription(id: number) {\r\n    this.subscriptions?.delete(id);\r\n  }\r\n  removeAllSubscription() {\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n  }\r\n  notify(event: Events, data: any = null) {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach((subscribeCallback) => {\r\n        if (subscribeCallback) subscribeCallback(event, data);\r\n      });\r\n    }\r\n  }\r\n  // -- >\r\n}\r\n"]},"metadata":{},"sourceType":"module"}