{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{RegistererState,SessionState}from\"sip.js\";import{Events}from\"./voice/types\";import SIP from\"./voice/voicecommunicator\";var SquadVoiceCommunicator=/*#__PURE__*/function(){function SquadVoiceCommunicator(settings,cb){var _this=this;var constraints=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,SquadVoiceCommunicator);this.settings=settings;this.constraints=constraints;this.onMakeCall=function(state,inviter){console.log(\"Session state changed to \".concat(state));switch(state){case SessionState.Initial:_this.notify(Events.MAKE_CALL,inviter);break;case SessionState.Establishing:break;case SessionState.Established:var _ref=_this.sip.setupRemoteMedia(inviter,_this.getSpeakerId())||{},receivingVideo=_ref.receivingVideo,tagId=_ref.tagId;_this.notify(Events.CALL_ON_GOING,{inviter:inviter,receivingVideo:receivingVideo,tagId:tagId});break;case SessionState.Terminating:// fall through\ncase SessionState.Terminated:_this.notify(Events.CALL_HANGUP,inviter);_this.sip.activeCalls.delete(inviter.id);_this.sip.cleanupMedia(inviter.id);break;default:throw new Error(\"Unknown session state.\");}};this.onReceiveCall=function(state,invitation){console.log(\"Session state changed to \".concat(state));switch(state){case SessionState.Initial:_this.notify(Events.RECEIVED_CALL,invitation);break;case SessionState.Establishing:break;case SessionState.Established:var _ref2=_this.sip.setupRemoteMedia(invitation,_this.getSpeakerId())||{},receivingVideo=_ref2.receivingVideo,tagId=_ref2.tagId;_this.notify(Events.CALL_ON_GOING,{invitation:invitation,receivingVideo:receivingVideo,tagId:tagId});break;case SessionState.Terminating:// fall through\ncase SessionState.Terminated:_this.notify(Events.CALL_HANGUP,invitation);_this.sip.activeCalls.delete(invitation.id);_this.sip.cleanupMedia(invitation.id);break;default:break;}};this.muteMic=function(callId){_this.notify(Events.MUTE_MIC,{callId:callId,status:true});_this.sip.muteMic(callId);};this.unMuteMic=function(callId){_this.notify(Events.MUTE_MIC,{callId:callId,status:false});_this.sip.unMuteMic(callId);};this.disableCam=function(callId){_this.notify(Events.MUTE_CAM,{callId:callId,status:true});_this.sip.disableCam(callId);};this.enableCam=function(callId){_this.notify(Events.MUTE_CAM,{callId:callId,status:false});_this.sip.enableCam(callId);};this.holdCall=function(callId){_this.notify(Events.HOLD_CALL,{callId:callId,status:true});_this.sip.holdCall(callId);};this.unHoldCall=function(callId){_this.notify(Events.HOLD_CALL,{callId:callId,status:false});_this.sip.unHoldCall(callId);};this.nextSubscriptionId=0;this.subscriptions=new Map();this.makeSIP();}_createClass(SquadVoiceCommunicator,[{key:\"makeSIP\",value:function makeSIP(){var _this2=this;this.settings.get(function(settings){_this2.sip=new SIP({user:settings.sipUser,password:settings.sipPw,domain:settings.sipDomain,wsURL:\"\",connectionCB:_this2.connectionListener.bind(_this2),onMakeCall:_this2.onMakeCall.bind(_this2),onReceiveCall:_this2.onReceiveCall.bind(_this2)});});}},{key:\"getConstraints\",value:function getConstraints(){var newConstraints={video:this.constraints.useVideo&&this.constraints.videoId?{deviceId:this.constraints.videoId}:this.constraints.useVideo||false,audio:this.constraints.audioId?{deviceId:this.constraints.audioId}:true};return newConstraints;}},{key:\"getSpeakerId\",value:function getSpeakerId(){return this.constraints.speakerId;}},{key:\"updateConstraintsParams\",value:function updateConstraintsParams(params){this.constraints=_objectSpread(_objectSpread({},this.constraints),params);}},{key:\"connectionListener\",value:function connectionListener(data){switch(data){case RegistererState.Initial:break;case RegistererState.Registered:this.notify(Events.CONNECTED);break;case RegistererState.Terminated:this.notify(Events.DISCONNECTED);break;case RegistererState.Unregistered:this.notify(Events.UNREGISTERED);break;}}},{key:\"makeCall\",value:function makeCall(number){var constraints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.constraints;this.updateConstraintsParams(constraints);this.sip.invite(number,this.getConstraints());}},{key:\"subscribe\",// < -- Observer Pattern https://refactoring.guru/pt-br/design-patterns/observer\nvalue:function subscribe(subscribeCallback){var _this$subscriptions;(_this$subscriptions=this.subscriptions)===null||_this$subscriptions===void 0?void 0:_this$subscriptions.set(this.nextSubscriptionId||0,subscribeCallback);if(this.nextSubscriptionId)this.nextSubscriptionId+=1;}},{key:\"removeSubscription\",value:function removeSubscription(id){var _this$subscriptions2;(_this$subscriptions2=this.subscriptions)===null||_this$subscriptions2===void 0?void 0:_this$subscriptions2.delete(id);}},{key:\"removeAllSubscription\",value:function removeAllSubscription(){this.subscriptions=new Map();}},{key:\"notify\",value:function notify(event){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(this.subscriptions){this.subscriptions.forEach(function(subscribeCallback){if(subscribeCallback)subscribeCallback(event,data);});}}// -- >\n}]);return SquadVoiceCommunicator;}();export{SquadVoiceCommunicator as default};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadVoiceCommunicator.ts"],"names":["RegistererState","SessionState","Events","SIP","SquadVoiceCommunicator","settings","cb","constraints","onMakeCall","state","inviter","console","log","Initial","notify","MAKE_CALL","Establishing","Established","sip","setupRemoteMedia","getSpeakerId","receivingVideo","tagId","CALL_ON_GOING","Terminating","Terminated","CALL_HANGUP","activeCalls","delete","id","cleanupMedia","Error","onReceiveCall","invitation","RECEIVED_CALL","muteMic","callId","MUTE_MIC","status","unMuteMic","disableCam","MUTE_CAM","enableCam","holdCall","HOLD_CALL","unHoldCall","nextSubscriptionId","subscriptions","Map","makeSIP","get","user","sipUser","password","sipPw","domain","sipDomain","wsURL","connectionCB","connectionListener","bind","newConstraints","video","useVideo","videoId","deviceId","audio","audioId","speakerId","params","data","Registered","CONNECTED","DISCONNECTED","Unregistered","UNREGISTERED","number","updateConstraintsParams","invite","getConstraints","subscribeCallback","set","event","forEach"],"mappings":"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","sourcesContent":["import { Invitation, Inviter, RegistererState, SessionState } from \"sip.js\";\r\nimport SettingsBusiness from \"./business/Settings\";\r\nimport { Events, SubscriptionCallBack } from \"./voice/types\";\r\nimport SIP from \"./voice/voicecommunicator\";\r\nexport interface UpdateConstraintsParams {\r\n  useVideo?: boolean;\r\n  videoId?: string;\r\n  audioId?: string;\r\n  speakerId?: string;\r\n}\r\nexport default interface SquadVoiceCommunicator {\r\n  sip: SIP;\r\n  nextSubscriptionId?: number;\r\n  subscriptions?: Map<number, SubscriptionCallBack>;\r\n}\r\nexport default class SquadVoiceCommunicator {\r\n  constructor(\r\n    private settings: SettingsBusiness,\r\n    cb: SubscriptionCallBack,\r\n    private constraints: UpdateConstraintsParams = {}\r\n  ) {\r\n    this.nextSubscriptionId = 0;\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n    this.makeSIP();\r\n  }\r\n  makeSIP() {\r\n    this.settings.get((settings) => {\r\n      this.sip = new SIP({\r\n        user: settings.sipUser,\r\n        password: settings.sipPw,\r\n        domain: settings.sipDomain,\r\n        wsURL: \"\",\r\n        connectionCB: this.connectionListener.bind(this),\r\n        onMakeCall: this.onMakeCall.bind(this),\r\n        onReceiveCall: this.onReceiveCall.bind(this),\r\n      });\r\n    });\r\n  }\r\n  getConstraints() {\r\n    const newConstraints: MediaStreamConstraints = {\r\n      video:\r\n        this.constraints.useVideo && this.constraints.videoId\r\n          ? {\r\n              deviceId: this.constraints.videoId,\r\n            }\r\n          : this.constraints.useVideo || false,\r\n      audio: this.constraints.audioId\r\n        ? {\r\n            deviceId: this.constraints.audioId,\r\n          }\r\n        : true,\r\n    };\r\n    return newConstraints;\r\n  }\r\n  getSpeakerId() {\r\n    return this.constraints.speakerId;\r\n  }\r\n  updateConstraintsParams(params: UpdateConstraintsParams) {\r\n    this.constraints = { ...this.constraints, ...params };\r\n  }\r\n  connectionListener(data: RegistererState) {\r\n    switch (data) {\r\n      case RegistererState.Initial:\r\n        break;\r\n      case RegistererState.Registered:\r\n        this.notify(Events.CONNECTED);\r\n        break;\r\n      case RegistererState.Terminated:\r\n        this.notify(Events.DISCONNECTED);\r\n        break;\r\n      case RegistererState.Unregistered:\r\n        this.notify(Events.UNREGISTERED);\r\n        break;\r\n    }\r\n  }\r\n  makeCall(\r\n    number: string,\r\n    constraints: UpdateConstraintsParams = this.constraints\r\n  ) {\r\n    this.updateConstraintsParams(constraints);\r\n    this.sip.invite(number, this.getConstraints());\r\n  }\r\n  onMakeCall = (state: SessionState, inviter: Inviter) => {\r\n    console.log(`Session state changed to ${state}`);\r\n    switch (state) {\r\n      case SessionState.Initial:\r\n        this.notify(Events.MAKE_CALL, inviter);\r\n        break;\r\n      case SessionState.Establishing:\r\n        break;\r\n      case SessionState.Established:\r\n        const { receivingVideo, tagId } =\r\n          this.sip.setupRemoteMedia(inviter, this.getSpeakerId()) || {};\r\n        this.notify(Events.CALL_ON_GOING, { inviter, receivingVideo, tagId });\r\n        break;\r\n      case SessionState.Terminating:\r\n      // fall through\r\n      case SessionState.Terminated:\r\n        this.notify(Events.CALL_HANGUP, inviter);\r\n        this.sip.activeCalls.delete(inviter.id);\r\n        this.sip.cleanupMedia(inviter.id);\r\n        break;\r\n      default:\r\n        throw new Error(\"Unknown session state.\");\r\n    }\r\n  };\r\n  onReceiveCall = (state: SessionState, invitation: Invitation) => {\r\n    console.log(`Session state changed to ${state}`);\r\n    switch (state) {\r\n      case SessionState.Initial:\r\n        this.notify(Events.RECEIVED_CALL, invitation);\r\n        break;\r\n      case SessionState.Establishing:\r\n        break;\r\n      case SessionState.Established:\r\n        const { receivingVideo, tagId } =\r\n          this.sip.setupRemoteMedia(invitation, this.getSpeakerId()) || {};\r\n        this.notify(Events.CALL_ON_GOING, {\r\n          invitation,\r\n          receivingVideo,\r\n          tagId,\r\n        });\r\n        break;\r\n      case SessionState.Terminating:\r\n      // fall through\r\n      case SessionState.Terminated:\r\n        this.notify(Events.CALL_HANGUP, invitation);\r\n        this.sip.activeCalls.delete(invitation.id);\r\n        this.sip.cleanupMedia(invitation.id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  muteMic = (callId: string) => {\r\n    this.notify(Events.MUTE_MIC, { callId, status: true });\r\n    this.sip.muteMic(callId);\r\n  };\r\n  unMuteMic = (callId: string) => {\r\n    this.notify(Events.MUTE_MIC, { callId, status: false });\r\n    this.sip.unMuteMic(callId);\r\n  };\r\n  disableCam = (callId: string) => {\r\n    this.notify(Events.MUTE_CAM, { callId, status: true });\r\n    this.sip.disableCam(callId);\r\n  };\r\n  enableCam = (callId: string) => {\r\n    this.notify(Events.MUTE_CAM, { callId, status: false });\r\n    this.sip.enableCam(callId);\r\n  };\r\n  holdCall = (callId: string) => {\r\n    this.notify(Events.HOLD_CALL, { callId, status: true });\r\n    this.sip.holdCall(callId);\r\n  };\r\n  unHoldCall = (callId: string) => {\r\n    this.notify(Events.HOLD_CALL, { callId, status: false });\r\n    this.sip.unHoldCall(callId);\r\n  };\r\n\r\n  // < -- Observer Pattern https://refactoring.guru/pt-br/design-patterns/observer\r\n  subscribe(subscribeCallback: SubscriptionCallBack) {\r\n    this.subscriptions?.set(this.nextSubscriptionId || 0, subscribeCallback);\r\n    if (this.nextSubscriptionId) this.nextSubscriptionId += 1;\r\n  }\r\n  removeSubscription(id: number) {\r\n    this.subscriptions?.delete(id);\r\n  }\r\n  removeAllSubscription() {\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n  }\r\n  notify(event: Events, data: any = null) {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach((subscribeCallback) => {\r\n        if (subscribeCallback) subscribeCallback(event, data);\r\n      });\r\n    }\r\n  }\r\n  // -- >\r\n}\r\n"]},"metadata":{},"sourceType":"module"}