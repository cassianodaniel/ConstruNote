{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationGr from \"./locales/gr/translation.json\";\nimport translationIT from \"./locales/it/translation.json\";\nimport translationSP from \"./locales/sp/translation.json\";\nimport translationRS from \"./locales/rs/translation.json\";\nimport translationENG from \"./locales/en/translation.json\"; //translations\n\nconst resources = {\n  gr: {\n    translation: translationGr\n  },\n  it: {\n    translation: translationIT\n  },\n  sp: {\n    translation: translationSP\n  },\n  rs: {\n    translation: translationRS\n  },\n  eng: {\n    translation: translationENG\n  }\n};\ni18n.use(detector).use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: \"en\",\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/i18n.ts"],"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationSP","translationRS","translationENG","resources","gr","translation","it","sp","rs","eng","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEP;AADX,GADY;AAIhBQ,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEN;AADX,GAJY;AAOhBQ,EAAAA,EAAE,EAAE;AACFF,IAAAA,WAAW,EAAEL;AADX,GAPY;AAUhBQ,EAAAA,EAAE,EAAE;AACFH,IAAAA,WAAW,EAAEJ;AADX,GAVY;AAahBQ,EAAAA,GAAG,EAAE;AACHJ,IAAAA,WAAW,EAAEH;AADV;AAbW,CAAlB;AAkBAP,IAAI,CACDe,GADH,CACOd,QADP,EAEGc,GAFH,CAEOb,gBAFP,EAEyB;AAFzB,CAGGc,IAHH,CAGQ;AACJR,EAAAA,SADI;AAEJS,EAAAA,GAAG,EAAE,IAFD;AAGJC,EAAAA,WAAW,EAAE,IAHT;AAGe;AAEnBC,EAAAA,YAAY,EAAE,KALV;AAKiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAPX,CAHR;AAeA,eAAerB,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport translationGr from \"./locales/gr/translation.json\";\r\nimport translationIT from \"./locales/it/translation.json\";\r\nimport translationSP from \"./locales/sp/translation.json\";\r\nimport translationRS from \"./locales/rs/translation.json\";\r\nimport translationENG from \"./locales/en/translation.json\";\r\n\r\n//translations\r\nconst resources = {\r\n  gr: {\r\n    translation: translationGr,\r\n  },\r\n  it: {\r\n    translation: translationIT,\r\n  },\r\n  sp: {\r\n    translation: translationSP,\r\n  },\r\n  rs: {\r\n    translation: translationRS,\r\n  },\r\n  eng: {\r\n    translation: translationENG,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}