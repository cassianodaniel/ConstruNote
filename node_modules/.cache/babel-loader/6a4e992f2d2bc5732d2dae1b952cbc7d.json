{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar Context = require('./Context');\n\nvar JID = require('@xmpp/jid');\n\nmodule.exports = /*#__PURE__*/function (_Context) {\n  _inherits(OutgoingContext, _Context);\n\n  var _super = _createSuper(OutgoingContext);\n\n  function OutgoingContext(entity, stanza) {\n    var _this;\n\n    _classCallCheck(this, OutgoingContext);\n\n    _this = _super.call(this, entity, stanza);\n    var jid = entity.jid,\n        domain = entity.domain;\n    var from = stanza.attrs.from || jid && jid.toString();\n    var to = stanza.attrs.to || domain;\n    if (from) _this.from = new JID(from);\n\n    if (to) {\n      _this.to = new JID(to);\n      _this.local = _this.to.local;\n      _this.domain = _this.to.domain;\n      _this.resource = _this.to.resource;\n    }\n\n    return _this;\n  }\n\n  return OutgoingContext;\n}(Context);","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/middleware/lib/OutgoingContext.js"],"names":["Context","require","JID","module","exports","entity","stanza","jid","domain","from","attrs","toString","to","local","resource"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE,2BAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,MAAN,EAAcC,MAAd;AAD0B,QAGnBC,GAHmB,GAGJF,MAHI,CAGnBE,GAHmB;AAAA,QAGdC,MAHc,GAGJH,MAHI,CAGdG,MAHc;AAK1B,QAAMC,IAAI,GAAGH,MAAM,CAACI,KAAP,CAAaD,IAAb,IAAsBF,GAAG,IAAIA,GAAG,CAACI,QAAJ,EAA1C;AACA,QAAMC,EAAE,GAAGN,MAAM,CAACI,KAAP,CAAaE,EAAb,IAAmBJ,MAA9B;AAEA,QAAIC,IAAJ,EAAU,MAAKA,IAAL,GAAY,IAAIP,GAAJ,CAAQO,IAAR,CAAZ;;AAEV,QAAIG,EAAJ,EAAQ;AACN,YAAKA,EAAL,GAAU,IAAIV,GAAJ,CAAQU,EAAR,CAAV;AACA,YAAKC,KAAL,GAAa,MAAKD,EAAL,CAAQC,KAArB;AACA,YAAKL,MAAL,GAAc,MAAKI,EAAL,CAAQJ,MAAtB;AACA,YAAKM,QAAL,GAAgB,MAAKF,EAAL,CAAQE,QAAxB;AACD;;AAfyB;AAgB3B;;AAjBH;AAAA,EAA+Cd,OAA/C","sourcesContent":["'use strict'\n\nconst Context = require('./Context')\nconst JID = require('@xmpp/jid')\n\nmodule.exports = class OutgoingContext extends Context {\n  constructor(entity, stanza) {\n    super(entity, stanza)\n\n    const {jid, domain} = entity\n\n    const from = stanza.attrs.from || (jid && jid.toString())\n    const to = stanza.attrs.to || domain\n\n    if (from) this.from = new JID(from)\n\n    if (to) {\n      this.to = new JID(to)\n      this.local = this.to.local\n      this.domain = this.to.domain\n      this.resource = this.to.resource\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}