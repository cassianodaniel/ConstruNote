{"ast":null,"code":"// ( + [ ) ? \\ *\nexport const SearchParticipants = (contacts, search) => {\n  if (search.includes('@') || search.includes('(') || search.includes(')') || search.includes('[') || search.includes(']') || search.includes('+') || search.includes('-') || search.includes('/') || search.includes('?') || search.includes('*') || search.includes(';') || search.includes(':') || search.includes(',') || search.includes('.') || search.includes('|') || search.includes('=') || search.includes('!') || search.includes('#') || search.includes('$') || search.includes('%') || search.includes('¨') || search.includes('&') || search.includes('_') || search.includes('{') || search.includes('}') || search.includes('º') || search.includes('ª')) {\n    return [];\n  } else {\n    return contacts.filter(item => {\n      return item.name.toUpperCase().match(search.toUpperCase());\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/helpers/SearchParticipants.ts"],"names":["SearchParticipants","contacts","search","includes","filter","item","name","toUpperCase","match"],"mappings":"AACA;AAEA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,QAAD,EAAuBC,MAAvB,KAA0C;AAC1E,MACEA,MAAM,CAACC,QAAP,CAAgB,GAAhB,KACAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CADA,IAEAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAFA,IAGAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAHA,IAIAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAJA,IAKAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CALA,IAMAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CANA,IAOAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAPA,IAQAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CARA,IASAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CATA,IAUAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAVA,IAWAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAXA,IAYAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAZA,IAaAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAbA,IAcAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAdA,IAeAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAfA,IAgBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAhBA,IAiBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAjBA,IAkBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAlBA,IAmBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAnBA,IAoBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CApBA,IAqBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CArBA,IAsBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAtBA,IAuBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAvBA,IAwBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAxBA,IAyBAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CAzBA,IA0BAD,MAAM,CAACC,QAAP,CAAgB,GAAhB,CA3BF,EA4BC;AACC,WAAO,EAAP;AACD,GA9BD,MA8BK;AACH,WAAOF,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IAAU;AAC/B,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,KAAxB,CAA8BN,MAAM,CAACK,WAAP,EAA9B,CAAP;AACD,KAFM,CAAP;AAGD;AACF,CApCM","sourcesContent":["import IContact from \"../alias/IContact\";\r\n// ( + [ ) ? \\ *\r\n\r\nexport const SearchParticipants = (contacts: IContact[], search: string) => {\r\n  if(\r\n    search.includes('@') || \r\n    search.includes('(') || \r\n    search.includes(')') || \r\n    search.includes('[') || \r\n    search.includes(']') ||\r\n    search.includes('+') || \r\n    search.includes('-') || \r\n    search.includes('/') || \r\n    search.includes('?') || \r\n    search.includes('*') ||\r\n    search.includes(';') ||\r\n    search.includes(':') ||\r\n    search.includes(',') ||\r\n    search.includes('.') ||\r\n    search.includes('|') ||\r\n    search.includes('=') ||\r\n    search.includes('!') ||\r\n    search.includes('#') ||\r\n    search.includes('$') ||\r\n    search.includes('%') ||\r\n    search.includes('¨') ||\r\n    search.includes('&') ||\r\n    search.includes('_') ||\r\n    search.includes('{') ||\r\n    search.includes('}') ||\r\n    search.includes('º') ||\r\n    search.includes('ª')\r\n  ){\r\n    return [];\r\n  }else{\r\n    return contacts.filter((item) => {\r\n      return item.name.toUpperCase().match(search.toUpperCase());\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}