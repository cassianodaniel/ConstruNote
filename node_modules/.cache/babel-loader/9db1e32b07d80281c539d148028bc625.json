{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyModeratorLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nconst CopyModeratorLinkButtonInActiveCall = ({\n  moderatorLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(moderatorLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      toast.success('Copied to clipboard a moderator invite!', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    style: {\n      color: \"black\",\n      cursor: \"pointer\",\n      marginLeft: \"5px\",\n      fontSize: \"18px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      backgroundColor: \"white\",\n      height: 15,\n      width: 15,\n      borderRadius: 3\n    },\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CopyModeratorLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyModeratorLinkButtonInActiveCall.tsx"],"names":["React","Button","useCopy","useTranslation","toast","CopyModeratorLinkButtonInActiveCall","moderatorLink","buttonIcon","copy","t","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","color","cursor","marginLeft","fontSize","padding","backgroundColor","height","width","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAQA,MAAMC,mCAAoF,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAC1H,QAAM;AAAEC,IAAAA;AAAF,MAAWN,OAAO,CAACI,aAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACA,sBACI,uDACI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACXK,MAAAA,IAAI;AACJJ,MAAAA,KAAK,CAACM,OAAN,CAAc,yCAAd,EAAyD;AACzDC,QAAAA,QAAQ,EAAE,YAD+C;AAEzDC,QAAAA,SAAS,EAAE,IAF8C;AAGzDC,QAAAA,eAAe,EAAE,KAHwC;AAIzDC,QAAAA,YAAY,EAAE,IAJ2C;AAKzDC,QAAAA,YAAY,EAAE,IAL2C;AAMzDC,QAAAA,SAAS,EAAE,IAN8C;AAOzDC,QAAAA,QAAQ,EAAEC;AAP+C,OAAzD;AASH,KAdD;AAeA,IAAA,SAAS,EAAC,2BAfV;AAgBA,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,MAAM,EAAE,SAFL;AAGHC,MAAAA,UAAU,EAAE,KAHT;AAIHC,MAAAA,QAAQ,EAAE,MAJP;AAKHC,MAAAA,OAAO,EAAE;AALN,KAhBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAwBI;AAAG,IAAA,KAAK,EAAE;AACNC,MAAAA,eAAe,EAAE,OADX;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,YAAY,EAAE;AAJR,KAAV;AAMA,IAAA,SAAS,EAAEpB,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADJ,CADJ;AAoCH,CAvCD;;AAyCA,eAAeF,mCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport interface ICopyModeratorLinkButtonInActiveCall{\r\n    moderatorLink: string,\r\n    buttonIcon: string\r\n\r\n}\r\n\r\nconst CopyModeratorLinkButtonInActiveCall : React.FC<ICopyModeratorLinkButtonInActiveCall> = ({moderatorLink, buttonIcon}) => {\r\n    const { copy } = useCopy(moderatorLink);    \r\n    const { t } = useTranslation();\r\n    return(\r\n        <>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n                copy();\r\n                toast.success('Copied to clipboard a moderator invite!', {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            style={{\r\n                color: \"black\",\r\n                cursor: \"pointer\",\r\n                marginLeft: \"5px\",\r\n                fontSize: \"18px\",\r\n                padding: \"5px\",\r\n            }}\r\n            >\r\n                <i style={{\r\n                    backgroundColor: \"white\",\r\n                    height: 15,\r\n                    width: 15,\r\n                    borderRadius: 3,\r\n                }}\r\n                className={buttonIcon}></i>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CopyModeratorLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}