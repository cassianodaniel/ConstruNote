{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInput.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Input, Row, Col, UncontrolledTooltip, ButtonDropdown, DropdownToggle, DropdownMenu, Label } from \"reactstrap\";\nimport { Picker, Emoji } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { ReactMic } from \"react-mic\";\nimport ChatInputAttachedFileButton from \"./ChatInputAttachedFileButton\"; //import ChatInputImagesButton from \"./ChatInputImagesButton\";\n\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst ChatInput = () => {\n  const {\n    chats,\n    setChats,\n    activeChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n  const [activeChatCurrent, setActiveChatCurrent] = useState(null);\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [isOpen, setisOpen] = useState(false);\n  const [file, setFile] = useState(null);\n  const [record, setRecord] = useState(false);\n  const [deleteAudio, setDeleteAudio] = useState(false);\n\n  const init = () => {\n    setChats(chats.map(item => {\n      if (activeChatCurrent) if (item.id === (activeChatCurrent === null || activeChatCurrent === void 0 ? void 0 : activeChatCurrent.id)) {\n        item.inputMessage = textMessage;\n        setActiveChatCurrent(null);\n      }\n      return item;\n    }));\n    chats.forEach(element => {\n      if (element.id === activeChat.id) {\n        setTextMessage(element.inputMessage);\n        setActiveChatCurrent(activeChat);\n      }\n    });\n  };\n\n  useEffect(init, [activeChat]);\n\n  const toggle = () => setisOpen(!isOpen);\n\n  const handleChange = e => {\n    setTextMessage(e.target.value);\n  };\n\n  const addEmoji = e => {\n    let emoji = e.native;\n    setTextMessage(textMessage + emoji);\n  };\n\n  const onData = recordedBlob => {\n    console.log(\"chunk of real-time data is: \", recordedBlob);\n  };\n\n  const onStop = recordedBlob => {\n    if (!deleteAudio) {\n      console.log(\"recordedBlob is: \", recordedBlob);\n    } else {\n      setDeleteAudio(false);\n    }\n  };\n\n  const onKeyPress = e => {\n    if (e.which === 13) {\n      onaddMessage();\n    }\n  };\n\n  const onaddMessage = (file = undefined) => {\n    if (textMessage !== \"\" || file) {\n      console.log(file);\n      setChats(chats.map(item => {\n        if (activeChat) if (item.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n          item.messages.push({\n            id: `${item.messages ? item.messages[item.messages.length - 1] : 1}`,\n            userName: user.name,\n            message: file ? \"Carregando...\" : textMessage,\n            time: \"\",\n            isImageMessage: false,\n            isFileMessage: false,\n            isVideoMessage: false,\n            isAudioMessage: false,\n            fileUrl: \"\",\n            sendFile: file,\n            toUser: activeChat.id,\n            fromUser: user.id,\n            deliverStatus: DeliverStatus.SENDING,\n            readStatus: ReadStatus.UNREAD,\n            deliverTimestamp: \"\",\n            readTimestamp: \"\",\n            content: \"metadata\",\n            contentType: \"type\"\n          });\n        }\n        return item;\n      }));\n      setFile(null);\n      setTextMessage(\"\");\n    }\n  };\n\n  const handlePaste = e => {\n    let files = e.clipboardData.files;\n    console.log(e.clipboardData.getData(\"Text\"));\n    if (files.length === 0) return;\n    let file = files[0];\n\n    if (file.size > 15000) {\n      alert(\"Tamanho de arquivo \" + file.name + \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      return;\n    } //setFile(file);\n\n\n    console.log(\"arquivo enviado\");\n  };\n\n  const loadFiles = () => {\n    if (file) {\n      onaddMessage(file);\n    }\n  };\n\n  useEffect(loadFiles, [file]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 p-lg-4 border-top mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactMic, {\n    record: record,\n    className: `sound-wave ${record ? \"\" : \"d-none\"}`,\n    onStop: onStop,\n    onData: onData,\n    strokeColor: \"#7a7f9a\",\n    backgroundColor: \"#e6ebf5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: textMessage,\n    onKeyPress: onKeyPress,\n    onChange: handleChange,\n    onPaste: handlePaste,\n    className: `form-control form-control-lg bg-light border-light ${record ? \"d-none\" : \"\"}`,\n    placeholder: \"Send message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, textMessage.length > 9900 ? 10000 - textMessage.length + \" caracteres restantes\" : null))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input-links ml-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, !record ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n    className: \"emoji-dropdown\",\n    direction: \"up\",\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: \"emoji\",\n    color: \"link\",\n    className: \"text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-emotion-happy-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdown-menu-lg-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Emoji, {\n    emoji: \"santa\",\n    set: \"apple\",\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"emoji\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }, \"Emoji\")) : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"audio\",\n    className: `btn btn-link text-decoration-none font-size-16 btn-lg waves-effect`,\n    onClick: () => {\n      setDeleteAudio(true);\n      setRecord(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-delete-bin-5-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"audio\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, \"\\xC1udio\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"audio\",\n    className: `btn btn-link text-decoration-none font-size-16 btn-lg waves-effect ${record ? \"text-record\" : \"\"}`,\n    onClick: () => setRecord(!record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, record ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-stop-circle-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-mic-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"audio\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, \"\\xC1udio\")), /*#__PURE__*/React.createElement(ChatInputAttachedFileButton, {\n    setFile: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: textMessage.length < 10000 ? \"submit\" : \"button\",\n    color: \"primary\",\n    className: \"font-size-16 btn-lg chat-send waves-effect waves-light\",\n    onClick: () => onaddMessage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-send-plane-2-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }))))))))));\n};\n\nexport default ChatInput;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInput.tsx"],"names":["React","useState","useEffect","Button","Input","Row","Col","UncontrolledTooltip","ButtonDropdown","DropdownToggle","DropdownMenu","Label","Picker","Emoji","ReactMic","ChatInputAttachedFileButton","useChat","DeliverStatus","ReadStatus","useAuth","ChatInput","chats","setChats","activeChat","user","activeChatCurrent","setActiveChatCurrent","textMessage","setTextMessage","isOpen","setisOpen","file","setFile","record","setRecord","deleteAudio","setDeleteAudio","init","map","item","id","inputMessage","forEach","element","toggle","handleChange","e","target","value","addEmoji","emoji","native","onData","recordedBlob","console","log","onStop","onKeyPress","which","onaddMessage","undefined","messages","push","length","userName","name","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","handlePaste","files","clipboardData","getData","size","alert","loadFiles","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Picker, Emoji } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { ReactMic } from \"react-mic\";\r\n\r\nimport ChatInputAttachedFileButton from \"./ChatInputAttachedFileButton\";\r\n//import ChatInputImagesButton from \"./ChatInputImagesButton\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport IChat from \"../alias/IChat\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst ChatInput: React.FC = () => {\r\n  const { chats, setChats, activeChat } = useChat();\r\n  const { user } = useAuth();\r\n  const [activeChatCurrent, setActiveChatCurrent] = useState<IChat | null>(\r\n    null\r\n  );\r\n  const [textMessage, setTextMessage] = useState(\"\");\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [record, setRecord] = useState(false);\r\n  const [deleteAudio, setDeleteAudio] = useState(false);\r\n\r\n  const init = () => {\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (activeChatCurrent)\r\n          if (item.id === activeChatCurrent?.id) {\r\n            item.inputMessage = textMessage;\r\n            setActiveChatCurrent(null);\r\n          }\r\n        return item;\r\n      })\r\n    );\r\n    chats.forEach((element) => {\r\n      if (element.id === activeChat.id) {\r\n        setTextMessage(element.inputMessage);\r\n        setActiveChatCurrent(activeChat);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(init, [activeChat]);\r\n\r\n  const toggle = () => setisOpen(!isOpen);\r\n\r\n  const handleChange = (e: any) => {\r\n    setTextMessage(e.target.value);\r\n  };\r\n\r\n  const addEmoji = (e: any) => {\r\n    let emoji = e.native;\r\n    setTextMessage(textMessage + emoji);\r\n  };\r\n\r\n  const onData = (recordedBlob: any) => {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  };\r\n\r\n  const onStop = (recordedBlob: any) => {\r\n    if (!deleteAudio) {\r\n      console.log(\"recordedBlob is: \", recordedBlob);\r\n    } else {\r\n      setDeleteAudio(false);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.which === 13) {\r\n      onaddMessage();\r\n    }\r\n  };\r\n\r\n  const onaddMessage = (file: File | undefined = undefined) => {\r\n    if (textMessage !== \"\" || file) {\r\n      console.log(file);\r\n      setChats(\r\n        chats.map((item) => {\r\n          if (activeChat)\r\n            if (item.id === activeChat?.id) {\r\n              item.messages.push({\r\n                id: `${\r\n                  item.messages ? item.messages[item.messages.length - 1] : 1\r\n                }`,\r\n                userName: user.name,\r\n                message: file ? \"Carregando...\" : textMessage,\r\n                time: \"\",\r\n                isImageMessage: false,\r\n                isFileMessage: false,\r\n                isVideoMessage: false,\r\n                isAudioMessage: false,\r\n                fileUrl: \"\",\r\n                sendFile: file,\r\n                toUser: activeChat.id,\r\n                fromUser: user.id,\r\n                deliverStatus: DeliverStatus.SENDING,\r\n                readStatus: ReadStatus.UNREAD,\r\n                deliverTimestamp: \"\",\r\n                readTimestamp: \"\",\r\n                content: \"metadata\",\r\n                contentType: \"type\",\r\n              });\r\n            }\r\n          return item;\r\n        })\r\n      );\r\n      setFile(null);\r\n      setTextMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\r\n    let files = e.clipboardData.files;\r\n    console.log(e.clipboardData.getData(\"Text\"));\r\n\r\n    if (files.length === 0) return;\r\n    let file = files[0];\r\n    if (file.size > 15000) {\r\n      alert(\r\n        \"Tamanho de arquivo \" +\r\n          file.name +\r\n          \" nÃ£o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    //setFile(file);\r\n    console.log(\"arquivo enviado\");\r\n  };\r\n\r\n  const loadFiles = () => {\r\n    if (file) {\r\n      onaddMessage(file);\r\n    }\r\n  };\r\n\r\n  useEffect(loadFiles, [file]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"p-3 p-lg-4 border-top mb-0\">\r\n        <div>\r\n          <Row noGutters>\r\n            <Col>\r\n              <div>\r\n                <ReactMic\r\n                  record={record}\r\n                  className={`sound-wave ${record ? \"\" : \"d-none\"}`}\r\n                  onStop={onStop}\r\n                  onData={onData}\r\n                  strokeColor=\"#7a7f9a\"\r\n                  backgroundColor=\"#e6ebf5\"\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  value={textMessage}\r\n                  onKeyPress={onKeyPress}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  className={`form-control form-control-lg bg-light border-light ${\r\n                    record ? \"d-none\" : \"\"\r\n                  }`}\r\n                  placeholder={\"Send message...\"}\r\n                />\r\n                <div\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  {textMessage.length > 9900\r\n                    ? 10000 - textMessage.length + \" caracteres restantes\"\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <div className=\"chat-input-links ml-md-2\">\r\n                <ul className=\"list-inline mb-0\">\r\n                  {!record ? (\r\n                    <li className=\"list-inline-item\">\r\n                      <ButtonDropdown\r\n                        className=\"emoji-dropdown\"\r\n                        direction=\"up\"\r\n                        isOpen={isOpen}\r\n                        toggle={toggle}\r\n                      >\r\n                        <DropdownToggle\r\n                          id=\"emoji\"\r\n                          color=\"link\"\r\n                          className=\"text-decoration-none font-size-16 btn-lg waves-effect\"\r\n                        >\r\n                          <i className=\"ri-emotion-happy-line\"></i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu className=\"dropdown-menu-lg-right\">\r\n                          <Picker set=\"apple\" onSelect={addEmoji} />\r\n                          <Emoji emoji=\"santa\" set=\"apple\" size={16} />\r\n                        </DropdownMenu>\r\n                      </ButtonDropdown>\r\n                      <UncontrolledTooltip target=\"emoji\" placement=\"top\">\r\n                        Emoji\r\n                      </UncontrolledTooltip>\r\n                    </li>\r\n                  ) : (\r\n                    <li className=\"list-inline-item input-file\">\r\n                      <Label\r\n                        id=\"audio\"\r\n                        className={`btn btn-link text-decoration-none font-size-16 btn-lg waves-effect`}\r\n                        onClick={() => {\r\n                          setDeleteAudio(true);\r\n                          setRecord(false);\r\n                        }}\r\n                      >\r\n                        <i className=\"ri-delete-bin-5-line\" />\r\n                      </Label>\r\n                      <UncontrolledTooltip target=\"audio\" placement=\"top\">\r\n                        Ãudio\r\n                      </UncontrolledTooltip>\r\n                    </li>\r\n                  )}\r\n                  <li className=\"list-inline-item input-file\">\r\n                    <Label\r\n                      id=\"audio\"\r\n                      className={`btn btn-link text-decoration-none font-size-16 btn-lg waves-effect ${\r\n                        record ? \"text-record\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRecord(!record)}\r\n                    >\r\n                      {record ? (\r\n                        <i className=\"ri-stop-circle-line\" />\r\n                      ) : (\r\n                        <i className=\"ri-mic-line\" />\r\n                      )}\r\n                    </Label>\r\n                    <UncontrolledTooltip target=\"audio\" placement=\"top\">\r\n                      Ãudio\r\n                    </UncontrolledTooltip>\r\n                  </li>\r\n\r\n                  <ChatInputAttachedFileButton setFile={setFile} />\r\n\r\n                  <li className=\"list-inline-item\">\r\n                    <Button\r\n                      type={textMessage.length < 10000 ? \"submit\" : \"button\"}\r\n                      color=\"primary\"\r\n                      className=\"font-size-16 btn-lg chat-send waves-effect waves-light\"\r\n                      onClick={() => onaddMessage()}\r\n                    >\r\n                      <i className=\"ri-send-plane-2-fill\"></i>\r\n                    </Button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"]},"metadata":{},"sourceType":"module"}