{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatList.tsx\";\nimport React from \"react\";\nimport { Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { DateTime } from \"luxon\"; //simplebar\n\nimport SimpleBar from \"simplebar-react\"; //context\n\nimport { useChat } from \"./../contexts/ChatContext\";\nimport { useContact } from \"./../contexts/ContactContext\"; //alias\n\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\nimport star from \"./../assets/images/ic-star.svg\"; //import { relative } from \"path\";\n\nconst ChatList = ({\n  recentChatList\n}) => {\n  const {\n    activeChat,\n    openChat,\n    setShowChat\n  } = useChat();\n  const {\n    setNewFavorite\n  } = useContact();\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setShowChat(true);\n  };\n\n  return /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"chat-message-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled chat-list chat-user-list\",\n    id: \"chat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, recentChatList.map((chat, key) => chat.favorite && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    id: \"conversation\" + key,\n    className: `${chat.isTyping ? \"typing\" : \"\"} ${chat.id === activeChat.id ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openChatAction(chat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, !chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, chat.name.charAt(0))), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, \"typing\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }\n  }) : null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }\n  }) : null, chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1].message : null))), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(chat);\n    },\n    src: chat.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1].time === \"\" || chat.messages[chat.messages.length - 1].time === \"—:—\" ? \"—:—\" : chat.messages[chat.messages.length - 1].time !== (\"\" && \"—:—\") && DateTime.fromISO(chat.messages[chat.messages.length - 1].time).day === DateTime.local().day ? DateTime.fromISO(chat.messages[chat.messages.length - 1].time).toLocaleString(DateTime.TIME_SIMPLE) : DateTime.fromISO(chat.messages[chat.messages.length - 1].time).toLocaleString(DateTime.DATETIME_SHORT) : null), chat.unRead ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, chat.unRead)) : null)))), recentChatList.map((chat, key) => chat.favorite === false && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    id: \"conversation\" + key,\n    className: `${chat.isTyping ? \"typing\" : \"\"} ${chat.id === activeChat.id ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openChatAction(chat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, !chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, chat.name.charAt(0))), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, \"typing\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }) : null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }) : null, chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1].message : null))), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(chat);\n    },\n    src: chat.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1].time === \"\" || chat.messages[chat.messages.length - 1].time === \"—:—\" ? \"—:—\" : chat.messages[chat.messages.length - 1].time !== (\"\" && \"—:—\") && DateTime.fromISO(chat.messages[chat.messages.length - 1].time).day === DateTime.local().day ? DateTime.fromISO(chat.messages[chat.messages.length - 1].time).toLocaleString(DateTime.TIME_SIMPLE) : DateTime.fromISO(chat.messages[chat.messages.length - 1].time).toLocaleString(DateTime.DATETIME_SHORT) : null), chat.unRead ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, chat.unRead)) : null))))));\n};\n\nexport default ChatList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatList.tsx"],"names":["React","Media","Link","DateTime","SimpleBar","useChat","useContact","ChatList","recentChatList","activeChat","openChat","setShowChat","setNewFavorite","openChatAction","chat","maxHeight","map","key","favorite","isTyping","id","profilePicture","status","name","charAt","messages","length","isImageMessage","isFileMessage","message","goldenstar","star","position","right","top","time","fromISO","day","local","toLocaleString","TIME_SIMPLE","DATETIME_SHORT","unRead"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DateTime } from \"luxon\";\r\n\r\n//simplebar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//context\r\nimport { useChat } from \"./../contexts/ChatContext\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\n\r\n//alias\r\nimport IChat from \"../alias/IChat\";\r\n\r\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\"\r\nimport star from \"./../assets/images/ic-star.svg\"\r\n//import { relative } from \"path\";\r\n\r\ninterface IProps {\r\n  recentChatList: IChat[];\r\n}\r\n\r\nconst ChatList: React.FC<IProps> = ({ recentChatList }) => {\r\n  const { activeChat, openChat, setShowChat } = useChat();\r\n  const { setNewFavorite } = useContact();\r\n  const openChatAction = (chat: IChat) => {\r\n    openChat(chat);\r\n    setShowChat(true);\r\n  };\r\n  return (\r\n    <SimpleBar style={{ maxHeight: \"100%\" }} className=\"chat-message-list\">\r\n      <ul className=\"list-unstyled chat-list chat-user-list\" id=\"chat-list\">\r\n        {recentChatList.map((chat, key) => (\r\n           chat.favorite &&\r\n          <li\r\n            key={key}\r\n            id={\"conversation\" + key}\r\n            className={`${chat.isTyping ? \"typing\" : \"\"} ${\r\n              chat.id === activeChat.id ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <Link to=\"#\" onClick={() => openChatAction(chat)}>\r\n              <Media>\r\n                {!chat.profilePicture ? (\r\n                  <div\r\n                    className={\r\n                      \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                    }\r\n                  >\r\n                    <div className=\"avatar-xs\">\r\n                      <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                        {chat.name.charAt(0)}\r\n                      </span>\r\n                    </div>\r\n                    {chat.status && <span className=\"user-status\"></span>}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className={\r\n                      \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                    }\r\n                  >\r\n                    <img\r\n                      src={chat.profilePicture}\r\n                      className=\"rounded-circle avatar-xs\"\r\n                      alt=\"chatvia\"\r\n                    />\r\n                    {chat.status && <span className=\"user-status\"></span>}\r\n                  </div>\r\n                )}\r\n\r\n                <Media body className=\"overflow-hidden\">\r\n                  <h5 className=\"text-truncate font-size-15 mb-1\">\r\n                    {chat.name}\r\n                  </h5>\r\n                  <p className=\"chat-user-message text-truncate mb-0\">\r\n                    {chat.isTyping ? (\r\n                      <>\r\n                        typing\r\n                        <span className=\"animate-typing\">\r\n                          <span className=\"dot ml-1\"></span>\r\n                          <span className=\"dot ml-1\"></span>\r\n                          <span className=\"dot ml-1\"></span>\r\n                        </span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        {chat.messages &&\r\n                        chat.messages.length > 0 &&\r\n                        chat.messages[chat.messages.length - 1]\r\n                          .isImageMessage === true ? (\r\n                          <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                        ) : null}\r\n                        {chat.messages &&\r\n                        chat.messages.length > 0 &&\r\n                        chat.messages[chat.messages.length - 1]\r\n                          .isFileMessage === true ? (\r\n                          <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                        ) : null}\r\n                        {chat.messages && chat.messages.length > 0\r\n                          ? chat.messages[chat.messages.length - 1].message\r\n                          : null}\r\n                      </>\r\n                    )}\r\n                  </p>\r\n                </Media>\r\n\r\n                <img alt=\"star\" onClick=\r\n                {() =>\r\n                  {\r\n                    setNewFavorite(chat);\r\n                  }\r\n                }\r\n                src={chat.favorite ? goldenstar : star} style={{position: \"relative\", right: 2, top: 2}}\r\n                />\r\n        \r\n                <div className=\"font-size-11\">\r\n                  {}\r\n                  {chat.messages && chat.messages.length > 0\r\n                    ? chat.messages[chat.messages.length - 1].time === \"\" ||\r\n                      chat.messages[chat.messages.length - 1].time === \"—:—\"\r\n                      ? \"—:—\"\r\n                      : chat.messages[chat.messages.length - 1].time !==\r\n                          (\"\" && \"—:—\") &&\r\n                        DateTime.fromISO(\r\n                          chat.messages[chat.messages.length - 1].time\r\n                        ).day === DateTime.local().day\r\n                      ? DateTime.fromISO(\r\n                          chat.messages[chat.messages.length - 1].time\r\n                        ).toLocaleString(DateTime.TIME_SIMPLE)\r\n                      : DateTime.fromISO(\r\n                          chat.messages[chat.messages.length - 1].time\r\n                        ).toLocaleString(DateTime.DATETIME_SHORT)\r\n                    : null}\r\n                </div>\r\n\r\n                {chat.unRead ? (\r\n                  <div className=\"unread-message\">\r\n                    <span className=\"badge badge-soft-danger badge-pill\">\r\n                      {chat.unRead}\r\n                    </span>\r\n                  </div>\r\n                ) : null}\r\n              </Media>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n\r\n        {recentChatList.map((chat, key) => (\r\n          chat.favorite === false &&\r\n        <li\r\n          key={key}\r\n          id={\"conversation\" + key}\r\n          className={`${chat.isTyping ? \"typing\" : \"\"} ${\r\n            chat.id === activeChat.id ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          <Link to=\"#\" onClick={() => openChatAction(chat)}>\r\n            <Media>\r\n              {!chat.profilePicture ? (\r\n                <div\r\n                  className={\r\n                    \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                  }\r\n                >\r\n                  <div className=\"avatar-xs\">\r\n                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                      {chat.name.charAt(0)}\r\n                    </span>\r\n                  </div>\r\n                  {chat.status && <span className=\"user-status\"></span>}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className={\r\n                    \"chat-user-img \" + chat.status + \" align-self-center mr-3\"\r\n                  }\r\n                >\r\n                  <img\r\n                    src={chat.profilePicture}\r\n                    className=\"rounded-circle avatar-xs\"\r\n                    alt=\"chatvia\"\r\n                  />\r\n                  {chat.status && <span className=\"user-status\"></span>}\r\n                </div>\r\n              )}\r\n\r\n              <Media body className=\"overflow-hidden\">\r\n                <h5 className=\"text-truncate font-size-15 mb-1\">\r\n                  {chat.name}\r\n                </h5>\r\n                <p className=\"chat-user-message text-truncate mb-0\">\r\n                  {chat.isTyping ? (\r\n                    <>\r\n                      typing\r\n                      <span className=\"animate-typing\">\r\n                        <span className=\"dot ml-1\"></span>\r\n                        <span className=\"dot ml-1\"></span>\r\n                        <span className=\"dot ml-1\"></span>\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {chat.messages &&\r\n                      chat.messages.length > 0 &&\r\n                      chat.messages[chat.messages.length - 1]\r\n                        .isImageMessage === true ? (\r\n                        <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                      ) : null}\r\n                      {chat.messages &&\r\n                      chat.messages.length > 0 &&\r\n                      chat.messages[chat.messages.length - 1]\r\n                        .isFileMessage === true ? (\r\n                        <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                      ) : null}\r\n                      {chat.messages && chat.messages.length > 0\r\n                        ? chat.messages[chat.messages.length - 1].message\r\n                        : null}\r\n                    </>\r\n                  )}\r\n                </p>\r\n              </Media>\r\n\r\n              <img alt=\"star\" onClick=\r\n              {() =>\r\n                {\r\n                  setNewFavorite(chat);\r\n                }\r\n              }\r\n              src={chat.favorite ? goldenstar : star} style={{position: \"relative\", right: 2, top: 2}}\r\n              />\r\n      \r\n              <div className=\"font-size-11\">\r\n                {}\r\n                {chat.messages && chat.messages.length > 0\r\n                  ? chat.messages[chat.messages.length - 1].time === \"\" ||\r\n                    chat.messages[chat.messages.length - 1].time === \"—:—\"\r\n                    ? \"—:—\"\r\n                    : chat.messages[chat.messages.length - 1].time !==\r\n                        (\"\" && \"—:—\") &&\r\n                      DateTime.fromISO(\r\n                        chat.messages[chat.messages.length - 1].time\r\n                      ).day === DateTime.local().day\r\n                    ? DateTime.fromISO(\r\n                        chat.messages[chat.messages.length - 1].time\r\n                      ).toLocaleString(DateTime.TIME_SIMPLE)\r\n                    : DateTime.fromISO(\r\n                        chat.messages[chat.messages.length - 1].time\r\n                      ).toLocaleString(DateTime.DATETIME_SHORT)\r\n                  : null}\r\n              </div>\r\n\r\n              {chat.unRead ? (\r\n                <div className=\"unread-message\">\r\n                  <span className=\"badge badge-soft-danger badge-pill\">\r\n                    {chat.unRead}\r\n                  </span>\r\n                </div>\r\n              ) : null}\r\n            </Media>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </SimpleBar>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"]},"metadata":{},"sourceType":"module"}