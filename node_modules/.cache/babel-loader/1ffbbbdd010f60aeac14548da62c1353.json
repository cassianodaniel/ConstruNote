{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";// import Webcam from \"react-user-media\";\nimport{useTranslation}from\"react-i18next\";import{useModal}from\"../contexts/ModalContext\";import{Video}from\"./Video\";import{Button,Input,InputGroupText,InputGroup,InputGroupAddon,Modal,Progress,ModalBody,ModalFooter,ModalHeader}from\"reactstrap\";import{useCall}from\"../contexts/CallContext\";var ModalConfigDevices=function ModalConfigDevices(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedVideo=_useState2[0],setSelectedVideo=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedAudio=_useState4[0],setSelectedAudio=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),selectedSpeaker=_useState6[0],setSelectedSpeaker=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),videoDevices=_useState8[0],setVideoDevices=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),audioDevices=_useState10[0],setAudioDevices=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),speakerDevices=_useState12[0],setSpeakerDevices=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),speakerVolume=_useState14[0],setSpeakerVolume=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),speaking=_useState16[0],setSpeaking=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),stream=_useState18[0],setStream=_useState18[1];var _useCall=useCall(),setUpdateConstraints=_useCall.setUpdateConstraints;var _useModal=useModal(),showModalDevicesConfig=_useModal.showModalDevicesConfig,setShowModalDevicesConfig=_useModal.setShowModalDevicesConfig;var _useTranslation=useTranslation(),t=_useTranslation.t;var init=function init(){navigator.permissions.query({name:\"camera\"}).then(function(cam){navigator.permissions.query({name:\"microphone\"}).then(function(mic){if(mic.state===\"denied\"&&cam.state===\"denied\"){return;}if(cam.state!==\"granted\"||mic.state!==\"granted\"){navigator.getUserMedia({audio:true,video:true},updateDevices,function(e){navigator.getUserMedia({audio:true,video:false},updateDevices,function(e){});});}else{updateDevices();}});});};var updateDevices=function updateDevices(){var stream=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;if(stream){stream.getTracks().forEach(function(track){track.stop();});}navigator.mediaDevices.enumerateDevices().then(function(devices){var vidDevices=[];var audDevices=[];var spkDevices=[];devices.forEach(function(device){if(device.deviceId)switch(device.kind){case\"audioinput\":audDevices.push(device);break;case\"videoinput\":vidDevices.push(device);break;case\"audiooutput\":spkDevices.push(device);break;}});setAudioDevices(audDevices);setVideoDevices(vidDevices);setSpeakerDevices(spkDevices);});};var handleChangeVideo=function handleChangeVideo(ev){var idVideo=ev.target.value;var video=videoDevices.filter(function(v){return v.deviceId===idVideo;})[0];setSelectedVideo(video);};var handleChangeAudio=function handleChangeAudio(ev){var idAudio=ev.target.value;var audio=audioDevices.filter(function(v){return v.deviceId===idAudio;})[0];setSelectedAudio(audio);};var handleChangeSpeaker=function handleChangeSpeaker(ev){var idSpeaker=ev.target.value;var speaker=speakerDevices.filter(function(v){return v.deviceId===idSpeaker;})[0];setSelectedSpeaker(speaker);};var parseAndSetSpeakerVolumn=function parseAndSetSpeakerVolumn(volume){setSpeakerVolume(Math.round(Math.abs(volume<-100?-100:volume)));};var changeSpeaking=function changeSpeaking(spk){setSpeaking(spk);};var onPreferencesSubmit=function onPreferencesSubmit(){setUpdateConstraints({videoId:selectedVideo===null||selectedVideo===void 0?void 0:selectedVideo.deviceId,audioId:selectedAudio===null||selectedAudio===void 0?void 0:selectedAudio.deviceId,speakerId:selectedSpeaker===null||selectedSpeaker===void 0?void 0:selectedSpeaker.deviceId});setShowModalDevicesConfig(false);};useEffect(init,[]);navigator.mediaDevices.ondevicechange=init;return/*#__PURE__*/React.createElement(Modal,{centered:true,isOpen:showModalDevicesConfig},/*#__PURE__*/React.createElement(ModalHeader,null,t(\"Config Devices\")),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"ct-live-video-view mb-2 border\"},/*#__PURE__*/React.createElement(Video,{audioId:selectedAudio?selectedAudio.deviceId:undefined,videoId:selectedVideo?selectedVideo.deviceId:undefined,speakerId:selectedSpeaker?selectedSpeaker.deviceId:undefined,videoDevices:videoDevices,audioDevices:audioDevices,speakerDevices:speakerDevices,stream:stream,setStream:setStream,speakerVolume:speakerVolume,speaking:speaking,modalOpen:showModalDevicesConfig,setSpeakerVolume:parseAndSetSpeakerVolumn,setSpeaking:changeSpeaking})),/*#__PURE__*/React.createElement(\"div\",{className:\"ct-video-controller\"},videoDevices[0]&&/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-vidicon-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedVideo&&selectedVideo.deviceId?selectedVideo.deviceId:\"default\",onChange:handleChangeVideo},videoDevices.map(function(video,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:video.deviceId},video.label);}))),audioDevices[0]&&/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-mic-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedAudio&&selectedAudio.deviceId?selectedAudio.deviceId:\"default\",onChange:handleChangeAudio},audioDevices.map(function(audio,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:audio.deviceId},audio.label);}))),speakerDevices&&/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-speaker-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedSpeaker&&selectedSpeaker.deviceId?selectedSpeaker.deviceId:\"default\",onChange:handleChangeSpeaker},speakerDevices.map(function(speaker,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:speaker.deviceId},speaker.label);}))),/*#__PURE__*/React.createElement(Progress,{color:\"info\",className:\"mb-2\",value:speaking?speakerVolume:0}))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"mr-2\",onClick:onPreferencesSubmit},t(\"Salvar\")),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setShowModalDevicesConfig(false);}},\" \",t(\"Cancel\"))));};export default ModalConfigDevices;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalConfigDevices.tsx"],"names":["React","useEffect","useState","useTranslation","useModal","Video","Button","Input","InputGroupText","InputGroup","InputGroupAddon","Modal","Progress","ModalBody","ModalFooter","ModalHeader","useCall","ModalConfigDevices","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","selectedSpeaker","setSelectedSpeaker","videoDevices","setVideoDevices","audioDevices","setAudioDevices","speakerDevices","setSpeakerDevices","speakerVolume","setSpeakerVolume","speaking","setSpeaking","stream","setStream","setUpdateConstraints","showModalDevicesConfig","setShowModalDevicesConfig","t","init","navigator","permissions","query","name","then","cam","mic","state","getUserMedia","audio","video","updateDevices","e","undefined","getTracks","forEach","track","stop","mediaDevices","enumerateDevices","devices","vidDevices","audDevices","spkDevices","device","deviceId","kind","push","handleChangeVideo","ev","idVideo","target","value","filter","v","handleChangeAudio","idAudio","handleChangeSpeaker","idSpeaker","speaker","parseAndSetSpeakerVolumn","volume","Math","round","abs","changeSpeaking","spk","onPreferencesSubmit","videoId","audioId","speakerId","ondevicechange","map","index","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import Webcam from \"react-user-media\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { Video } from \"./Video\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputGroupText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Modal,\r\n  Progress,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\n\r\nconst ModalConfigDevices: React.FC = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo>();\r\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo>();\r\n  const [selectedSpeaker, setSelectedSpeaker] = useState<MediaDeviceInfo>();\r\n  const [videoDevices, setVideoDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [audioDevices, setAudioDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [speakerDevices, setSpeakerDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [speakerVolume, setSpeakerVolume] = useState<number>();\r\n  const [speaking, setSpeaking] = useState<boolean>();\r\n  const [stream, setStream] = useState<MediaStream | undefined>();\r\n  const { setUpdateConstraints } = useCall();\r\n  const { showModalDevicesConfig, setShowModalDevicesConfig } = useModal();\r\n  const { t } = useTranslation();\r\n  const init = () => {\r\n    navigator.permissions.query({ name: \"camera\" }).then((cam) => {\r\n      navigator.permissions.query({ name: \"microphone\" }).then((mic) => {\r\n        if (mic.state === \"denied\" && cam.state === \"denied\") {\r\n          return;\r\n        }\r\n        if (cam.state !== \"granted\" || mic.state !== \"granted\") {\r\n          navigator.getUserMedia(\r\n            { audio: true, video: true },\r\n            updateDevices,\r\n            (e) => {\r\n              navigator.getUserMedia(\r\n                { audio: true, video: false },\r\n                updateDevices,\r\n                (e) => {}\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          updateDevices();\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const updateDevices = (stream: MediaStream | undefined = undefined) => {\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n    }\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const vidDevices: MediaDeviceInfo[] = [];\r\n      const audDevices: MediaDeviceInfo[] = [];\r\n      const spkDevices: MediaDeviceInfo[] = [];\r\n      devices.forEach((device) => {\r\n        if (device.deviceId)\r\n          switch (device.kind) {\r\n            case \"audioinput\":\r\n              audDevices.push(device);\r\n              break;\r\n            case \"videoinput\":\r\n              vidDevices.push(device);\r\n              break;\r\n            case \"audiooutput\":\r\n              spkDevices.push(device);\r\n              break;\r\n          }\r\n      });\r\n      setAudioDevices(audDevices);\r\n      setVideoDevices(vidDevices);\r\n      setSpeakerDevices(spkDevices);\r\n    });\r\n  };\r\n\r\n  const handleChangeVideo = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idVideo = ev.target.value;\r\n    const video = videoDevices.filter((v) => v.deviceId === idVideo)[0];\r\n    setSelectedVideo(video);\r\n  };\r\n  const handleChangeAudio = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idAudio = ev.target.value;\r\n    const audio = audioDevices.filter((v) => v.deviceId === idAudio)[0];\r\n    setSelectedAudio(audio);\r\n  };\r\n  const handleChangeSpeaker = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idSpeaker = ev.target.value;\r\n    const speaker = speakerDevices.filter((v) => v.deviceId === idSpeaker)[0];\r\n    setSelectedSpeaker(speaker);\r\n  };\r\n  const parseAndSetSpeakerVolumn = (volume: number) => {\r\n    setSpeakerVolume(Math.round(Math.abs(volume < -100 ? -100 : volume)));\r\n  };\r\n  const changeSpeaking = (spk: boolean) => {\r\n    setSpeaking(spk);\r\n  };\r\n  const onPreferencesSubmit = () => {\r\n    setUpdateConstraints({\r\n      videoId: selectedVideo?.deviceId,\r\n      audioId: selectedAudio?.deviceId,\r\n      speakerId: selectedSpeaker?.deviceId,\r\n    });\r\n    setShowModalDevicesConfig(false);\r\n  };\r\n  useEffect(init, []);\r\n  navigator.mediaDevices.ondevicechange = init;\r\n  return (\r\n    <Modal centered isOpen={showModalDevicesConfig}>\r\n      <ModalHeader>{t(\"Config Devices\")}</ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"ct-live-video-view mb-2 border\">\r\n          <Video\r\n            audioId={selectedAudio ? selectedAudio.deviceId : undefined}\r\n            videoId={selectedVideo ? selectedVideo.deviceId : undefined}\r\n            speakerId={selectedSpeaker ? selectedSpeaker.deviceId : undefined}\r\n            videoDevices={videoDevices}\r\n            audioDevices={audioDevices}\r\n            speakerDevices={speakerDevices}\r\n            stream={stream}\r\n            setStream={setStream}\r\n            speakerVolume={speakerVolume}\r\n            speaking={speaking}\r\n            modalOpen={showModalDevicesConfig}\r\n            setSpeakerVolume={parseAndSetSpeakerVolumn}\r\n            setSpeaking={changeSpeaking}\r\n          />\r\n          {/* <Webcam ref={(ref) => this.webcam = ref} \r\n\t\t\t\t\t \tvideo={{deviceId: {exact: selectedVideo ? selectedVideo.id : undefined}}}\r\n\t\t\t\t\t\taudio={{deviceId: {exact: selectedAudio ? selectedAudio.id : undefined}}}\r\n\t\t\t\t\t\t/>  */}\r\n        </div>\r\n        <div className=\"ct-video-controller\">\r\n          {videoDevices[0] && (\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"ri-vidicon-line\" />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"select\"\r\n                defaultValue={\r\n                  selectedVideo && selectedVideo.deviceId\r\n                    ? selectedVideo.deviceId\r\n                    : \"default\"\r\n                }\r\n                onChange={handleChangeVideo}\r\n              >\r\n                {videoDevices.map((video, index) => (\r\n                  <option key={index} value={video.deviceId}>\r\n                    {video.label}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </InputGroup>\r\n          )}\r\n          {audioDevices[0] && (\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"ri-mic-line\" />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"select\"\r\n                defaultValue={\r\n                  selectedAudio && selectedAudio.deviceId\r\n                    ? selectedAudio.deviceId\r\n                    : \"default\"\r\n                }\r\n                onChange={handleChangeAudio}\r\n              >\r\n                {audioDevices.map((audio, index) => (\r\n                  <option key={index} value={audio.deviceId}>\r\n                    {audio.label}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </InputGroup>\r\n          )}\r\n          {speakerDevices && (\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"ri-speaker-line\" />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"select\"\r\n                defaultValue={\r\n                  selectedSpeaker && selectedSpeaker.deviceId\r\n                    ? selectedSpeaker.deviceId\r\n                    : \"default\"\r\n                }\r\n                onChange={handleChangeSpeaker}\r\n              >\r\n                {speakerDevices.map((speaker, index) => (\r\n                  <option key={index} value={speaker.deviceId}>\r\n                    {speaker.label}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </InputGroup>\r\n          )}\r\n          <Progress\r\n            color=\"info\"\r\n            className=\"mb-2\"\r\n            value={speaking ? speakerVolume : 0}\r\n          />\r\n        </div>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button type=\"button\" className=\"mr-2\" onClick={onPreferencesSubmit}>\r\n          {t(\"Salvar\")}\r\n        </Button>\r\n        <Button onClick={() => setShowModalDevicesConfig(false)}>\r\n          {\" \"}\r\n          {t(\"Cancel\")}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\nexport default ModalConfigDevices;\r\n"]},"metadata":{},"sourceType":"module"}