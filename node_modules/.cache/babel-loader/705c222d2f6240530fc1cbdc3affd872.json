{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInputAttachedFileButton.tsx\";\nimport React from \"react\";\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\n\nconst ChatInputAttachedFileButton = () => {\n  const {\n    chats,\n    setChats,\n    activeChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n\n  const handlePaste = e => {\n    let files = e.clipboardData.files;\n    console.log(e.clipboardData.getData(\"Text\"));\n    if (files.length === 0) return;\n    let file = files[0];\n\n    if (file.size > 15728640) {\n      alert(\"Tamanho de arquivo \" + file.name + \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      return;\n    }\n\n    if (file) {\n      onAddMessage(file);\n      console.log(\"Arquivo enviado.\");\n    }\n  };\n\n  const handleFileChange = e => {\n    let files = e.target.files;\n    if ((files === null || files === void 0 ? void 0 : files.length) === 0) return;\n    let file = files === null || files === void 0 ? void 0 : files.item(0);\n\n    if (file && file.size > 15728640) {\n      alert(\"Tamanho de arquivo \" + file.name + \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\");\n      return;\n    }\n\n    if (file) {\n      onAddMessage(file);\n    }\n  };\n\n  const onAddMessage = file => {\n    setChats(chats.map(item => {\n      if (activeChat) if (item.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n        item.messages.push({\n          id: `${item.messages.length + 1}`,\n          userName: user.name,\n          message: \"Carregando...\",\n          time: \"\",\n          isImageMessage: false,\n          isFileMessage: false,\n          isVideoMessage: false,\n          isAudioMessage: false,\n          fileUrl: \"\",\n          sendFile: file,\n          toUser: activeChat.id,\n          fromUser: user.id,\n          deliverStatus: DeliverStatus.SENDING,\n          readStatus: ReadStatus.UNREAD,\n          deliverTimestamp: \"\",\n          readTimestamp: \"\",\n          content: \"metadata\",\n          contentType: \"type\"\n        });\n      }\n      return item;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"files\",\n    className: \"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-attachment-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleFileChange,\n    onPaste: handlePaste,\n    type: \"file\",\n    name: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"files\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Attached File\"));\n};\n\nexport default ChatInputAttachedFileButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInputAttachedFileButton.tsx"],"names":["React","Input","UncontrolledTooltip","Label","useAuth","useChat","DeliverStatus","ReadStatus","ChatInputAttachedFileButton","chats","setChats","activeChat","user","handlePaste","e","files","clipboardData","console","log","getData","length","file","size","alert","name","onAddMessage","handleFileChange","target","item","map","id","messages","push","userName","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Input, UncontrolledTooltip, Label } from \"reactstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\n\r\n\r\nconst ChatInputAttachedFileButton: React.FC = () => {\r\n\r\n  const { chats, setChats, activeChat } = useChat();\r\n  const { user } = useAuth();\r\n\r\n  \r\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\r\n    let files = e.clipboardData.files;\r\n    console.log(e.clipboardData.getData(\"Text\"));\r\n\r\n    if (files.length === 0) return;\r\n    let file = files[0];\r\n    if (file.size > 15728640) {\r\n      alert(\r\n        \"Tamanho de arquivo \" +\r\n          file.name +\r\n          \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (file) {\r\n      onAddMessage(file);\r\n      console.log(\"Arquivo enviado.\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    if (files?.length === 0) return;\r\n    let file = files?.item(0);\r\n    if (file && file.size > 15728640) {\r\n      alert(\r\n        \"Tamanho de arquivo \" +\r\n          file.name +\r\n          \" n達o suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (file) {\r\n      onAddMessage(file);\r\n    }\r\n  };\r\n\r\n  const onAddMessage = (file: File) => {\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (activeChat)\r\n          if (item.id === activeChat?.id) {\r\n            item.messages.push({\r\n              id: `${item.messages.length + 1}`,\r\n              userName: user.name,\r\n              message: \"Carregando...\",\r\n              time: \"\",\r\n              isImageMessage: false,\r\n              isFileMessage: false,\r\n              isVideoMessage: false,\r\n              isAudioMessage: false,\r\n              fileUrl: \"\",\r\n              sendFile: file,\r\n              toUser: activeChat.id,\r\n              fromUser: user.id,\r\n              deliverStatus: DeliverStatus.SENDING,\r\n              readStatus: ReadStatus.UNREAD,\r\n              deliverTimestamp: \"\",\r\n              readTimestamp: \"\",\r\n              content: \"metadata\",\r\n              contentType: \"type\",\r\n            });\r\n          }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-inline-item input-file\">\r\n      <Label\r\n        id=\"files\"\r\n        className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"\r\n      >\r\n        <i className=\"ri-attachment-line\"></i>\r\n        <Input onChange={handleFileChange} onPaste={handlePaste} type=\"file\" name=\"fileInput\" />\r\n      </Label>\r\n      <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n        Attached File\r\n      </UncontrolledTooltip>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatInputAttachedFileButton;\r\n"]},"metadata":{},"sourceType":"module"}