{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar WS = require('ws');\n\nvar WebSocket = global.WebSocket || WS;\n\nvar EventEmitter = require('events');\n\nvar CODE = 'ECONNERROR';\n\nvar Socket = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Socket, _EventEmitter);\n\n  var _super = _createSuper(Socket);\n\n  function Socket() {\n    var _this;\n\n    _classCallCheck(this, Socket);\n\n    _this = _super.call(this);\n    _this.listeners = Object.create(null);\n    return _this;\n  }\n\n  _createClass(Socket, [{\n    key: \"connect\",\n    value: function connect(url) {\n      this.url = url;\n\n      this._attachSocket(new WebSocket(url, ['xmpp']));\n    }\n  }, {\n    key: \"_attachSocket\",\n    value: function _attachSocket(socket) {\n      var _this2 = this;\n\n      var sock = this.socket = socket;\n      var listeners = this.listeners;\n\n      listeners.open = function () {\n        _this2.emit('connect');\n      };\n\n      listeners.message = function (_ref) {\n        var data = _ref.data;\n        return _this2.emit('data', data);\n      };\n\n      listeners.error = function (event) {\n        // WS\n        var error = event.error; // DOM\n\n        if (!error) {\n          error = new Error(\"WebSocket \".concat(CODE, \" \").concat(_this2.url));\n          error.errno = CODE;\n          error.code = CODE;\n        }\n\n        error.event = event;\n        error.url = _this2.url;\n\n        _this2.emit('error', error);\n      };\n\n      listeners.close = function (event) {\n        _this2._detachSocket();\n\n        _this2.emit('close', !event.wasClean, event);\n      };\n\n      sock.addEventListener('open', listeners.open);\n      sock.addEventListener('message', listeners.message);\n      sock.addEventListener('error', listeners.error);\n      sock.addEventListener('close', listeners.close);\n    }\n  }, {\n    key: \"_detachSocket\",\n    value: function _detachSocket() {\n      delete this.url;\n      var socket = this.socket,\n          listeners = this.listeners;\n      Object.getOwnPropertyNames(listeners).forEach(function (k) {\n        socket.removeEventListener(k, listeners[k]);\n        delete listeners[k];\n      });\n      delete this.socket;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.socket.close();\n    }\n  }, {\n    key: \"write\",\n    value: function write(data, fn) {\n      if (WebSocket === WS) {\n        this.socket.send(data, fn);\n      } else {\n        this.socket.send(data);\n        fn();\n      }\n    }\n  }]);\n\n  return Socket;\n}(EventEmitter);\n\nmodule.exports = Socket;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/websocket/lib/Socket.js"],"names":["WS","require","WebSocket","global","EventEmitter","CODE","Socket","listeners","Object","create","url","_attachSocket","socket","sock","open","emit","message","data","error","event","Error","errno","code","close","_detachSocket","wasClean","addEventListener","getOwnPropertyNames","forEach","k","removeEventListener","fn","send","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst WS = require('ws')\nconst WebSocket = global.WebSocket || WS\nconst EventEmitter = require('events')\n\nconst CODE = 'ECONNERROR'\n\nclass Socket extends EventEmitter {\n  constructor() {\n    super()\n    this.listeners = Object.create(null)\n  }\n\n  connect(url) {\n    this.url = url\n    this._attachSocket(new WebSocket(url, ['xmpp']))\n  }\n\n  _attachSocket(socket) {\n    const sock = (this.socket = socket)\n    const {listeners} = this\n    listeners.open = () => {\n      this.emit('connect')\n    }\n\n    listeners.message = ({data}) => this.emit('data', data)\n    listeners.error = event => {\n      // WS\n      let {error} = event\n      // DOM\n      if (!error) {\n        error = new Error(`WebSocket ${CODE} ${this.url}`)\n        error.errno = CODE\n        error.code = CODE\n      }\n\n      error.event = event\n      error.url = this.url\n      this.emit('error', error)\n    }\n\n    listeners.close = event => {\n      this._detachSocket()\n      this.emit('close', !event.wasClean, event)\n    }\n\n    sock.addEventListener('open', listeners.open)\n    sock.addEventListener('message', listeners.message)\n    sock.addEventListener('error', listeners.error)\n    sock.addEventListener('close', listeners.close)\n  }\n\n  _detachSocket() {\n    delete this.url\n    const {socket, listeners} = this\n    Object.getOwnPropertyNames(listeners).forEach(k => {\n      socket.removeEventListener(k, listeners[k])\n      delete listeners[k]\n    })\n    delete this.socket\n  }\n\n  end() {\n    this.socket.close()\n  }\n\n  write(data, fn) {\n    if (WebSocket === WS) {\n      this.socket.send(data, fn)\n    } else {\n      this.socket.send(data)\n      fn()\n    }\n  }\n}\n\nmodule.exports = Socket\n"]},"metadata":{},"sourceType":"script"}