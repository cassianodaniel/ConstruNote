{"ast":null,"code":"import React from\"react\";import{Input,Label}from\"reactstrap\";import{useContact}from\"../contexts/ContactContext\";import{useGroup}from\"../contexts/GroupContext\";import{SearchContactAndGroup}from\"../helpers/SearchContactAndGroup\";import sortContactAndGroup from\"../helpers/SortContactAndGroup\";var SelectContactAndGroup=function SelectContactAndGroup(_ref){var search=_ref.search,handleCheckContactAndGroup=_ref.handleCheckContactAndGroup;var _useGroup=useGroup(),groups=_useGroup.groups;var _useContact=useContact(),contacts=_useContact.contacts;var data=[];contacts.forEach(function(item){data.push(item);});groups.forEach(function(item){data.push(item);});return/*#__PURE__*/React.createElement(\"div\",{className:\"mt-2\"},sortContactAndGroup(SearchContactAndGroup(data,search)).map(function(item,key){return/*#__PURE__*/React.createElement(\"div\",{key:key},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-3 pl-1 font-weight-bold text-primary\"},item.group),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled contact-list mb-2\"},item.children.map(function(child,keyChild){return/*#__PURE__*/React.createElement(\"li\",{key:keyChild},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",className:\"custom-control-input\",onChange:function onChange(e){return handleCheckContactAndGroup(e.target.checked,child);},id:\"memberCheck\"+child.jid,value:child.name}),/*#__PURE__*/React.createElement(Label,{className:\"custom-control-label d-flex justify-content-between align-items-center\",htmlFor:\"memberCheck\"+child.jid},/*#__PURE__*/React.createElement(\"div\",null,child.name),/*#__PURE__*/React.createElement(\"div\",null,!child.jid.includes(\"@conference.\")?\"Contato\":\"Grupo\"))));})));}));};export default SelectContactAndGroup;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SelectContactAndGroup.tsx"],"names":["React","Input","Label","useContact","useGroup","SearchContactAndGroup","sortContactAndGroup","SelectContactAndGroup","search","handleCheckContactAndGroup","groups","contacts","data","forEach","item","push","map","key","group","children","child","keyChild","e","target","checked","jid","name","includes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,YAA7B,CAGA,OAASC,UAAT,KAA2B,4BAA3B,CACA,OAASC,QAAT,KAAyB,0BAAzB,CACA,OAASC,qBAAT,KAAsC,kCAAtC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,gCAAhC,CAUA,GAAMC,CAAAA,qBAAuC,CAAG,QAA1CA,CAAAA,qBAA0C,MAG1C,IAFJC,CAAAA,MAEI,MAFJA,MAEI,CADJC,0BACI,MADJA,0BACI,eACeL,QAAQ,EADvB,CACIM,MADJ,WACIA,MADJ,iBAEiBP,UAAU,EAF3B,CAEIQ,QAFJ,aAEIA,QAFJ,CAIJ,GAAMC,CAAAA,IAA0B,CAAG,EAAnC,CAEAD,QAAQ,CAACE,OAAT,CAAiB,SAACC,IAAD,CAAU,CACzBF,IAAI,CAACG,IAAL,CAAUD,IAAV,EACD,CAFD,EAIAJ,MAAM,CAACG,OAAP,CAAe,SAACC,IAAD,CAAU,CACvBF,IAAI,CAACG,IAAL,CAAUD,IAAV,EACD,CAFD,EAIA,mBACE,2BAAK,SAAS,CAAC,MAAf,EACGR,mBAAmB,CAACD,qBAAqB,CAACO,IAAD,CAAOJ,MAAP,CAAtB,CAAnB,CAAyDQ,GAAzD,CACC,SAACF,IAAD,CAAOG,GAAP,qBACE,2BAAK,GAAG,CAAEA,GAAV,eACE,2BAAK,SAAS,CAAC,yCAAf,EACGH,IAAI,CAACI,KADR,CADF,cAKE,0BAAI,SAAS,CAAC,iCAAd,EACGJ,IAAI,CAACK,QAAL,CAAcH,GAAd,CAAkB,SAACI,KAAD,CAAQC,QAAR,qBACjB,0BAAI,GAAG,CAAEA,QAAT,eACE,2BAAK,SAAS,CAAC,gCAAf,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,sBAFZ,CAGE,QAAQ,CAAE,kBAACC,CAAD,QACRb,CAAAA,0BAA0B,CAACa,CAAC,CAACC,MAAF,CAASC,OAAV,CAAmBJ,KAAnB,CADlB,EAHZ,CAME,EAAE,CAAE,cAAgBA,KAAK,CAACK,GAN5B,CAOE,KAAK,CAAEL,KAAK,CAACM,IAPf,EADF,cAUE,oBAAC,KAAD,EACE,SAAS,CAAC,wEADZ,CAEE,OAAO,CAAE,cAAgBN,KAAK,CAACK,GAFjC,eAIE,+BAAML,KAAK,CAACM,IAAZ,CAJF,cAKE,+BACG,CAACN,KAAK,CAACK,GAAN,CAAUE,QAAV,CAAmB,cAAnB,CAAD,CAAqC,SAArC,CAAiD,OADpD,CALF,CAVF,CADF,CADiB,EAAlB,CADH,CALF,CADF,EADD,CADH,CADF,CAwCD,CAzDD,CA2DA,cAAepB,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\r\nimport { Input, Label } from \"reactstrap\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { SearchContactAndGroup } from \"../helpers/SearchContactAndGroup\";\r\nimport sortContactAndGroup from \"../helpers/SortContactAndGroup\";\r\n\r\ninterface IProps {\r\n  search: string;\r\n  handleCheckContactAndGroup(\r\n    selected: boolean,\r\n    contact: (IContact | IGroup)\r\n  ): void;\r\n}\r\n\r\nconst SelectContactAndGroup: React.FC<IProps> = ({\r\n  search,\r\n  handleCheckContactAndGroup,\r\n}) => {\r\n  const { groups } = useGroup();\r\n  const { contacts } = useContact();\r\n\r\n  const data: (IContact| IGroup)[] = [];\r\n\r\n  contacts.forEach((item) => {\r\n    data.push(item);\r\n  });\r\n\r\n  groups.forEach((item) => {\r\n    data.push(item);\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      {sortContactAndGroup(SearchContactAndGroup(data, search)).map(\r\n        (item, key) => (\r\n          <div key={key}>\r\n            <div className=\"ml-3 pl-1 font-weight-bold text-primary\">\r\n              {item.group}\r\n            </div>\r\n\r\n            <ul className=\"list-unstyled contact-list mb-2\">\r\n              {item.children.map((child, keyChild) => (\r\n                <li key={keyChild}>\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) =>\r\n                        handleCheckContactAndGroup(e.target.checked, child)\r\n                      }\r\n                      id={\"memberCheck\" + child.jid}\r\n                      value={child.name}\r\n                    />\r\n                    <Label\r\n                      className=\"custom-control-label d-flex justify-content-between align-items-center\"\r\n                      htmlFor={\"memberCheck\" + child.jid}\r\n                    >\r\n                      <div>{child.name}</div>\r\n                      <div>\r\n                        {!child.jid.includes(\"@conference.\")? \"Contato\" : \"Grupo\"}\r\n                      </div>\r\n                    </Label>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectContactAndGroup;\r\n"]},"metadata":{},"sourceType":"module"}