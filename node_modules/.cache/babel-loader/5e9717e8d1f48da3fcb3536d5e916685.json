{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessageText.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport VideoMessage from \"./VideoMessage\";\nimport ImageMessage from \"./ImageMessage\";\nimport AudioMessage from \"./AudioMessage\";\nimport FileMessage from \"./FileMessage\";\nimport './../assets/css/link.css';\nimport Linkify from \"react-linkify\";\n\nconst ChatMessageText = ({\n  message\n}) => {\n  const [show, setShow] = useState(false);\n\n  const toggle = () => setShow(!show); //ao sair do chat atual, esconda o texto de +165 caracteres aberto\n\n\n  useEffect(() => {\n    setShow(false);\n  }, [message]);\n  var labelToReadALongerText = \".. Ler mais\";\n  var smallerMessage = \"\";\n  var biggerMessage = \"\";\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\n\n  if (message.message) {\n    if (message.message.length > MAXNUMBERTODISPLAYMESSAGE) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-1\",\n        style: {\n          wordBreak: \"break-word\",\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, !show ? (smallerMessage = message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE)) && smallerMessage : null, show ? (biggerMessage = message.message.slice(MAXNUMBERTODISPLAYMESSAGE, MAXNUMBEROFCHARACTERSONAMESSAGE)) && message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) + biggerMessage : null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"hover\",\n        style: {\n          border: 0,\n          background: 0,\n          color: \"rgb(217, 237, 250)\"\n        },\n        onClick: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, !show ? labelToReadALongerText : null));\n    }\n\n    if (message.message.length <= 164) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-0\",\n        id: \"receivedmessage\",\n        style: {\n          wordBreak: \"break-word\",\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, message.isAudioMessage && /*#__PURE__*/React.createElement(AudioMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }\n      }), message.isFileMessage && /*#__PURE__*/React.createElement(FileMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }), message.isVideoMessage && /*#__PURE__*/React.createElement(VideoMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 38\n        }\n      }), message.isImageMessage && /*#__PURE__*/React.createElement(ImageMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }\n      }), !message.isAudioMessage && !message.isFileMessage && !message.isVideoMessage && !message.isImageMessage && /*#__PURE__*/React.createElement(Linkify, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, message.message ? message.message.toString().split(\"\\n\").map((msg, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: msg + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 40\n        }\n      }, msg)) : null));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default ChatMessageText;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageText.tsx"],"names":["React","useState","useEffect","VideoMessage","ImageMessage","AudioMessage","FileMessage","Linkify","ChatMessageText","message","show","setShow","toggle","labelToReadALongerText","smallerMessage","biggerMessage","MAXNUMBEROFCHARACTERSONAMESSAGE","MAXNUMBERTODISPLAYMESSAGE","length","wordBreak","textAlign","slice","border","background","color","isAudioMessage","fileUrl","isFileMessage","isVideoMessage","isImageMessage","toString","split","map","msg","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport IMessage from \"../alias/IMessage\";\r\n\r\nimport VideoMessage from \"./VideoMessage\";\r\nimport ImageMessage from \"./ImageMessage\";\r\nimport AudioMessage from \"./AudioMessage\";\r\nimport FileMessage from \"./FileMessage\";\r\n\r\nimport './../assets/css/link.css';\r\n\r\nimport Linkify from \"react-linkify\";\r\n\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\n\r\nconst ChatMessageText: React.FC<IProps> = ({ message }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggle = () => setShow(!show);\r\n\r\n  //ao sair do chat atual, esconda o texto de +165 caracteres aberto\r\n  useEffect(() => {\r\n    setShow(false);\r\n  }, [message]);\r\n\r\n  var labelToReadALongerText = \".. Ler mais\";\r\n  var smallerMessage = \"\";\r\n  var biggerMessage = \"\";\r\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\r\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\r\n\r\n  if (message.message) {\r\n    if (message.message.length > MAXNUMBERTODISPLAYMESSAGE) {\r\n      return (\r\n        <div\r\n          className=\"mb-1\"\r\n          style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n        >\r\n          {!show\r\n            ? (smallerMessage = message.message.slice(\r\n                0,\r\n                MAXNUMBERTODISPLAYMESSAGE\r\n              )) && smallerMessage\r\n            : null}\r\n          {show\r\n            ? (biggerMessage = message.message.slice(\r\n                MAXNUMBERTODISPLAYMESSAGE,\r\n                MAXNUMBEROFCHARACTERSONAMESSAGE\r\n              )) &&\r\n              message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) +\r\n                biggerMessage\r\n            : null}\r\n\r\n          <button\r\n            className=\"hover\"\r\n            style={{\r\n              border: 0,\r\n              background: 0,\r\n              color: \"rgb(217, 237, 250)\",\r\n            }}\r\n            onClick={toggle}\r\n          >\r\n            {!show ? labelToReadALongerText : null}\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (message.message.length <= 164) {\r\n      return (\r\n        <div\r\n          className=\"mb-0\"\r\n          id=\"receivedmessage\"\r\n          style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n        >\r\n          {message.isAudioMessage && <AudioMessage url={message.fileUrl} />}\r\n          {message.isFileMessage && <FileMessage url={message.fileUrl} />}\r\n          {message.isVideoMessage && <VideoMessage url={message.fileUrl} />}\r\n          {message.isImageMessage && <ImageMessage url={message.fileUrl} />}\r\n          {!message.isAudioMessage &&\r\n            !message.isFileMessage &&\r\n            !message.isVideoMessage &&\r\n            !message.isImageMessage && (\r\n              <Linkify>\r\n                {message.message\r\n                  ? message.message\r\n                      .toString()\r\n                      .split(\"\\n\")\r\n                      .map((msg, i) => <div key={msg + i}>{msg}</div>)\r\n                  : null}\r\n              </Linkify>\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default ChatMessageText;\r\n"]},"metadata":{},"sourceType":"module"}