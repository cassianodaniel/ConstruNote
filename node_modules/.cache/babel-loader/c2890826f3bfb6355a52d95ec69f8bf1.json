{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatProfileSidebar.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport ModalAddMember from \"./ModalAddMember\";\nimport { Input } from \"@material-ui/core\";\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\nimport LeaveGroupButton from \"./LeaveGroupButton\";\nimport InfoHeadOnSidebar from \"./InfoHeadOnSidebar\";\nimport MembersOnSidebar from \"./MembersOnSidebar\";\nimport { useTranslation } from \"react-i18next\";\nimport { ModalEditConference } from \"./ModalEditConference\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport ChatType from \"../enuns/ChatType\";\nimport UserType from \"../enuns/UserType\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport ScreenType from \"../enuns/ScreenType\";\nimport { toast } from \"react-toastify\";\nimport ModalGenerics from \"./ModalGenerics\";\n\nconst ChatProfileSidebar = ({\n  show,\n  setShow\n}) => {\n  var _activeChat$members, _activeChat$members2, _activeChat$conferenc, _activeChat$members3;\n\n  const {\n    t\n  } = useTranslation();\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const [newGroupName, setGroupName] = useState(\"\");\n  const {\n    user\n  } = useAuth();\n  const {\n    activeChat,\n    chats,\n    setChats,\n    setActiveChat\n  } = useChat();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    setShowModalAddMember,\n    setShowModalAddParticipant\n  } = useModal();\n  const [showModal, setShowModal] = useState(false);\n  const {\n    setConferenceToRemove,\n    conferenceList\n  } = useConference();\n  const [showModalDeleteConference, setShowModalDeleteConference] = useState(false);\n  const {\n    setScreen\n  } = useMainBox();\n\n  const toggleCollapse1 = () => {\n    setIsOpen1(!isOpen1);\n  };\n\n  const toggleCollapse2 = () => {\n    setIsOpen2(!isOpen2);\n  };\n\n  const closeUserSidebar = () => {\n    setShow(false);\n  };\n\n  const getAttachedFiles = () => {\n    if (show && activeChat.attachedFileList === undefined) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: []\n      });\n    } else if (!show) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAttachedFiles(); // eslint-disable-next-line\n\n    setShowModal(false); // eslint-disable-next-line\n  }, [show]);\n\n  const closeUserSidebarOnActiveChatChange = () => {\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\n  };\n\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\n  const actualMember = (_activeChat$members = activeChat.members) === null || _activeChat$members === void 0 ? void 0 : _activeChat$members.find(member => member.userId === user.id);\n  const isAdmin = (actualMember === null || actualMember === void 0 ? void 0 : actualMember.role) === \"admin\"; //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\n\n  const actualMembers = (_activeChat$members2 = activeChat.members) === null || _activeChat$members2 === void 0 ? void 0 : _activeChat$members2.map(mb => {\n    return mb.userId;\n  });\n  const isGroup = activeChat.groupId;\n  console.log(ChatType.GROUP);\n  const membersArrayPreventingDuplicateDisplayMember = activeChat.chatType === ChatType.CONFERENCE ? (_activeChat$conferenc = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc === void 0 ? void 0 : _activeChat$conferenc.map(participants => {\n    return {\n      name: participants.name,\n      profilePicture: \"\",\n      role: participants.userModerator ? UserType.ADMIN : UserType.USER,\n      userId: participants.userUuid\n    };\n  }) : (_activeChat$members3 = activeChat.members) === null || _activeChat$members3 === void 0 ? void 0 : _activeChat$members3.filter((item, index, arrayCompleto) => arrayCompleto.findIndex(item2 => item.userId === item2.userId) === index);\n\n  function swDelete() {\n    setShowModalDeleteConference(!showModalDeleteConference);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShowModalDeleteConference,\n    show: showModalDeleteConference,\n    title: t(`Do you want to delete the group '${activeChat.name}' ?`),\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        const conferenceData = conferenceList.find(conference => conference.jid === activeChat.jid);\n\n        if (conferenceData) {\n          setConferenceToRemove(conferenceData);\n          setScreen(ScreenType.WELCOME);\n        }\n\n        toast.success(t('Deleted!'), {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, t(\"Confirm\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => {\n        setGroupName(\"\");\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, t(\"Cancel\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditConference, {\n    show: showModal,\n    toggle: () => setShowModal(!showModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: show ? \"block\" : \"none\"\n    },\n    className: \"user-profile-sidebar \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, isGroup && isAdmin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    className: \"nav-btn\",\n    onClick: () => setShowModalAddMember(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(ModalAddMember, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(LeaveGroupButton, {\n    activeChat: activeChat,\n    actualMember: actualMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    onClick: closeUserSidebar,\n    className: \"nav-btn\",\n    id: \"user-profile-hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center px-4 pt-4 pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, !activeChat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, activeChat.name.trim().charAt(0))) : /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: activeChat.profilePicture,\n    onError: () => {\n      if (activeChat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, activeChat);\n    },\n    fallbackImage: defaultAvatar,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, isGroup ? /*#__PURE__*/React.createElement(Input, {\n    inputProps: {\n      min: 0,\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    placeholder: activeChat.name,\n    disableUnderline: true,\n    fullWidth: true,\n    onChange: e => setGroupName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, activeChat.name)), isGroup && newGroupName.length > 0 ? /*#__PURE__*/React.createElement(ChangeGroupNameButton, {\n    newGroupName: newGroupName,\n    setGroupName: setGroupName,\n    actualMembers: actualMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }) : isGroup && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 24\n    }\n  }), activeChat.status && /*#__PURE__*/React.createElement(UserStatusOnProfileSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"px-4 py-2 user-profile-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-user-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoHeadOnSidebar, {\n    activeChat: activeChat,\n    toggleCollapse1: toggleCollapse1,\n    isOpen1: isOpen1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }), activeChat.jid.includes(\"@conference.\") && /*#__PURE__*/React.createElement(MembersOnSidebar, {\n    isAdmin: isAdmin,\n    isOpen2: isOpen2,\n    defaultAvatar: defaultAvatar,\n    toggleCollapse2: toggleCollapse2,\n    membersArrayPreventingDuplicateDisplayMember: membersArrayPreventingDuplicateDisplayMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AttachedFilesOnSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), activeChat.chatType === ChatType.CONFERENCE && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block\",\n    onClick: () => setShowModalAddParticipant(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-add-line mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }), t(\"Add participants\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }), t(\"Edit conference\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    onClick: swDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-delete-bin-line mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 23\n    }\n  }), t(\"Delete conference\")))))))));\n};\n\nexport default ChatProfileSidebar;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatProfileSidebar.tsx"],"names":["React","useEffect","useState","Button","SimpleBar","useChat","AttachedFilesOnSidebar","ReactImageFallback","defaultAvatar","onImgError","useGroup","useContact","useAuth","useModal","ModalAddMember","Input","UserStatusOnProfileSidebar","ChangeGroupNameButton","LeaveGroupButton","InfoHeadOnSidebar","MembersOnSidebar","useTranslation","ModalEditConference","useConference","ChatType","UserType","useMainBox","ScreenType","toast","ModalGenerics","ChatProfileSidebar","show","setShow","t","isOpen1","setIsOpen1","isOpen2","setIsOpen2","newGroupName","setGroupName","user","activeChat","chats","setChats","setActiveChat","groups","setGroups","contacts","setContacts","setShowModalAddMember","setShowModalAddParticipant","showModal","setShowModal","setConferenceToRemove","conferenceList","showModalDeleteConference","setShowModalDeleteConference","setScreen","toggleCollapse1","toggleCollapse2","closeUserSidebar","getAttachedFiles","attachedFileList","undefined","closeUserSidebarOnActiveChatChange","actualMember","members","find","member","userId","id","isAdmin","role","actualMembers","map","mb","isGroup","groupId","console","log","GROUP","membersArrayPreventingDuplicateDisplayMember","chatType","CONFERENCE","conferenceRoomParticipants","participants","name","profilePicture","userModerator","ADMIN","USER","userUuid","filter","item","index","arrayCompleto","findIndex","item2","swDelete","conferenceData","conference","jid","WELCOME","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","display","justifyContent","trim","charAt","includes","min","style","textAlign","e","target","value","length","status","maxHeight","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport ModalAddMember from \"./ModalAddMember\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\r\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\r\nimport LeaveGroupButton from \"./LeaveGroupButton\";\r\nimport InfoHeadOnSidebar from \"./InfoHeadOnSidebar\";\r\nimport MembersOnSidebar from \"./MembersOnSidebar\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ModalEditConference } from \"./ModalEditConference\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport ChatType from \"../enuns/ChatType\";\r\nimport IMember from \"../alias/IMember\";\r\nimport UserType from \"../enuns/UserType\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport { toast } from \"react-toastify\";\r\nimport ModalGenerics from \"./ModalGenerics\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n}\r\n\r\nconst ChatProfileSidebar: React.FC<IProps> = ({ show, setShow }) => {\r\n  const { t } = useTranslation();\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const [newGroupName, setGroupName] = useState(\"\");\r\n  const { user } = useAuth();\r\n  const { activeChat, chats, setChats, setActiveChat } = useChat();\r\n  const { groups, setGroups } = useGroup();\r\n  const { contacts, setContacts } = useContact();\r\n  const { setShowModalAddMember, setShowModalAddParticipant } = useModal();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { setConferenceToRemove, conferenceList } = useConference();\r\n  const [showModalDeleteConference, setShowModalDeleteConference] = useState<boolean>(false);\r\n  const { setScreen } = useMainBox();\r\n  const toggleCollapse1 = () => {\r\n    setIsOpen1(!isOpen1);\r\n  };\r\n\r\n  const toggleCollapse2 = () => {\r\n    setIsOpen2(!isOpen2);\r\n  };\r\n\r\n  const closeUserSidebar = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const getAttachedFiles = () => {\r\n    if (show && activeChat.attachedFileList === undefined) {\r\n      setActiveChat({ ...activeChat, attachedFileList: [] });\r\n    } else if (!show) {\r\n      setActiveChat({ ...activeChat, attachedFileList: undefined });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAttachedFiles(); // eslint-disable-next-line\r\n    setShowModal(false); // eslint-disable-next-line\r\n  }, [show]);\r\n\r\n  const closeUserSidebarOnActiveChatChange = () => {\r\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\r\n  };\r\n\r\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\r\n  const actualMember = activeChat.members?.find(\r\n    (member) => member.userId === user.id\r\n  );\r\n\r\n  const isAdmin = actualMember?.role === \"admin\";\r\n  //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\r\n  const actualMembers = activeChat.members?.map((mb) => {\r\n    return mb.userId;\r\n  });\r\n\r\n  const isGroup = activeChat.groupId;\r\n\r\n  console.log(ChatType.GROUP);\r\n\r\n  const membersArrayPreventingDuplicateDisplayMember: IMember[] | undefined =\r\n    activeChat.chatType === ChatType.CONFERENCE\r\n      ? activeChat.conferenceRoomParticipants?.map((participants) => {\r\n        return {\r\n          name: participants.name,\r\n          profilePicture: \"\",\r\n          role: participants.userModerator ? UserType.ADMIN : UserType.USER,\r\n          userId: participants.userUuid,\r\n        } as IMember;\r\n      })\r\n        : \r\n      activeChat.members?.filter(\r\n        (item, index, arrayCompleto) =>\r\n          arrayCompleto.findIndex((item2) => item.userId === item2.userId) ===\r\n          index\r\n      );\r\n\r\n  function swDelete() {\r\n    setShowModalDeleteConference(!showModalDeleteConference);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ModalGenerics\r\n        setShow={setShowModalDeleteConference}\r\n        show={showModalDeleteConference}\r\n        title={t(`Do you want to delete the group '${activeChat.name}' ?`)}\r\n        children={\r\n          <div>\r\n            <Button type=\"button\" color=\"primary\" onClick={() => {\r\n              const conferenceData = conferenceList.find(\r\n                (conference) => conference.jid === activeChat.jid\r\n              );\r\n              if (conferenceData) {\r\n                setConferenceToRemove(conferenceData);\r\n                setScreen(ScreenType.WELCOME);\r\n              }\r\n              toast.success(t('Deleted!'), {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });  \r\n              }\r\n            }>{t(\"Confirm\")}</Button>\r\n            <Button type=\"button\" color=\"link\" onClick={() => \r\n              {\r\n                setGroupName(\"\")\r\n                setShow(!show);\r\n              }\r\n            }>{t(\"Cancel\")}</Button>\r\n          </div>\r\n        }\r\n      />\r\n      <ModalEditConference\r\n        show={showModal}\r\n        toggle={() => setShowModal(!showModal)}\r\n      />\r\n      <div\r\n        style={{ display: show ? \"block\" : \"none\" }}\r\n        className=\"user-profile-sidebar \"\r\n      >\r\n        <div className=\"d-flex\" style={{ justifyContent: \"center\" }}>\r\n          {isGroup && isAdmin && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  className=\"nav-btn\"\r\n                  onClick={() => setShowModalAddMember(true)}\r\n                >\r\n                  <i className=\"ri-user-add-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <ModalAddMember />\r\n          {isGroup && (\r\n            <LeaveGroupButton\r\n              activeChat={activeChat}\r\n              actualMember={actualMember}\r\n            />\r\n          )}\r\n          {isGroup && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  onClick={closeUserSidebar}\r\n                  className=\"nav-btn\"\r\n                  id=\"user-profile-hide\"\r\n                >\r\n                  <i className=\"ri-close-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"text-center px-4 pt-4 pb-3\">\r\n          <div className=\"mb-4 d-flex justify-content-center\">\r\n            {!activeChat.profilePicture ? (\r\n              <div className=\"avatar-lg\">\r\n                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\">\r\n                  {activeChat.name.trim().charAt(0)}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <ReactImageFallback\r\n                src={activeChat.profilePicture}\r\n                onError={() => {\r\n                  if (activeChat.jid.includes(\"@conference.\"))\r\n                    onImgError(\r\n                      chats,\r\n                      groups,\r\n                      contacts,\r\n                      setChats,\r\n                      setGroups,\r\n                      setContacts,\r\n                      activeChat\r\n                    );\r\n                }}\r\n                fallbackImage={defaultAvatar}\r\n                className=\"rounded-circle avatar-lg img-thumbnail\"\r\n                alt=\"chatvia\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            {isGroup ? (\r\n              <Input\r\n                inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                placeholder={activeChat.name}\r\n                disableUnderline\r\n                fullWidth\r\n                onChange={(e) => setGroupName(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{activeChat.name}</div>\r\n            )}\r\n          </div>\r\n          {isGroup && newGroupName.length > 0 ? (\r\n            <ChangeGroupNameButton\r\n              newGroupName={newGroupName}\r\n              setGroupName={setGroupName}\r\n              actualMembers={actualMembers}\r\n            />\r\n          ) : (\r\n            isGroup && <i className=\"ri-edit-line\"></i>\r\n          )}\r\n          {activeChat.status && <UserStatusOnProfileSidebar />}\r\n        </div>\r\n        <SimpleBar\r\n          style={{ maxHeight: \"100%\" }}\r\n          className=\"px-4 py-2 user-profile-desc\"\r\n        >\r\n          <div id=\"profile-user-accordion\" className=\"custom-accordion\">\r\n            <InfoHeadOnSidebar\r\n              activeChat={activeChat}\r\n              toggleCollapse1={toggleCollapse1}\r\n              isOpen1={isOpen1}\r\n            />\r\n\r\n            {activeChat.jid.includes(\"@conference.\") && (\r\n              <MembersOnSidebar\r\n                isAdmin={isAdmin}\r\n                isOpen2={isOpen2}\r\n                defaultAvatar={defaultAvatar}\r\n                toggleCollapse2={toggleCollapse2}\r\n                membersArrayPreventingDuplicateDisplayMember={\r\n                  membersArrayPreventingDuplicateDisplayMember\r\n                }\r\n              />\r\n            )}\r\n\r\n            <AttachedFilesOnSidebar />\r\n            {activeChat.chatType === ChatType.CONFERENCE && (\r\n              <>\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-success btn-block\"\r\n                    onClick={() => setShowModalAddParticipant(true)}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <i className=\"ri-add-line mr-1\" />\r\n                      {t(\"Add participants\")}\r\n                    </div>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    onClick={() => setShowModal(true)}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <i className=\"ri-edit-line mr-2\" />\r\n                      {t(\"Edit conference\")}\r\n                    </div>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-danger btn-block\"\r\n                    onClick={swDelete}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <i className=\"ri-delete-bin-line mr-2\" />\r\n                      {t(\"Delete conference\")}\r\n                    </div>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatProfileSidebar;\r\n"]},"metadata":{},"sourceType":"module"}