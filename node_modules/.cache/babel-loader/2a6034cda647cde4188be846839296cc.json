{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\DathApp\\\\ConstruNote\\\\src\\\\components\\\\ReplyMessageWrapper.tsx\";\nimport React from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nconst ReplyMessageWrapper = ({\n  message\n}) => {\n  var _message$replyedMessa;\n\n  if (!message.isReplyMessage) return /*#__PURE__*/React.createElement(React.Fragment, null);\n  let treeDots = \"\";\n  if (message.replyedMessage && message.replyedMessage.length > 50) treeDots = \"...\";\n  return /*#__PURE__*/React.createElement(Link, {\n    smooth: true,\n    to: `#${message === null || message === void 0 ? void 0 : message.replyedMessageId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#343a40\",\n      marginBottom: \"5px\"\n    },\n    className: `bg-light pt-1 pb-1 pr-3 pl-3 border-radius`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, message.replyedMessageTo)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, ((_message$replyedMessa = message.replyedMessage) === null || _message$replyedMessa === void 0 ? void 0 : _message$replyedMessa.slice(0, 50)) + treeDots))));\n};\n\nexport default ReplyMessageWrapper;","map":{"version":3,"sources":["C:/Users/Digivox/dev/DathApp/ConstruNote/src/components/ReplyMessageWrapper.tsx"],"names":["React","HashLink","Link","ReplyMessageWrapper","message","isReplyMessage","treeDots","replyedMessage","length","replyedMessageId","color","marginBottom","replyedMessageTo","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAQ,IAAIC,IAArB,QAAiC,wBAAjC;;AAMA,MAAMC,mBAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC7D,MAAI,CAACA,OAAO,CAACC,cAAb,EAA6B,oBAAO,yCAAP;AAC7B,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIF,OAAO,CAACG,cAAR,IAA0BH,OAAO,CAACG,cAAR,CAAuBC,MAAvB,GAAgC,EAA9D,EACEF,QAAQ,GAAG,KAAX;AAEF,sBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,EAAE,EAAG,IAAGF,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEK,gBAAiB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KADT;AAEE,IAAA,SAAS,EAAG,4CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,OAAO,CAACQ,gBAAjB,CADF,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,0BAAAR,OAAO,CAACG,cAAR,gFAAwBM,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,KAAuCP,QAD1C,CADF,CAPF,CADF,CADF;AAiBD,CAvBD;;AAyBA,eAAeH,mBAAf","sourcesContent":["import React from \"react\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\n\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\n\r\nconst ReplyMessageWrapper: React.FC<IProps> = ({ message }) => {\r\n  if (!message.isReplyMessage) return <></>;\r\n  let treeDots = \"\";\r\n  if (message.replyedMessage && message.replyedMessage.length > 50)\r\n    treeDots = \"...\";\r\n\r\n  return (\r\n    <Link smooth to={`#${message?.replyedMessageId}`}>\r\n      <div\r\n        style={{ color: \"#343a40\", marginBottom: \"5px\" }}\r\n        className={`bg-light pt-1 pb-1 pr-3 pl-3 border-radius`}\r\n      >\r\n        <div>\r\n          <strong>{message.replyedMessageTo}</strong>\r\n        </div>\r\n        <div>\r\n          <small className=\"text-muted\">\r\n            {message.replyedMessage?.slice(0, 50) + treeDots}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ReplyMessageWrapper;\r\n"]},"metadata":{},"sourceType":"module"}