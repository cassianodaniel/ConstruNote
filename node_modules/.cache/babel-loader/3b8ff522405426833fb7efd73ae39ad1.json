{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Input,InputGroupAddon,InputGroup,Button}from\"reactstrap\";import{useChat}from\"../contexts/ChatContext\";import{useTranslation}from\"react-i18next\";// import FavoriteUsers from \"./FavoriteUsers\";\nimport ChatList from\"./ChatList\";var ChatTab=function ChatTab(){var _useChat=useChat(),chats=_useChat.chats;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchChat=_useState2[0],setSearchChat=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var searchArray=function searchArray(chats,search){return chats.filter(function(item){return item.name.toUpperCase().match(search.toUpperCase());});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"px-4 pt-4\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-4\"},t(\"Chats\")),/*#__PURE__*/React.createElement(\"div\",{className:\"search-box chat-search-box\"},/*#__PURE__*/React.createElement(InputGroup,{size:\"lg\",className:\"mb-3 bg-light rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(Button,{color:\"link\",className:\"text-muted pr-1 text-decoration-none\",type:\"button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-search-line search-icon font-size-18\"}))),/*#__PURE__*/React.createElement(Input,{type:\"text\",value:searchChat,onChange:function onChange(e){return setSearchChat(e.target.value);},className:\"form-control bg-light\",placeholder:t(\"Search messages or users\")})))),/*#__PURE__*/React.createElement(\"div\",{className:\"px-2\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-3 px-3 font-size-16\"},t(\"Recent\")),/*#__PURE__*/React.createElement(ChatList,{recentChatList:searchArray(chats,searchChat)}))));};export default ChatTab;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatTab.tsx"],"names":["React","useState","Input","InputGroupAddon","InputGroup","Button","useChat","useTranslation","ChatList","ChatTab","chats","searchChat","setSearchChat","t","searchArray","search","filter","item","name","toUpperCase","match","e","target","value"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,eAAhB,CAAiCC,UAAjC,CAA6CC,MAA7C,KAA2D,YAA3D,CAEA,OAASC,OAAT,KAAwB,yBAAxB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,cACZH,OAAO,EADK,CACtBI,KADsB,UACtBA,KADsB,eAEMT,QAAQ,CAAC,EAAD,CAFd,wCAEvBU,UAFuB,eAEXC,aAFW,mCAGhBL,cAAc,EAHE,CAGtBM,CAHsB,iBAGtBA,CAHsB,CAI9B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,KAAD,CAAiBK,MAAjB,CAAoC,CACtD,MAAOL,CAAAA,KAAK,CAACM,MAAN,CAAa,SAACC,IAAD,CAAU,CAC5B,MAAOA,CAAAA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,KAAxB,CAA8BL,MAAM,CAACI,WAAP,EAA9B,CAAP,CACD,CAFM,CAAP,CAGD,CAJD,CAMA,mBACE,qDACE,4CACE,2BAAK,SAAS,CAAC,WAAf,eACE,0BAAI,SAAS,CAAC,MAAd,EAAsBN,CAAC,CAAC,OAAD,CAAvB,CADF,cAEE,2BAAK,SAAS,CAAC,4BAAf,eACE,oBAAC,UAAD,EAAY,IAAI,CAAC,IAAjB,CAAsB,SAAS,CAAC,0BAAhC,eACE,oBAAC,eAAD,EAAiB,SAAS,CAAC,SAA3B,eACE,oBAAC,MAAD,EACE,KAAK,CAAC,MADR,CAEE,SAAS,CAAC,sCAFZ,CAGE,IAAI,CAAC,QAHP,eAKE,yBAAG,SAAS,CAAC,yCAAb,EALF,CADF,CADF,cAUE,oBAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,UAFT,CAGE,QAAQ,CAAE,kBAACU,CAAD,QAAOT,CAAAA,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAHZ,CAIE,SAAS,CAAC,uBAJZ,CAKE,WAAW,CAAEV,CAAC,CAAC,0BAAD,CALhB,EAVF,CADF,CAFF,CADF,cA2BE,2BAAK,SAAS,CAAC,MAAf,eACE,0BAAI,SAAS,CAAC,wBAAd,EAAwCA,CAAC,CAAC,QAAD,CAAzC,CADF,cAEE,oBAAC,QAAD,EAAU,cAAc,CAAEC,WAAW,CAACJ,KAAD,CAAQC,UAAR,CAArC,EAFF,CA3BF,CADF,CADF,CAoCD,CA9CD,CAgDA,cAAeF,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, InputGroupAddon, InputGroup, Button } from \"reactstrap\";\r\nimport IChat from \"../alias/IChat\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import FavoriteUsers from \"./FavoriteUsers\";\r\nimport ChatList from \"./ChatList\";\r\n\r\nconst ChatTab: React.FC = () => {\r\n  const { chats } = useChat();\r\n  const [searchChat, setSearchChat] = useState(\"\"); \r\n  const { t } = useTranslation();\r\n  const searchArray = (chats: IChat[], search: string) => {\r\n    return chats.filter((item) => {\r\n      return item.name.toUpperCase().match(search.toUpperCase());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"px-4 pt-4\">\r\n          <h4 className=\"mb-4\">{t(\"Chats\")}</h4>\r\n          <div className=\"search-box chat-search-box\">\r\n            <InputGroup size=\"lg\" className=\"mb-3 bg-light rounded-lg\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Button\r\n                  color=\"link\"\r\n                  className=\"text-muted pr-1 text-decoration-none\"\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"ri-search-line search-icon font-size-18\"></i>\r\n                </Button>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                value={searchChat}\r\n                onChange={(e) => setSearchChat(e.target.value)}\r\n                className=\"form-control bg-light\"\r\n                placeholder={t(\"Search messages or users\")}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* <FavoriteUsers /> */}\r\n\r\n        <div className=\"px-2\">\r\n          <h5 className=\"mb-3 px-3 font-size-16\">{t(\"Recent\")}</h5>\r\n          <ChatList recentChatList={searchArray(chats, searchChat)} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatTab;\r\n"]},"metadata":{},"sourceType":"module"}