{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalEditInfo.tsx\";\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, ModalFooter, Input } from \"reactstrap\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport { useAuth } from \"./../contexts/AuthContext\";\n\nconst ModalEditInfo = () => {\n  const {\n    showModalEditInfo,\n    setShowModalEditInfo\n  } = useModal();\n  const {\n    setChangedUserData,\n    user\n  } = useAuth();\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const toggle = () => setShowModalEditInfo(!showModalEditInfo);\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: showModalEditInfo,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Edit personal info\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Edit name:\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Nome\",\n    defaultValue: user.name,\n    onChange: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Edit e-mail:\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"E-mail\",\n    defaultValue: user.email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"default\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Close\"), validateEmail(email) && /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      toggle();\n      setChangedUserData({\n        name: nome,\n        email: email\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }\n  }, \"Confirm\"), !validateEmail(email) && /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, \"Confirm\"))))));\n};\n\nexport default ModalEditInfo;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalEditInfo.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","Input","useModal","useAuth","ModalEditInfo","showModalEditInfo","setShowModalEditInfo","setChangedUserData","user","nome","setNome","email","setEmail","validateEmail","re","test","String","toLowerCase","toggle","name","e","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\nconst ModalEditInfo: React.FC = () => {  \r\n  const { showModalEditInfo, setShowModalEditInfo } = useModal();\r\n\r\n  const { setChangedUserData, user } = useAuth();\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  function validateEmail(email: string) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  } \r\n\r\n  const toggle = () => setShowModalEditInfo(!showModalEditInfo);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={showModalEditInfo}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>Edit personal info</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody>\r\n          <div>\r\n            <div className=\"mt-0\">Edit name:</div>\r\n            <Input\r\n              placeholder=\"Nome\"\r\n              defaultValue={user.name}\r\n              onChange={(e) => setNome(e.target.value)\r\n              }\r\n            ></Input>\r\n            <div className=\"mt-4\">Edit e-mail:</div>\r\n            <Input\r\n              placeholder=\"E-mail\"\r\n              defaultValue={user.email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Input>\r\n            <ModalFooter className=\"border-0\">\r\n              <Button type=\"submit\" color=\"default\" onClick={toggle}>\r\n                Close\r\n              </Button>\r\n\r\n              {\r\n               validateEmail(email) && \r\n               <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  toggle();\r\n                  setChangedUserData({name: nome, email: email})\r\n                }}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              }\r\n\r\n              {\r\n               (!validateEmail(email)) && \r\n               <Button\r\n                disabled\r\n                color=\"primary\"\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              }\r\n\r\n            </ModalFooter>\r\n          </div>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditInfo;\r\n"]},"metadata":{},"sourceType":"module"}