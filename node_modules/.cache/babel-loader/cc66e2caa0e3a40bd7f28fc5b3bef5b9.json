{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import{Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input}from\"reactstrap\";import{useTranslation}from\"react-i18next\";import{useModal}from\"./../contexts/ModalContext\";import{useAuth}from\"./../contexts/AuthContext\";export var ModalChangePassword=function ModalChangePassword(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useAuth=useAuth(),setChangedUserPassword=_useAuth.setChangedUserPassword;var _useModal=useModal(),showModalChangePassword=_useModal.showModalChangePassword,setShowModalChangePassword=_useModal.setShowModalChangePassword;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),currentPassword=_useState2[0],setCurrentPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),confirmNewPassword=_useState6[0],setConfirmNewPassword=_useState6[1];var toggle=function toggle(){setShowModalChangePassword(!showModalChangePassword);};var clearPasswords=function clearPasswords(){setCurrentPassword(\"\");setNewPassword(\"\");setConfirmNewPassword(\"\");};var handleCheckPassword=function handleCheckPassword(){if(currentPassword.length>=3){if(currentPassword===newPassword){return false;}else{return true;}}else{return true;}};var handleCheckNewPassword=function handleCheckNewPassword(){if(confirmNewPassword.length>=3){if(newPassword!==confirmNewPassword){return true;}else{return false;}}else{return false;}};var handleCheckAllPasswords=function handleCheckAllPasswords(){if(confirmNewPassword.length>=3&&newPassword.length>=3&&currentPassword.length>=1){if(currentPassword!==newPassword){if(newPassword===confirmNewPassword){return true;}}}else{return false;}};var inputCurrentPassword=useRef(null);useEffect(function(){setTimeout(function(){var _inputCurrentPassword;return(_inputCurrentPassword=inputCurrentPassword.current)===null||_inputCurrentPassword===void 0?void 0:_inputCurrentPassword.focus();},500);},[showModalChangePassword]);return/*#__PURE__*/React.createElement(Modal,{isOpen:showModalChangePassword,centered:true,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{tag:\"h5\",className:\"modal-title font-size-13\",toggle:toggle},t(\"Change password\")),/*#__PURE__*/React.createElement(ModalBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"current-input\"},t(\"Current password\")),/*#__PURE__*/React.createElement(\"input\",{ref:inputCurrentPassword,type:\"password\",className:\"form-control\",id:\"current-input\",defaultValue:\"\",onChange:function onChange(e){return setCurrentPassword(e.target.value);},placeholder:t(\"Current password\")})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"new-input\"},t(\"New password\")),/*#__PURE__*/React.createElement(Input,{type:\"password\",className:\"form-control\",id:\"new-input\",defaultValue:\"\",onChange:function onChange(e){return setNewPassword(e.target.value);},placeholder:t(\"New password\")}),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\",fontSize:12,marginTop:5,marginLeft:2}},handleCheckPassword()?\"\":\"A senha atual corresponde à nova solicitada!\",newPassword.length<3&&newPassword.length>0?\"Mínimo de 3 caracteres\":\"\")),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"confirm-input\"},t(\"Confirm new password\")),/*#__PURE__*/React.createElement(Input,{type:\"password\",className:\"form-control\",id:\"confirm-input\",defaultValue:\"\",onChange:function onChange(e){return setConfirmNewPassword(e.target.value);},placeholder:t(\"Confirm new password\")}),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\",fontSize:12,marginTop:5,marginLeft:2}},confirmNewPassword.length>0&&handleCheckNewPassword()?\"A confirmação da nova senha não corresponde!\":\"\",confirmNewPassword.length<3&&confirmNewPassword.length>0?\" Mínimo de 3 caracteres.\":\"\")))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",onClick:function onClick(){return setShowModalChangePassword(false);}},t(\"Close\")),handleCheckAllPasswords()?/*#__PURE__*/React.createElement(Button,{type:\"button\",className:handleCheckAllPasswords()?\"\":\"disabled\",color:\"primary\",onClick:function onClick(){setChangedUserPassword({oldPassword:currentPassword,newPassword:newPassword});setShowModalChangePassword(false);clearPasswords();}},t(\"Change password\")):/*#__PURE__*/React.createElement(Button,{disabled:true,type:\"button\",className:handleCheckAllPasswords()?\"\":\"disabled\",color:\"primary\"},t(\"Change password\"))));};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalChangePassword.tsx"],"names":["React","useEffect","useState","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","useTranslation","useModal","useAuth","ModalChangePassword","t","setChangedUserPassword","showModalChangePassword","setShowModalChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","toggle","clearPasswords","handleCheckPassword","length","handleCheckNewPassword","handleCheckAllPasswords","inputCurrentPassword","setTimeout","current","focus","e","target","value","color","fontSize","marginTop","marginLeft","oldPassword"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\n\r\nexport const ModalChangePassword: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const { setChangedUserPassword } = useAuth();\r\n  const { showModalChangePassword, setShowModalChangePassword } = useModal();\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\r\n  const toggle = () => {\r\n    setShowModalChangePassword(!showModalChangePassword);\r\n  };\r\n\r\n  const clearPasswords = () => {\r\n    setCurrentPassword(\"\");\r\n    setNewPassword(\"\");\r\n    setConfirmNewPassword(\"\");\r\n  };\r\n\r\n  const handleCheckPassword = () => {\r\n    if (currentPassword.length >= 3) {\r\n      if (currentPassword === newPassword) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleCheckNewPassword = () => {\r\n    if (confirmNewPassword.length >= 3) {\r\n      if (newPassword !== confirmNewPassword) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleCheckAllPasswords = () => {\r\n    if (\r\n      confirmNewPassword.length >= 3 &&\r\n      newPassword.length >= 3 &&\r\n      currentPassword.length >= 1\r\n    ) {\r\n      if (currentPassword !== newPassword) {\r\n        if (newPassword === confirmNewPassword) {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const inputCurrentPassword = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputCurrentPassword.current?.focus(), 500);\r\n  }, [showModalChangePassword]);\r\n\r\n  return (\r\n    <Modal isOpen={showModalChangePassword} centered toggle={toggle}>\r\n      <ModalHeader\r\n        tag=\"h5\"\r\n        className=\"modal-title font-size-13\"\r\n        toggle={toggle}\r\n      >\r\n        {t(\"Change password\")}\r\n      </ModalHeader>\r\n      <ModalBody className=\"p-4\">\r\n        <Form>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label htmlFor=\"current-input\">{t(\"Current password\")}</Label>\r\n            <input\r\n              ref={inputCurrentPassword}\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"current-input\"\r\n              defaultValue={\"\"}\r\n              onChange={(e) => setCurrentPassword(e.target.value)}\r\n              placeholder={t(\"Current password\")}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label htmlFor=\"new-input\">{t(\"New password\")}</Label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"new-input\"\r\n              defaultValue={\"\"}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              placeholder={t(\"New password\")}\r\n            />\r\n            <p\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: 12,\r\n                marginTop: 5,\r\n                marginLeft: 2,\r\n              }}\r\n            >\r\n              {handleCheckPassword()\r\n                ? \"\"\r\n                : \"A senha atual corresponde à nova solicitada!\"}\r\n              {newPassword.length < 3 && newPassword.length > 0\r\n                ? \"Mínimo de 3 caracteres\"\r\n                : \"\"}\r\n            </p>\r\n          </FormGroup>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label htmlFor=\"confirm-input\">{t(\"Confirm new password\")}</Label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"confirm-input\"\r\n              defaultValue={\"\"}\r\n              onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n              placeholder={t(\"Confirm new password\")}\r\n            />\r\n            <p\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: 12,\r\n                marginTop: 5,\r\n                marginLeft: 2,\r\n              }}\r\n            >\r\n              {confirmNewPassword.length > 0 && handleCheckNewPassword()\r\n                ? \"A confirmação da nova senha não corresponde!\"\r\n                : \"\"}\r\n              {confirmNewPassword.length < 3 && confirmNewPassword.length > 0\r\n                ? \" Mínimo de 3 caracteres.\"\r\n                : \"\"}\r\n            </p>\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          type=\"button\"\r\n          color=\"link\"\r\n          onClick={() => setShowModalChangePassword(false)}\r\n        >\r\n          {t(\"Close\")}\r\n        </Button>\r\n        {handleCheckAllPasswords() ? (\r\n          <Button\r\n            type=\"button\"\r\n            className={handleCheckAllPasswords() ? \"\" : \"disabled\"}\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setChangedUserPassword({\r\n                oldPassword: currentPassword,\r\n                newPassword: newPassword,\r\n              });\r\n              setShowModalChangePassword(false);\r\n              clearPasswords();\r\n            }}\r\n          >\r\n            {t(\"Change password\")}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled\r\n            type=\"button\"\r\n            className={handleCheckAllPasswords() ? \"\" : \"disabled\"}\r\n            color=\"primary\"\r\n          >\r\n            {t(\"Change password\")}\r\n          </Button>\r\n        )}\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}