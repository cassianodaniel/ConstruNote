{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalAddParticipant.tsx\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport SelectContact from \"./SelectContact\";\n\nconst ModalAddParticipant = () => {\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      setSelectedContact([...selectedContact, contact]);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.id === contact.id) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    contacts\n  } = useContact();\n  const [search, setSearch] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, t(\"Conference Members\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    id: \"search-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"320px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectContact, {\n    handleCheckContact: handleCheckContact,\n    contacts: contacts,\n    search: search,\n    checkedContacts: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default ModalAddParticipant;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddParticipant.tsx"],"names":["React","useState","useTranslation","FormGroup","Label","Input","SimpleBar","useContact","SelectContact","ModalAddParticipant","handleCheckContact","selected","contact","setSelectedContact","selectedContact","filter","sel","id","t","contacts","search","setSearch","e","target","value","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,KAHF,QAIO,YAJP;AAKA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAoBC,OAApB,KAA0C;AACnE,QAAID,QAAJ,EAAc;AACZE,MAAAA,kBAAkB,CAAC,CAAC,GAAGC,eAAJ,EAAqBF,OAArB,CAAD,CAAlB;AACD,KAFD,MAEO;AACLC,MAAAA,kBAAkB,CAChBC,eAAe,CAACC,MAAhB,CAAwBC,GAAD,IAAS;AAC9B,YAAIA,GAAG,CAACC,EAAJ,KAAWL,OAAO,CAACK,EAAvB,EAA2B;AACzB,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OALD,CADgB,CAAlB;AAQD;AACF,GAbD;;AAcA,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAeZ,UAAU,EAA/B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,eAAD,EAAkBD,kBAAlB,IAAwCZ,QAAQ,CAAa,EAAb,CAAtD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BiB,CAAC,CAAC,oBAAD,CAAhC,CADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,cAHL;AAIE,IAAA,KAAK,EAAEE,MAJT;AAKE,IAAA,QAAQ,EAAGE,CAAD,IAAOD,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAME,IAAA,WAAW,EAAEN,CAAC,CAAC,gBAAD,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,kBAAkB,EAAEf,kBADtB;AAEE,IAAA,QAAQ,EAAES,QAFZ;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,eAAe,EAAEN,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAVF,CADF,CADF;AA2BD,CA9CD;;AAgDA,eAAeL,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport SelectContact from \"./SelectContact\";\r\n\r\nconst ModalAddParticipant = () => {\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setSelectedContact([...selectedContact, contact]);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.id === contact.id) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const { t } = useTranslation();\r\n  const { contacts } = useContact();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n  return(\r\n    <div className=\"col\">\r\n      <FormGroup className=\"mb-4\">\r\n        <Label htmlFor=\"search-input\">{t(\"Conference Members\")}</Label>\r\n        <Input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          id=\"search-input\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          placeholder={t(\"Search users..\")}\r\n        />\r\n        <div className=\"border\">\r\n          <SimpleBar style={{ height: \"320px\" }}>\r\n            <div id=\"addContacts\">\r\n              <SelectContact\r\n                handleCheckContact={handleCheckContact}\r\n                contacts={contacts}\r\n                search={search}\r\n                checkedContacts={selectedContact}\r\n              />\r\n            </div>\r\n          </SimpleBar>\r\n        </div>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAddParticipant;"]},"metadata":{},"sourceType":"module"}