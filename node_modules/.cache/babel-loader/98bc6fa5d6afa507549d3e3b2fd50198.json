{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar xml = require('@xmpp/xml'); // https://tools.ietf.org/html/draft-cridland-xmpp-session-01\n\n\nvar NS = 'urn:ietf:params:xml:ns:xmpp-session';\n\nmodule.exports = function (_ref) {\n  var iqCaller = _ref.iqCaller,\n      streamFeatures = _ref.streamFeatures;\n  streamFeatures.use('session', NS, /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, next, feature) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!feature.getChild('optional')) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 2:\n              _context.next = 4;\n              return iqCaller.set(xml('session', NS));\n\n            case 4:\n              return _context.abrupt(\"return\", next());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/session-establishment/index.js"],"names":["xml","require","NS","module","exports","iqCaller","streamFeatures","use","context","next","feature","getChild","set"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB,C,CAEA;;;AAEA,IAAMC,EAAE,GAAG,qCAAX;;AAEAC,MAAM,CAACC,OAAP,GAAiB,gBAAqC;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;AACpDA,EAAAA,cAAc,CAACC,GAAf,CAAmB,SAAnB,EAA8BL,EAA9B;AAAA,yEAAkC,iBAAOM,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC5BA,OAAO,CAACC,QAAR,CAAiB,UAAjB,CAD4B;AAAA;AAAA;AAAA;;AAAA,+CACSF,IAAI,EADb;;AAAA;AAAA;AAAA,qBAE1BJ,QAAQ,CAACO,GAAT,CAAaZ,GAAG,CAAC,SAAD,EAAYE,EAAZ,CAAhB,CAF0B;;AAAA;AAAA,+CAGzBO,IAAI,EAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAKD,CAND","sourcesContent":["'use strict'\n\nconst xml = require('@xmpp/xml')\n\n// https://tools.ietf.org/html/draft-cridland-xmpp-session-01\n\nconst NS = 'urn:ietf:params:xml:ns:xmpp-session'\n\nmodule.exports = function({iqCaller, streamFeatures}) {\n  streamFeatures.use('session', NS, async (context, next, feature) => {\n    if (feature.getChild('optional')) return next()\n    await iqCaller.set(xml('session', NS))\n    return next()\n  })\n}\n"]},"metadata":{},"sourceType":"script"}