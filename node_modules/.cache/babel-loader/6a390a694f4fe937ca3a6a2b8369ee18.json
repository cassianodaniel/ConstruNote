{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyParticipantLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nconst CopyParticipantLinkButtonInActiveCall = ({\n  participantLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(participantLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      toast.success(t('Copied to clipboard a participant invite!'), {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    style: {\n      color: \"black\",\n      cursor: \"pointer\",\n      marginLeft: \"5px\",\n      fontSize: \"18px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"black\",\n      backgroundColor: \"white\",\n      borderRadius: 3\n    },\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CopyParticipantLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyParticipantLinkButtonInActiveCall.tsx"],"names":["React","Button","useCopy","useTranslation","toast","CopyParticipantLinkButtonInActiveCall","participantLink","buttonIcon","copy","t","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","color","cursor","marginLeft","fontSize","padding","backgroundColor","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAOA,MAAMC,qCAAwF,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAChI,QAAM;AAAEC,IAAAA;AAAF,MAAWN,OAAO,CAACI,eAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACA,sBACI,uDACI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACXK,MAAAA,IAAI;AACJJ,MAAAA,KAAK,CAACM,OAAN,CAAcD,CAAC,CAAC,2CAAD,CAAf,EAA8D;AAC1DE,QAAAA,QAAQ,EAAE,YADgD;AAE1DC,QAAAA,SAAS,EAAE,IAF+C;AAG1DC,QAAAA,eAAe,EAAE,IAHyC;AAI1DC,QAAAA,YAAY,EAAE,IAJ4C;AAK1DC,QAAAA,YAAY,EAAE,IAL4C;AAM1DC,QAAAA,SAAS,EAAE,IAN+C;AAO1DC,QAAAA,QAAQ,EAAEC;AAPgD,OAA9D;AASH,KAdD;AAeA,IAAA,SAAS,EAAC,2BAfV;AAgBA,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,MAAM,EAAE,SAFL;AAGHC,MAAAA,UAAU,EAAE,KAHT;AAIHC,MAAAA,QAAQ,EAAE,MAJP;AAKHC,MAAAA,OAAO,EAAE;AALN,KAhBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAwBI;AACA,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAE,OADJ;AAEHK,MAAAA,eAAe,EAAE,OAFd;AAGHC,MAAAA,YAAY,EAAE;AAHX,KADP;AAMA,IAAA,SAAS,EAAElB,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADJ,CADJ;AAoCH,CAvCD;;AAyCA,eAAeF,qCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport interface ICopyParticipantLinkButtonInActiveCall{\r\n    participantLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\nconst CopyParticipantLinkButtonInActiveCall : React.FC<ICopyParticipantLinkButtonInActiveCall> = ({participantLink, buttonIcon}) => {\r\n    const { copy } = useCopy(participantLink);\r\n    const { t } = useTranslation();\r\n    return(\r\n        <>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n                copy();\r\n                toast.success(t('Copied to clipboard a participant invite!'), {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            style={{\r\n                color: \"black\",\r\n                cursor: \"pointer\",\r\n                marginLeft: \"5px\",\r\n                fontSize: \"18px\",\r\n                padding: \"5px\",\r\n            }}\r\n            >\r\n                <i \r\n                style={{\r\n                    color: \"black\",\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 3,\r\n                }}\r\n                className={buttonIcon}/>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CopyParticipantLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}