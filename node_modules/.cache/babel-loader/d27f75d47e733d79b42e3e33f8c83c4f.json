{"ast":null,"code":"import React from \"react\";\nexport function TextMessageTagParse(value, contacts, openContact) {\n  let newValue = value.split(\"<squadtag>\");\n  let newComp = [];\n  newValue.forEach(element => {\n    let msgTest = element.split(\"<squadtag/>\");\n    console.log(msgTest);\n\n    if (msgTest.length > 1) {\n      msgTest.forEach((msg, i) => {\n        if (i === 0) {\n          let obj = JSON.parse(msg);\n          newComp.push(React.createElement(\"a\", {\n            href: \"#\",\n            onClick: () => openContact(contacts.filter(item => item.id === obj.userId)[0])\n          }, `@${obj.name}`));\n        } else {\n          newComp.push(msg);\n        }\n      });\n    } else {\n      newComp.push(msgTest);\n    }\n  });\n  return newComp;\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/helpers/TextMessageTagParse.ts"],"names":["React","TextMessageTagParse","value","contacts","openContact","newValue","split","newComp","forEach","element","msgTest","console","log","length","msg","i","obj","JSON","parse","push","createElement","href","onClick","filter","item","id","userId","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,SAASC,mBAAT,CACLC,KADK,EAELC,QAFK,EAGLC,WAHK,EAIL;AACA,MAAIC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAY,YAAZ,CAAf;AACA,MAAIC,OAAc,GAAG,EAArB;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAkBC,OAAD,IAAa;AAC5B,QAAIC,OAAO,GAAGD,OAAO,CAACH,KAAR,CAAc,aAAd,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,QAAIA,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtBH,MAAAA,OAAO,CAACF,OAAR,CAAgB,CAACM,GAAD,EAAMC,CAAN,KAAY;AAC1B,YAAIA,CAAC,KAAK,CAAV,EAAa;AACX,cAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAV;AACAP,UAAAA,OAAO,CAACY,IAAR,CACEnB,KAAK,CAACoB,aAAN,CACE,GADF,EAEE;AACEC,YAAAA,IAAI,EAAE,GADR;AAEEC,YAAAA,OAAO,EAAE,MACPlB,WAAW,CACTD,QAAQ,CAACoB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,GAAG,CAACU,MAA1C,EAAkD,CAAlD,CADS;AAHf,WAFF,EASG,IAAGV,GAAG,CAACW,IAAK,EATf,CADF;AAaD,SAfD,MAeO;AACLpB,UAAAA,OAAO,CAACY,IAAR,CAAaL,GAAb;AACD;AACF,OAnBD;AAoBD,KArBD,MAqBO;AACLP,MAAAA,OAAO,CAACY,IAAR,CAAaT,OAAb;AACD;AACF,GA3BD;AA6BA,SAAOH,OAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport IContact from \"../alias/IContact\";\r\n\r\nexport function TextMessageTagParse(\r\n  value: string,\r\n  contacts: IContact[],\r\n  openContact: any\r\n) {\r\n  let newValue = value.split(\"<squadtag>\");\r\n  let newComp: any[] = [];\r\n  newValue.forEach((element) => {\r\n    let msgTest = element.split(\"<squadtag/>\");\r\n    console.log(msgTest);\r\n    if (msgTest.length > 1) {\r\n      msgTest.forEach((msg, i) => {\r\n        if (i === 0) {\r\n          let obj = JSON.parse(msg);\r\n          newComp.push(\r\n            React.createElement(\r\n              \"a\",\r\n              {\r\n                href: \"#\",\r\n                onClick: () =>\r\n                  openContact(\r\n                    contacts.filter((item) => item.id === obj.userId)[0]\r\n                  ),\r\n              },\r\n              `@${obj.name}`\r\n            )\r\n          );\r\n        } else {\r\n          newComp.push(msg);\r\n        }\r\n      });\r\n    } else {\r\n      newComp.push(msgTest);\r\n    }\r\n  });\r\n\r\n  return newComp;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}