{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\MessageGroup.tsx\";\nimport React from \"react\";\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\nimport moment from \"moment\";\nimport ImageList from \"./ImageList\";\nimport FileList from \"./FileList\"; //i18n\n\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst MessageGroup = ({\n  activeChat,\n  message\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n\n  const toggle = () => {};\n\n  const deleteMessage = id => {};\n\n  console.log(\"usuario\", user);\n  console.log(\"msg\", message);\n  console.log(\"chat\", activeChat);\n\n  const messageTime = () => {\n    if (!activeChat.isTyping) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat-time mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-time-line align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, moment(message.time).format(\"HH:mm\")));\n    }\n  };\n\n  const option = () => {\n    if (!activeChat.isTyping) {\n      return /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"align-self-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        tag: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-more-2-fill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, t(\"Copy\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-file-copy-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, t(\"Save\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-save-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Forward\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-chat-forward-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: () => deleteMessage(message.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Delete\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-delete-bin-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }))));\n    }\n  };\n\n  const photo = () => {\n    if (activeChat.profilePicture) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: activeChat.profilePicture,\n        alt: \"chatvia\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-user-img align-self-center mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, message.userName && message.userName.trim().charAt(0))));\n    }\n  };\n\n  const messageText = () => {\n    if (message.message) return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      style: {\n        wordBreak: \"break-all\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, message.message);\n  };\n\n  const isTyping = () => {\n    if (activeChat.isTyping) return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"typing\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"animate-typing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const image = () => {\n    if (message.isImageMessage && false) return /*#__PURE__*/React.createElement(ImageList, {\n      image: message.fileUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }\n    });\n  };\n\n  const file = () => {\n    if (message.isFileMessage && false) return /*#__PURE__*/React.createElement(FileList, {\n      fileName: message.fileUrl,\n      fileSize: message.fileUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: user.id === message.fromUser ? \"right\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, photo()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-content \" + (user.id === message.fromUser ? \"message-chat-left\" : \"message-chat-right\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, messageText(), image(), file(), messageTime(), isTyping()), option()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, message.userName))));\n};\n\nexport default MessageGroup;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MessageGroup.tsx"],"names":["React","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","moment","ImageList","FileList","useTranslation","useAuth","MessageGroup","activeChat","message","t","user","toggle","deleteMessage","id","console","log","messageTime","isTyping","time","format","option","photo","profilePicture","userName","trim","charAt","messageText","wordBreak","image","isImageMessage","fileUrl","file","isFileMessage","fromUser"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport ChatType from \"../enuns/ChatType\";\r\n\r\nimport ImageList from \"./ImageList\";\r\nimport FileList from \"./FileList\";\r\n\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n}\r\n\r\nconst MessageGroup: React.FC<IProps> = ({ activeChat, message }) => {\r\n  const { t } = useTranslation();\r\n  const { user } = useAuth();\r\n\r\n  const toggle = () => {};\r\n  const deleteMessage = (id: string) => {};\r\n\r\n  console.log(\"usuario\", user);\r\n  console.log(\"msg\", message);\r\n  console.log(\"chat\", activeChat);\r\n\r\n  const messageTime = () => {\r\n    if (!activeChat.isTyping) {\r\n      return (\r\n        <p className=\"chat-time mb-0\">\r\n          <i className=\"ri-time-line align-middle\"></i>{\" \"}\r\n          <span className=\"align-middle\">\r\n            {moment(message.time).format(\"HH:mm\")}\r\n          </span>\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  const option = () => {\r\n    if (!activeChat.isTyping) {\r\n      return (\r\n        <UncontrolledDropdown className=\"align-self-start\">\r\n          <DropdownToggle tag=\"a\">\r\n            <i className=\"ri-more-2-fill\"></i>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>\r\n              {t(\"Copy\")}\r\n              <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              {t(\"Save\")}{\" \"}\r\n              <i className=\"ri-save-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem onClick={toggle}>\r\n              Forward{\" \"}\r\n              <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem onClick={() => deleteMessage(message.id)}>\r\n              Delete{\" \"}\r\n              <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  const photo = () => {\r\n    if (activeChat.profilePicture) {\r\n      return <img src={activeChat.profilePicture} alt=\"chatvia\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"chat-user-img align-self-center mr-3\">\r\n          <div className=\"avatar-xs\">\r\n            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n              {message.userName && message.userName.trim().charAt(0)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const messageText = () => {\r\n    if (message.message)\r\n      return (\r\n        <p className=\"mb-0\" style={{ wordBreak: \"break-all\" }}>\r\n          {message.message}\r\n        </p>\r\n      );\r\n  };\r\n\r\n  const isTyping = () => {\r\n    if (activeChat.isTyping)\r\n      return (\r\n        <p className=\"mb-0\">\r\n          typing\r\n          <span className=\"animate-typing\">\r\n            <span className=\"dot ml-1\"></span>\r\n            <span className=\"dot ml-1\"></span>\r\n            <span className=\"dot ml-1\"></span>\r\n          </span>\r\n        </p>\r\n      );\r\n  };\r\n\r\n  const image = () => {\r\n    if (message.isImageMessage && false)\r\n      return <ImageList image={message.fileUrl} />;\r\n  };\r\n\r\n  const file = () => {\r\n    if (message.isFileMessage && false)\r\n      return <FileList fileName={message.fileUrl} fileSize={message.fileUrl} />;\r\n  };\r\n\r\n  return (\r\n    <li className={user.id === message.fromUser ? \"right\" : \"\"}>\r\n      <div className=\"conversation-list\">\r\n        <div className=\"chat-avatar\">{photo()}</div>\r\n\r\n        <div\r\n          className={\r\n            \"user-chat-content \" +\r\n            (user.id === message.fromUser\r\n              ? \"message-chat-left\"\r\n              : \"message-chat-right\")\r\n          }\r\n        >\r\n          <div className=\"ctext-wrap\">\r\n            <div className=\"ctext-wrap-content\">\r\n              {messageText()}\r\n              {image()}\r\n              {file()}\r\n              {messageTime()}\r\n              {isTyping()}\r\n            </div>\r\n            {option()}\r\n          </div>\r\n          <div className=\"conversation-name\">{message.userName}</div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MessageGroup;\r\n"]},"metadata":{},"sourceType":"module"}