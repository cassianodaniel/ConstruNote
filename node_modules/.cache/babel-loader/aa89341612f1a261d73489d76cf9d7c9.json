{"ast":null,"code":"'use strict';\n\nvar compose = require('koa-compose');\n\nvar IncomingContext = require('./lib/IncomingContext');\n\nvar OutgoingContext = require('./lib/OutgoingContext');\n\nfunction listener(entity, middleware, Context) {\n  return function (stanza) {\n    var ctx = new Context(entity, stanza);\n    return compose(middleware)(ctx);\n  };\n}\n\nfunction errorHandler(entity) {\n  return function (ctx, next) {\n    next().then(function (reply) {\n      return reply && entity.send(reply);\n    }).catch(function (err) {\n      return entity.emit('error', err);\n    });\n  };\n}\n\nmodule.exports = function (_ref) {\n  var entity = _ref.entity;\n  var incoming = [errorHandler(entity)];\n  var outgoing = [];\n  var incomingListener = listener(entity, incoming, IncomingContext);\n  var outgoingListener = listener(entity, outgoing, OutgoingContext);\n  entity.on('element', incomingListener);\n  entity.hookOutgoing = outgoingListener;\n  return {\n    use: function use(fn) {\n      incoming.push(fn);\n      return fn;\n    },\n    filter: function filter(fn) {\n      outgoing.push(fn);\n      return fn;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/middleware/index.js"],"names":["compose","require","IncomingContext","OutgoingContext","listener","entity","middleware","Context","stanza","ctx","errorHandler","next","then","reply","send","catch","err","emit","module","exports","incoming","outgoing","incomingListener","outgoingListener","on","hookOutgoing","use","fn","push","filter"],"mappings":"AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAMC,eAAe,GAAGD,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAME,eAAe,GAAGF,OAAO,CAAC,uBAAD,CAA/B;;AAEA,SAASG,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,OAAtC,EAA+C;AAC7C,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAMC,GAAG,GAAG,IAAIF,OAAJ,CAAYF,MAAZ,EAAoBG,MAApB,CAAZ;AACA,WAAOR,OAAO,CAACM,UAAD,CAAP,CAAoBG,GAApB,CAAP;AACD,GAHD;AAID;;AAED,SAASC,YAAT,CAAsBL,MAAtB,EAA8B;AAC5B,SAAO,UAASI,GAAT,EAAcE,IAAd,EAAoB;AACzBA,IAAAA,IAAI,GACDC,IADH,CACQ,UAAAC,KAAK;AAAA,aAAIA,KAAK,IAAIR,MAAM,CAACS,IAAP,CAAYD,KAAZ,CAAb;AAAA,KADb,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIX,MAAM,CAACY,IAAP,CAAY,OAAZ,EAAqBD,GAArB,CAAJ;AAAA,KAFZ;AAGD,GAJD;AAKD;;AAEDE,MAAM,CAACC,OAAP,GAAiB,gBAAmB;AAAA,MAATd,MAAS,QAATA,MAAS;AAClC,MAAMe,QAAQ,GAAG,CAACV,YAAY,CAACL,MAAD,CAAb,CAAjB;AACA,MAAMgB,QAAQ,GAAG,EAAjB;AAEA,MAAMC,gBAAgB,GAAGlB,QAAQ,CAACC,MAAD,EAASe,QAAT,EAAmBlB,eAAnB,CAAjC;AACA,MAAMqB,gBAAgB,GAAGnB,QAAQ,CAACC,MAAD,EAASgB,QAAT,EAAmBlB,eAAnB,CAAjC;AAEAE,EAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqBF,gBAArB;AACAjB,EAAAA,MAAM,CAACoB,YAAP,GAAsBF,gBAAtB;AAEA,SAAO;AACLG,IAAAA,GADK,eACDC,EADC,EACG;AACNP,MAAAA,QAAQ,CAACQ,IAAT,CAAcD,EAAd;AACA,aAAOA,EAAP;AACD,KAJI;AAKLE,IAAAA,MALK,kBAKEF,EALF,EAKM;AACTN,MAAAA,QAAQ,CAACO,IAAT,CAAcD,EAAd;AACA,aAAOA,EAAP;AACD;AARI,GAAP;AAUD,CApBD","sourcesContent":["'use strict'\n\nconst compose = require('koa-compose')\n\nconst IncomingContext = require('./lib/IncomingContext')\nconst OutgoingContext = require('./lib/OutgoingContext')\n\nfunction listener(entity, middleware, Context) {\n  return function(stanza) {\n    const ctx = new Context(entity, stanza)\n    return compose(middleware)(ctx)\n  }\n}\n\nfunction errorHandler(entity) {\n  return function(ctx, next) {\n    next()\n      .then(reply => reply && entity.send(reply))\n      .catch(err => entity.emit('error', err))\n  }\n}\n\nmodule.exports = function({entity}) {\n  const incoming = [errorHandler(entity)]\n  const outgoing = []\n\n  const incomingListener = listener(entity, incoming, IncomingContext)\n  const outgoingListener = listener(entity, outgoing, OutgoingContext)\n\n  entity.on('element', incomingListener)\n  entity.hookOutgoing = outgoingListener\n\n  return {\n    use(fn) {\n      incoming.push(fn)\n      return fn\n    },\n    filter(fn) {\n      outgoing.push(fn)\n      return fn\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}