{"ast":null,"code":"/**\n * @internal\n */\nexport class Parameters {\n  constructor(parameters) {\n    this.parameters = {}; // for in is required here as the Grammar parser is adding to the prototype chain\n\n    for (const param in parameters) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (parameters.hasOwnProperty(param)) {\n        this.setParam(param, parameters[param]);\n      }\n    }\n  }\n\n  setParam(key, value) {\n    if (key) {\n      this.parameters[key.toLowerCase()] = typeof value === \"undefined\" || value === null ? null : value.toString();\n    }\n  }\n\n  getParam(key) {\n    if (key) {\n      return this.parameters[key.toLowerCase()];\n    }\n  }\n\n  hasParam(key) {\n    return !!(key && this.parameters[key.toLowerCase()] !== undefined);\n  }\n\n  deleteParam(key) {\n    key = key.toLowerCase();\n\n    if (this.hasParam(key)) {\n      const value = this.parameters[key];\n      delete this.parameters[key];\n      return value;\n    }\n  }\n\n  clearParams() {\n    this.parameters = {};\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/sip.js/lib/grammar/parameters.js"],"names":["Parameters","constructor","parameters","param","hasOwnProperty","setParam","key","value","toLowerCase","toString","getParam","hasParam","undefined","deleteParam","clearParams"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkB,EAAlB,CADoB,CAEpB;;AACA,SAAK,MAAMC,KAAX,IAAoBD,UAApB,EAAgC;AAC5B;AACA,UAAIA,UAAU,CAACE,cAAX,CAA0BD,KAA1B,CAAJ,EAAsC;AAClC,aAAKE,QAAL,CAAcF,KAAd,EAAqBD,UAAU,CAACC,KAAD,CAA/B;AACH;AACJ;AACJ;;AACDE,EAAAA,QAAQ,CAACC,GAAD,EAAMC,KAAN,EAAa;AACjB,QAAID,GAAJ,EAAS;AACL,WAAKJ,UAAL,CAAgBI,GAAG,CAACE,WAAJ,EAAhB,IAAsC,OAAOD,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA3C,GAAmD,IAAnD,GAA0DA,KAAK,CAACE,QAAN,EAA/F;AACH;AACJ;;AACDC,EAAAA,QAAQ,CAACJ,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACL,aAAO,KAAKJ,UAAL,CAAgBI,GAAG,CAACE,WAAJ,EAAhB,CAAP;AACH;AACJ;;AACDG,EAAAA,QAAQ,CAACL,GAAD,EAAM;AACV,WAAO,CAAC,EAAEA,GAAG,IAAI,KAAKJ,UAAL,CAAgBI,GAAG,CAACE,WAAJ,EAAhB,MAAuCI,SAAhD,CAAR;AACH;;AACDC,EAAAA,WAAW,CAACP,GAAD,EAAM;AACbA,IAAAA,GAAG,GAAGA,GAAG,CAACE,WAAJ,EAAN;;AACA,QAAI,KAAKG,QAAL,CAAcL,GAAd,CAAJ,EAAwB;AACpB,YAAMC,KAAK,GAAG,KAAKL,UAAL,CAAgBI,GAAhB,CAAd;AACA,aAAO,KAAKJ,UAAL,CAAgBI,GAAhB,CAAP;AACA,aAAOC,KAAP;AACH;AACJ;;AACDO,EAAAA,WAAW,GAAG;AACV,SAAKZ,UAAL,GAAkB,EAAlB;AACH;;AAlCmB","sourcesContent":["/**\n * @internal\n */\nexport class Parameters {\n    constructor(parameters) {\n        this.parameters = {};\n        // for in is required here as the Grammar parser is adding to the prototype chain\n        for (const param in parameters) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (parameters.hasOwnProperty(param)) {\n                this.setParam(param, parameters[param]);\n            }\n        }\n    }\n    setParam(key, value) {\n        if (key) {\n            this.parameters[key.toLowerCase()] = (typeof value === \"undefined\" || value === null) ? null : value.toString();\n        }\n    }\n    getParam(key) {\n        if (key) {\n            return this.parameters[key.toLowerCase()];\n        }\n    }\n    hasParam(key) {\n        return !!(key && this.parameters[key.toLowerCase()] !== undefined);\n    }\n    deleteParam(key) {\n        key = key.toLowerCase();\n        if (this.hasParam(key)) {\n            const value = this.parameters[key];\n            delete this.parameters[key];\n            return value;\n        }\n    }\n    clearParams() {\n        this.parameters = {};\n    }\n}\n"]},"metadata":{},"sourceType":"module"}