{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalEditInfo.tsx\";\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, ModalFooter, Input } from \"reactstrap\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport { useAuth } from './../contexts/AuthContext';\n\nconst ModalEditInfo = () => {\n  const {\n    showModalEditInfo,\n    setShowModalEditInfo\n  } = useModal();\n  const {\n    setChangedUserData,\n    setChangedUserPassword\n  } = useAuth();\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n\n  const toggle = () => setShowModalEditInfo(!showModalEditInfo);\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: showModalEditInfo,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Edit personal info\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Edit name:\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Nome\",\n    onChange: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Edit e-mail:\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"E-mail\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"default\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      toggle();\n      /* setChangedUserPassword({ oldpassword: oldPassword, newpassword: newPassword }); */\n\n      setChangedUserData({\n        name: nome,\n        email: email\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Confirm\"))))));\n};\n\nexport default ModalEditInfo;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalEditInfo.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","Input","useModal","useAuth","ModalEditInfo","showModalEditInfo","setShowModalEditInfo","setChangedUserData","setChangedUserPassword","nome","setNome","email","setEmail","newPassword","setNewPassword","oldPassword","setOldPassword","toggle","e","target","value","preventDefault","name"],"mappings":"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","sourcesContent":["import userEvent from \"@testing-library/user-event\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useAuth } from './../contexts/AuthContext';\r\nconst ModalEditInfo: React.FC = () => {\r\n  const {\r\n    showModalEditInfo,\r\n    setShowModalEditInfo\r\n  } = useModal();\r\n\r\n  const { setChangedUserData, setChangedUserPassword } = useAuth();\r\n  const [ nome, setNome ] = useState(\"\");\r\n  const [ email, setEmail ] = useState(\"\");\r\n  const [ newPassword, setNewPassword ] = useState(\"\");\r\n  const [ oldPassword, setOldPassword ] = useState(\"\");\r\n\r\n  const toggle = () => setShowModalEditInfo(!showModalEditInfo);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={showModalEditInfo}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>Edit personal info</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody>\r\n          <div>\r\n            <div className=\"mt-0\">Edit name:</div>\r\n            <Input placeholder=\"Nome\" onChange={(e) => setNome(e.target.value)}></Input>  \r\n            <div className=\"mt-4\">Edit e-mail:</div>\r\n            <Input placeholder=\"E-mail\" onChange={(e) => setEmail(e.target.value)}></Input>\r\n            \r\n            {/* <div className=\"mt-4\">Edit password:</div>\r\n            <Input placeholder=\"Old password\" onChange={(e) => setOldPassword(e.target.value)}></Input>\r\n            <Input className=\"mt-4\" placeholder=\"New password\" onChange={(e) => setNewPassword(e.target.value)}></Input>\r\n */}\r\n            <ModalFooter className=\"border-0\">\r\n              <Button type=\"submit\" color=\"default\" onClick={toggle}>\r\n                Close\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\" \r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                toggle();\r\n                /* setChangedUserPassword({ oldpassword: oldPassword, newpassword: newPassword }); */\r\n                setChangedUserData({name: nome, email: email})}}>\r\n                Confirm\r\n              </Button>\r\n            </ModalFooter>\r\n          </div>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditInfo;\r\n"]},"metadata":{},"sourceType":"module"}