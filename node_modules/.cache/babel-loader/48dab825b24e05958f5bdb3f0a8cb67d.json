{"ast":null,"code":"import { getAuthorization } from \"../utils/localStorageUtils\";\nexport default class UserBusiness {\n  constructor(api, settings) {\n    this.api = api;\n    this.settings = settings;\n  }\n\n  get(callback) {\n    if (this.user) {\n      callback(this.user);\n      return;\n    }\n\n    if (!this.api) return;\n    const Auth = getAuthorization();\n    this.settings.get(settings => {\n      this.user = {\n        id: settings.xmppUser,\n        jid: `${settings.xmppUser}@${settings.xmppDomain}`,\n        name: Auth.user_name,\n        email: Auth.email,\n        profilePicture: settings.imageUrl,\n        number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\")\n      };\n      callback(this.user);\n    });\n  }\n\n  changeUserData(user, callback) {\n    this.api.setDataUser({\n      name: user.name,\n      email: user.email\n    }, callback);\n  }\n\n  changePassword(user, callback) {\n    this.api.setNewPassword({\n      oldpassword: user.oldpassword,\n      newpassword: user.newpassword\n    }, callback);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/User.ts"],"names":["getAuthorization","UserBusiness","constructor","api","settings","get","callback","user","Auth","id","xmppUser","jid","xmppDomain","name","user_name","email","profilePicture","imageUrl","number","sipUser","replace","changeUserData","setDataUser","changePassword","setNewPassword","oldpassword","newpassword"],"mappings":"AAGA,SAASA,gBAAT,QAAiC,4BAAjC;AAcA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAASC,GAAT,EAA2BC,QAA3B,EAAuD;AAAA,SAA9CD,GAA8C,GAA9CA,GAA8C;AAAA,SAA5BC,QAA4B,GAA5BA,QAA4B;AAAE;;AACpEC,EAAAA,GAAG,CAACC,QAAD,EAA4B;AAC7B,QAAI,KAAKC,IAAT,EAAe;AACbD,MAAAA,QAAQ,CAAC,KAAKC,IAAN,CAAR;AACA;AACD;;AACD,QAAI,CAAC,KAAKJ,GAAV,EAAe;AACf,UAAMK,IAAI,GAAGR,gBAAgB,EAA7B;AACA,SAAKI,QAAL,CAAcC,GAAd,CAAmBD,QAAD,IAAc;AAC9B,WAAKG,IAAL,GAAY;AACVE,QAAAA,EAAE,EAAEL,QAAQ,CAACM,QADH;AAEVC,QAAAA,GAAG,EAAG,GAAEP,QAAQ,CAACM,QAAS,IAAGN,QAAQ,CAACQ,UAAW,EAFvC;AAGVC,QAAAA,IAAI,EAAEL,IAAI,CAACM,SAHD;AAIVC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAJF;AAKVC,QAAAA,cAAc,EAAEZ,QAAQ,CAACa,QALf;AAMVC,QAAAA,MAAM,EAAEd,QAAQ,CAACe,OAAT,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD;AANE,OAAZ;AAQAd,MAAAA,QAAQ,CAAC,KAAKC,IAAN,CAAR;AACD,KAVD;AAWD;;AACDc,EAAAA,cAAc,CAACd,IAAD,EAAyBD,QAAzB,EAA0D;AACtE,SAAKH,GAAL,CAASmB,WAAT,CAAqB;AACnBT,MAAAA,IAAI,EAAEN,IAAI,CAACM,IADQ;AAEnBE,MAAAA,KAAK,EAAER,IAAI,CAACQ;AAFO,KAArB,EAGGT,QAHH;AAID;;AACDiB,EAAAA,cAAc,CAAChB,IAAD,EAA4BD,QAA5B,EAAiE;AAC7E,SAAKH,GAAL,CAASqB,cAAT,CAAwB;AACpBC,MAAAA,WAAW,EAAElB,IAAI,CAACkB,WADE;AAEpBC,MAAAA,WAAW,EAAEnB,IAAI,CAACmB;AAFE,KAAxB,EAGKpB,QAHL;AAID;;AAhC+B","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IUser from \"../../alias/IUser\";\r\nimport IChangedUserData from \"../../alias/IChangedUserData\";\r\nimport { getAuthorization } from \"../utils/localStorageUtils\";\r\nimport SettingsBusiness from \"./Settings\";\r\nimport { UserDataChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport { UserPasswordChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport IUserPasswordChange from \"./../../alias/IUserPasswordChange\";\r\n\r\n\r\ninterface GetUserCallBack {\r\n  (user: IUser): void;\r\n}\r\nexport default interface UserBusiness {\r\n  user: IUser | undefined;\r\n}\r\n\r\nexport default class UserBusiness {\r\n  constructor(private api: API, private settings: SettingsBusiness) {}\r\n  get(callback: GetUserCallBack) {\r\n    if (this.user) {\r\n      callback(this.user);\r\n      return;\r\n    }\r\n    if (!this.api) return;\r\n    const Auth = getAuthorization();\r\n    this.settings.get((settings) => {\r\n      this.user = {\r\n        id: settings.xmppUser,\r\n        jid: `${settings.xmppUser}@${settings.xmppDomain}`,\r\n        name: Auth.user_name,\r\n        email: Auth.email,\r\n        profilePicture: settings.imageUrl,\r\n        number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\"),\r\n      };\r\n      callback(this.user);\r\n    });\r\n  }\r\n  changeUserData(user: IChangedUserData, callback: UserDataChangeCallback){\r\n    this.api.setDataUser({\r\n      name: user.name,\r\n      email: user.email,\r\n    }, callback);\r\n  }\r\n  changePassword(user: IUserPasswordChange, callback: UserPasswordChangeCallback){\r\n    this.api.setNewPassword({\r\n        oldpassword: user.oldpassword,\r\n        newpassword: user.newpassword\r\n      }, callback);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}