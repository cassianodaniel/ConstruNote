{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\MessageList.tsx\";\nimport React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n/*\r\nimport ImageList from \"./ImageList\";\r\nimport FileList from \"./FileList\";*/\n\nconst MessageList = () => {\n  return /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"chat-conversation p-3 p-lg-4\",\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MessageList;\n/*\r\n\r\n{chatMessages.map((chat, key) =>\r\n                  true && true === true ? (\r\n                    <li key={\"dayTitle\" + key}>\r\n                      <div className=\"chat-day-title\">\r\n                        <span className=\"title\">Today</span>\r\n                      </div>\r\n                    </li>\r\n                  ) : ( false && true) === true ? (\r\n                    <li\r\n                      key={key}\r\n                      className={chat.userType === \"sender\" ? \"right\" : \"\"}\r\n                    >\r\n                      <div className=\"conversation-list\">\r\n                        <div className=\"chat-avatar\">\r\n                          {chat.userType === \"sender\" ? (\r\n                            <img src={avatar1} alt=\"chatvia\" />\r\n                          ) : props.recentChatList[props.active_user]\r\n                              .profilePicture === \"Null\" ? (\r\n                            <div className=\"chat-user-img align-self-center mr-3\">\r\n                              <div className=\"avatar-xs\">\r\n                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                  {chat.userName && chat.userName.charAt(0)}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              src={\r\n                                props.recentChatList[props.active_user]\r\n                                  .profilePicture\r\n                              }\r\n                              alt=\"chatvia\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"user-chat-content\">\r\n                          <div className=\"ctext-wrap\">\r\n                            <div className=\"ctext-wrap-content\">\r\n                              {chat.message && (\r\n                                <p className=\"mb-0\">{chat.message}</p>\r\n                              )}\r\n                              {chat.imageMessage && (\r\n                                // image list component\r\n                                <ImageList images={chat.imageMessage} />\r\n                              )}\r\n                              {chat.fileMessage && (\r\n                                //file input component\r\n                                <FileList\r\n                                  fileName={chat.fileMessage}\r\n                                  fileSize={chat.size}\r\n                                />\r\n                              )}\r\n                              {chat.isTyping && (\r\n                                <p className=\"mb-0\">\r\n                                  typing\r\n                                  <span className=\"animate-typing\">\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                              {!chat.isTyping && (\r\n                                <p className=\"chat-time mb-0\">\r\n                                  <i className=\"ri-time-line align-middle\"></i>{\" \"}\r\n                                  <span className=\"align-middle\">\r\n                                    {chat.time}\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            {!chat.isTyping && (\r\n                              <UncontrolledDropdown className=\"align-self-start\">\r\n                                <DropdownToggle tag=\"a\">\r\n                                  <i className=\"ri-more-2-fill\"></i>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                  <DropdownItem>\r\n                                    {t(\"Copy\")}{\" \"}\r\n                                    <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem>\r\n                                    {t(\"Save\")}{\" \"}\r\n                                    <i className=\"ri-save-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem onClick={toggle}>\r\n                                    Forward{\" \"}\r\n                                    <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem\r\n                                    onClick={() => deleteMessage(chat.id)}\r\n                                  >\r\n                                    Delete{\" \"}\r\n                                    <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                </DropdownMenu>\r\n                              </UncontrolledDropdown>\r\n                            )}\r\n                          </div>\r\n                          {\r\n                            <div className=\"conversation-name\">\r\n                              {chat.userType === \"sender\"\r\n                                ? \"Patricia Smith\"\r\n                                : chat.userName}\r\n                            </div>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ) : (\r\n                    <li\r\n                      key={key}\r\n                      className={chat.userType === \"sender\" ? \"right\" : \"\"}\r\n                    >\r\n                      <div className=\"conversation-list\">\r\n                        {\r\n                          //logic for display user name and profile only once, if current and last messaged sent by same receiver\r\n                          chatMessages[key + 1] ? (\r\n                            chatMessages[key].userType ===\r\n                            chatMessages[key + 1].userType ? (\r\n                              <div className=\"chat-avatar\">\r\n                                <div className=\"blank-div\"></div>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"chat-avatar\">\r\n                                {chat.userType === \"sender\" ? (\r\n                                  <img src={avatar1} alt=\"chatvia\" />\r\n                                ) : props.recentChatList[props.active_user]\r\n                                    .profilePicture === \"Null\" ? (\r\n                                  <div className=\"chat-user-img align-self-center mr-3\">\r\n                                    <div className=\"avatar-xs\">\r\n                                      <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                        {props.recentChatList[\r\n                                          props.active_user\r\n                                        ].name.charAt(0)}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                ) : (\r\n                                  <img\r\n                                    src={\r\n                                      props.recentChatList[props.active_user]\r\n                                        .profilePicture\r\n                                    }\r\n                                    alt=\"chatvia\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"chat-avatar\">\r\n                              {chat.userType === \"sender\" ? (\r\n                                <img src={avatar1} alt=\"chatvia\" />\r\n                              ) : props.recentChatList[props.active_user]\r\n                                  .profilePicture === \"Null\" ? (\r\n                                <div className=\"chat-user-img align-self-center mr-3\">\r\n                                  <div className=\"avatar-xs\">\r\n                                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                      {props.recentChatList[\r\n                                        props.active_user\r\n                                      ].name.charAt(0)}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                <img\r\n                                  src={\r\n                                    props.recentChatList[props.active_user]\r\n                                      .profilePicture\r\n                                  }\r\n                                  alt=\"chatvia\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          )\r\n                        }\r\n\r\n                        <div className=\"user-chat-content\">\r\n                          <div className=\"ctext-wrap\">\r\n                            <div className=\"ctext-wrap-content\">\r\n                              {chat.message && (\r\n                                <p className=\"mb-0\">{chat.message}</p>\r\n                              )}\r\n                              {chat.imageMessage && (\r\n                                // image list component\r\n                                <ImageList images={chat.imageMessage} />\r\n                              )}\r\n                              {chat.fileMessage && (\r\n                                //file input component\r\n                                <FileList\r\n                                  fileName={chat.fileMessage}\r\n                                  fileSize={chat.size}\r\n                                />\r\n                              )}\r\n                              {chat.isTyping && (\r\n                                <p className=\"mb-0\">\r\n                                  typing\r\n                                  <span className=\"animate-typing\">\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                              {!chat.isTyping && (\r\n                                <p className=\"chat-time mb-0\">\r\n                                  <i className=\"ri-time-line align-middle\"></i>{\" \"}\r\n                                  <span className=\"align-middle\">\r\n                                    {chat.time}\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            {!chat.isTyping && (\r\n                              <UncontrolledDropdown className=\"align-self-start\">\r\n                                <DropdownToggle tag=\"a\">\r\n                                  <i className=\"ri-more-2-fill\"></i>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                  <DropdownItem>\r\n                                    {t(\"Copy\")}{\" \"}\r\n                                    <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem>\r\n                                    {t(\"Save\")}{\" \"}\r\n                                    <i className=\"ri-save-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem onClick={toggle}>\r\n                                    Forward{\" \"}\r\n                                    <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem\r\n                                    onClick={() => deleteMessage(chat.id)}\r\n                                  >\r\n                                    Delete{\" \"}\r\n                                    <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                </DropdownMenu>\r\n                              </UncontrolledDropdown>\r\n                            )}\r\n                          </div>\r\n                          {chatMessages[key + 1] ? (\r\n                            chatMessages[key].userType ===\r\n                            chatMessages[key + 1].userType ? null : (\r\n                              <div className=\"conversation-name\">\r\n                                {chat.userType === \"sender\"\r\n                                  ? \"Patricia Smith\"\r\n                                  : props.recentChatList[props.active_user]\r\n                                      .name}\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"conversation-name\">\r\n                              {chat.userType === \"sender\"\r\n                                ? \"Admin\"\r\n                                : props.recentChatList[props.active_user].name}\r\n                            </div>\r\n                          )}\r\n                          {/* {\r\n                                                            <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Admin\" : props.recentChatList[props.active_user].name}</div>\r\n                                                        } \r\n                                                        </div>\r\n                                                        </div>\r\n                                                      </li>\r\n                                                    )\r\n                                                  )}*/","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MessageList.tsx"],"names":["React","SimpleBar","MessageList","maxHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA;;;;AAIA,MAAMC,WAAqB,GAAG,MAAM;AAClC,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAGE,IAAA,EAAE,EAAC,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAVD;;AAYA,eAAeD,WAAf;AAEA","sourcesContent":["import React from \"react\";\r\n\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n/*\r\nimport ImageList from \"./ImageList\";\r\nimport FileList from \"./FileList\";*/\r\n\r\nconst MessageList: React.FC = () => {\r\n  return (\r\n    <SimpleBar\r\n      style={{ maxHeight: \"100%\" }}\r\n      className=\"chat-conversation p-3 p-lg-4\"\r\n      id=\"messages\"\r\n    >\r\n      <ul className=\"list-unstyled mb-0\"></ul>\r\n    </SimpleBar>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n\r\n/*\r\n\r\n{chatMessages.map((chat, key) =>\r\n                  true && true === true ? (\r\n                    <li key={\"dayTitle\" + key}>\r\n                      <div className=\"chat-day-title\">\r\n                        <span className=\"title\">Today</span>\r\n                      </div>\r\n                    </li>\r\n                  ) : ( false && true) === true ? (\r\n                    <li\r\n                      key={key}\r\n                      className={chat.userType === \"sender\" ? \"right\" : \"\"}\r\n                    >\r\n                      <div className=\"conversation-list\">\r\n                        <div className=\"chat-avatar\">\r\n                          {chat.userType === \"sender\" ? (\r\n                            <img src={avatar1} alt=\"chatvia\" />\r\n                          ) : props.recentChatList[props.active_user]\r\n                              .profilePicture === \"Null\" ? (\r\n                            <div className=\"chat-user-img align-self-center mr-3\">\r\n                              <div className=\"avatar-xs\">\r\n                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                  {chat.userName && chat.userName.charAt(0)}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              src={\r\n                                props.recentChatList[props.active_user]\r\n                                  .profilePicture\r\n                              }\r\n                              alt=\"chatvia\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"user-chat-content\">\r\n                          <div className=\"ctext-wrap\">\r\n                            <div className=\"ctext-wrap-content\">\r\n                              {chat.message && (\r\n                                <p className=\"mb-0\">{chat.message}</p>\r\n                              )}\r\n                              {chat.imageMessage && (\r\n                                // image list component\r\n                                <ImageList images={chat.imageMessage} />\r\n                              )}\r\n                              {chat.fileMessage && (\r\n                                //file input component\r\n                                <FileList\r\n                                  fileName={chat.fileMessage}\r\n                                  fileSize={chat.size}\r\n                                />\r\n                              )}\r\n                              {chat.isTyping && (\r\n                                <p className=\"mb-0\">\r\n                                  typing\r\n                                  <span className=\"animate-typing\">\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                              {!chat.isTyping && (\r\n                                <p className=\"chat-time mb-0\">\r\n                                  <i className=\"ri-time-line align-middle\"></i>{\" \"}\r\n                                  <span className=\"align-middle\">\r\n                                    {chat.time}\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            {!chat.isTyping && (\r\n                              <UncontrolledDropdown className=\"align-self-start\">\r\n                                <DropdownToggle tag=\"a\">\r\n                                  <i className=\"ri-more-2-fill\"></i>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                  <DropdownItem>\r\n                                    {t(\"Copy\")}{\" \"}\r\n                                    <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem>\r\n                                    {t(\"Save\")}{\" \"}\r\n                                    <i className=\"ri-save-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem onClick={toggle}>\r\n                                    Forward{\" \"}\r\n                                    <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem\r\n                                    onClick={() => deleteMessage(chat.id)}\r\n                                  >\r\n                                    Delete{\" \"}\r\n                                    <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                </DropdownMenu>\r\n                              </UncontrolledDropdown>\r\n                            )}\r\n                          </div>\r\n                          {\r\n                            <div className=\"conversation-name\">\r\n                              {chat.userType === \"sender\"\r\n                                ? \"Patricia Smith\"\r\n                                : chat.userName}\r\n                            </div>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ) : (\r\n                    <li\r\n                      key={key}\r\n                      className={chat.userType === \"sender\" ? \"right\" : \"\"}\r\n                    >\r\n                      <div className=\"conversation-list\">\r\n                        {\r\n                          //logic for display user name and profile only once, if current and last messaged sent by same receiver\r\n                          chatMessages[key + 1] ? (\r\n                            chatMessages[key].userType ===\r\n                            chatMessages[key + 1].userType ? (\r\n                              <div className=\"chat-avatar\">\r\n                                <div className=\"blank-div\"></div>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"chat-avatar\">\r\n                                {chat.userType === \"sender\" ? (\r\n                                  <img src={avatar1} alt=\"chatvia\" />\r\n                                ) : props.recentChatList[props.active_user]\r\n                                    .profilePicture === \"Null\" ? (\r\n                                  <div className=\"chat-user-img align-self-center mr-3\">\r\n                                    <div className=\"avatar-xs\">\r\n                                      <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                        {props.recentChatList[\r\n                                          props.active_user\r\n                                        ].name.charAt(0)}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                ) : (\r\n                                  <img\r\n                                    src={\r\n                                      props.recentChatList[props.active_user]\r\n                                        .profilePicture\r\n                                    }\r\n                                    alt=\"chatvia\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"chat-avatar\">\r\n                              {chat.userType === \"sender\" ? (\r\n                                <img src={avatar1} alt=\"chatvia\" />\r\n                              ) : props.recentChatList[props.active_user]\r\n                                  .profilePicture === \"Null\" ? (\r\n                                <div className=\"chat-user-img align-self-center mr-3\">\r\n                                  <div className=\"avatar-xs\">\r\n                                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                      {props.recentChatList[\r\n                                        props.active_user\r\n                                      ].name.charAt(0)}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                <img\r\n                                  src={\r\n                                    props.recentChatList[props.active_user]\r\n                                      .profilePicture\r\n                                  }\r\n                                  alt=\"chatvia\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          )\r\n                        }\r\n\r\n                        <div className=\"user-chat-content\">\r\n                          <div className=\"ctext-wrap\">\r\n                            <div className=\"ctext-wrap-content\">\r\n                              {chat.message && (\r\n                                <p className=\"mb-0\">{chat.message}</p>\r\n                              )}\r\n                              {chat.imageMessage && (\r\n                                // image list component\r\n                                <ImageList images={chat.imageMessage} />\r\n                              )}\r\n                              {chat.fileMessage && (\r\n                                //file input component\r\n                                <FileList\r\n                                  fileName={chat.fileMessage}\r\n                                  fileSize={chat.size}\r\n                                />\r\n                              )}\r\n                              {chat.isTyping && (\r\n                                <p className=\"mb-0\">\r\n                                  typing\r\n                                  <span className=\"animate-typing\">\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                    <span className=\"dot ml-1\"></span>\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                              {!chat.isTyping && (\r\n                                <p className=\"chat-time mb-0\">\r\n                                  <i className=\"ri-time-line align-middle\"></i>{\" \"}\r\n                                  <span className=\"align-middle\">\r\n                                    {chat.time}\r\n                                  </span>\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            {!chat.isTyping && (\r\n                              <UncontrolledDropdown className=\"align-self-start\">\r\n                                <DropdownToggle tag=\"a\">\r\n                                  <i className=\"ri-more-2-fill\"></i>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                  <DropdownItem>\r\n                                    {t(\"Copy\")}{\" \"}\r\n                                    <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem>\r\n                                    {t(\"Save\")}{\" \"}\r\n                                    <i className=\"ri-save-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem onClick={toggle}>\r\n                                    Forward{\" \"}\r\n                                    <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                  <DropdownItem\r\n                                    onClick={() => deleteMessage(chat.id)}\r\n                                  >\r\n                                    Delete{\" \"}\r\n                                    <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n                                  </DropdownItem>\r\n                                </DropdownMenu>\r\n                              </UncontrolledDropdown>\r\n                            )}\r\n                          </div>\r\n                          {chatMessages[key + 1] ? (\r\n                            chatMessages[key].userType ===\r\n                            chatMessages[key + 1].userType ? null : (\r\n                              <div className=\"conversation-name\">\r\n                                {chat.userType === \"sender\"\r\n                                  ? \"Patricia Smith\"\r\n                                  : props.recentChatList[props.active_user]\r\n                                      .name}\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"conversation-name\">\r\n                              {chat.userType === \"sender\"\r\n                                ? \"Admin\"\r\n                                : props.recentChatList[props.active_user].name}\r\n                            </div>\r\n                          )}\r\n                          {/* {\r\n                                                            <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Admin\" : props.recentChatList[props.active_user].name}</div>\r\n                                                        } \r\n                                                        </div>\r\n                                                        </div>\r\n                                                      </li>\r\n                                                    )\r\n                                                  )}*/\r\n"]},"metadata":{},"sourceType":"module"}