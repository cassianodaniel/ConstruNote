{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalSelectUsers.tsx\";\nimport React from \"react\";\nimport { Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContactCell from \"./ContactCell\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst alertf = () => {\n  alert();\n};\n\nexport const ModalSelectUsers = () => {\n  const loading = /*#__PURE__*/React.createElement(\"div\", {\n    key: 0,\n    className: \"ct-chat-user-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    indicator: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }\n    }, \"Loading...\")),\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }));\n  const contacts = [],\n        onContactSelect = [],\n        selectedContacts = [];\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    className: \"ct-chat-user\",\n    pageStart: 0,\n    useWindow: false,\n    loader: loading,\n    initialLoad: true,\n    loadMore: alertf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, contacts.map((contact, index) => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: index,\n    timeout: 1000,\n    classNames: \"fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContactCell, {\n    contact: contact,\n    onContactSelect: onContactSelect,\n    selectedContacts: selectedContacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })))));\n  /*     return <Card>\r\n          <CardBody>\r\n            <CardText>\r\n                <div className=\"overflow-auto\">\r\n                    <ContactsToSelect/>\r\n                  </div>\r\n              </CardText>\r\n          </CardBody>\r\n          </Card> */\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalSelectUsers.tsx"],"names":["React","Spin","InfiniteScroll","ContactCell","CSSTransition","TransitionGroup","alertf","alert","ModalSelectUsers","loading","contacts","onContactSelect","selectedContacts","map","contact","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAAgD,wBAAhD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnBC,EAAAA,KAAK;AACN,CAFD;;AAIA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAElC,QAAMC,OAAO,gBACT;AAAK,IAAA,GAAG,EAAE,CAAV;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,eAAE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CAAjB;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AAUE,QAAMC,QAAY,GAAG,EAArB;AAAA,QAAyBC,eAAmB,GAAG,EAA/C;AAAA,QAAmDC,gBAAoB,GAAG,EAA1E;AAEA,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,SAAS,EAAE,CAFb;AAGE,IAAA,SAAS,EAAE,KAHb;AAIE,IAAA,MAAM,EAAEH,OAJV;AAKE,IAAA,WAAW,EAAE,IALf;AAME,IAAA,QAAQ,EAAEH,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAcC,KAAd,kBACZ,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAA+B,IAAA,eAAe,EAAEH,eAAhD;AAAiE,IAAA,gBAAgB,EAAEC,gBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CADH,CARF,CADF;AAuBN;;;;;;;;;AAWC,CAhDM","sourcesContent":["import React from \"react\";\r\nimport { Spin } from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ContactCell from \"./ContactCell\";\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\n\r\nimport { ContactsToSelect } from './ContactsToSelect';\r\n\r\nconst alertf = () => {\r\n  alert();\r\n}\r\n\r\nexport const ModalSelectUsers = () => {\r\n    \r\n    const loading = (\r\n        <div key={0} className=\"ct-chat-user-item\">\r\n          <Spin indicator={<div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                          }\r\n            size=\"large\" />\r\n                            \r\n        </div>\r\n      );\r\n      const contacts:any = [], onContactSelect:any = [], selectedContacts:any = [];\r\n                        \r\n      return (\r\n        <InfiniteScroll\r\n          className=\"ct-chat-user\"\r\n          pageStart={0}\r\n          useWindow={false}\r\n          loader={loading}\r\n          initialLoad={true}\r\n          loadMore={alertf}\r\n        >\r\n          <TransitionGroup className=\"todo-list\">\r\n            {contacts.map((contact:any, index:any) =>\r\n              <CSSTransition\r\n                key={index}\r\n                timeout={1000}\r\n                classNames=\"fade\">\r\n                <ContactCell contact={contact} onContactSelect={onContactSelect} selectedContacts={selectedContacts} />\r\n              </CSSTransition>)}\r\n          </TransitionGroup>\r\n  \r\n        </InfiniteScroll>\r\n      )\r\n\r\n\r\n/*     return <Card>\r\n        <CardBody>\r\n          <CardText>\r\n              <div className=\"overflow-auto\">\r\n                  <ContactsToSelect/>\r\n                </div>\r\n            </CardText>\r\n        </CardBody>\r\n        </Card> */\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}