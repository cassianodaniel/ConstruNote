{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\contexts\\\\CallContext.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nexport const CallContext = createContext({});\nexport const CallProvider = ({\n  children\n}) => {\n  const [show, setShow] = useState(false);\n  const [currentCall, setCurrentCall] = useState();\n  const [callNumber, setCallNumber] = useState();\n  const [endCall, setEndCall] = useState();\n  return /*#__PURE__*/React.createElement(CallContext.Provider, {\n    value: {\n      show,\n      setShow,\n      currentCall,\n      setCurrentCall,\n      callNumber,\n      setCallNumber,\n      endCall,\n      setEndCall\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport function useCall() {\n  return useContext(CallContext);\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/CallContext.tsx"],"names":["React","createContext","useContext","useState","CallContext","CallProvider","children","show","setShow","currentCall","setCurrentCall","callNumber","setCallNumber","endCall","setEndCall","useCall"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAoBA,OAAO,MAAMC,WAAW,GAAGH,aAAa,CACtC,EADsC,CAAjC;AAIP,OAAO,MAAMI,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,WAHK;AAILC,MAAAA,cAJK;AAKLC,MAAAA,UALK;AAMLC,MAAAA,aANK;AAOLC,MAAAA,OAPK;AAQLC,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGR,QAZH,CADF;AAgBD,CArBM;AAuBP,OAAO,SAASS,OAAT,GAAmB;AACxB,SAAOb,UAAU,CAACE,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport ICall from \"../alias/ICall\";\r\n\r\n//alias\r\ninterface MakeCall {\r\n  number: string;\r\n  useVideo: boolean;\r\n  useAudio: boolean;\r\n}\r\ninterface ICallContextData {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n  currentCall: ICall | undefined;\r\n  setCurrentCall(value: ICall | undefined): void;\r\n  callNumber: MakeCall | undefined;\r\n  setCallNumber(value: MakeCall | undefined): void;\r\n  endCall: string | undefined;\r\n  setEndCall(value: string | undefined): void;\r\n}\r\n\r\nexport const CallContext = createContext<ICallContextData>(\r\n  {} as ICallContextData\r\n);\r\n\r\nexport const CallProvider: React.FC = ({ children }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentCall, setCurrentCall] = useState<ICall | undefined>();\r\n  const [callNumber, setCallNumber] = useState<MakeCall | undefined>();\r\n  const [endCall, setEndCall] = useState<string | undefined>();\r\n  return (\r\n    <CallContext.Provider\r\n      value={{\r\n        show,\r\n        setShow,\r\n        currentCall,\r\n        setCurrentCall,\r\n        callNumber,\r\n        setCallNumber,\r\n        endCall,\r\n        setEndCall,\r\n      }}\r\n    >\r\n      {children}\r\n    </CallContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useCall() {\r\n  return useContext(CallContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}