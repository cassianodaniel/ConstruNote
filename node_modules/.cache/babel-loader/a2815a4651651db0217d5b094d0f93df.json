{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Modal,ModalHeader,ModalBody,CardBody,Button,Input,ModalFooter}from\"reactstrap\";import{useModal}from\"./../contexts/ModalContext\";import{useTranslation}from\"react-i18next\";import SimpleBar from\"simplebar-react\";import{useChat}from\"../contexts/ChatContext\";import SelectContactAndGroup from\"./SelectContactAndGroup\";var ModalForwardMessageTo=function ModalForwardMessageTo(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedContactAndGroup=_useState4[0],setSelectedContactAndGroup=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(),showModalForwardMessageTo=_useModal.showModalForwardMessageTo,setShowModalForwardMessageTo=_useModal.setShowModalForwardMessageTo;var _useChat=useChat(),setForwardMessageList=_useChat.setForwardMessageList;var toggle=function toggle(){if(showModalForwardMessageTo){setShowModalForwardMessageTo(undefined);}};var handleCheckContactAndGroup=function handleCheckContactAndGroup(selected,contactAndGroup){if(selected){var _selected=selectedContactAndGroup;_selected.push(contactAndGroup);setSelectedContactAndGroup(_selected);}else{setSelectedContactAndGroup(selectedContactAndGroup.filter(function(sel){if(sel.jid===contactAndGroup.jid){return false;}return true;}));}};var sendMessages=function sendMessages(){setForwardMessageList(_toConsumableArray(selectedContactAndGroup));};return/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",isOpen:!!showModalForwardMessageTo,centered:true,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},t(\"Forward\")),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(CardBody,{className:\"p-2 border\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pt-2 pb-3 border-bottom\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control mb-3\",id:\"addgroupname-input\",value:search,onChange:function onChange(e){return setSearch(e.target.value);},placeholder:t(\"Search users..\")}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(SimpleBar,{style:{height:\"500px\"}},/*#__PURE__*/React.createElement(SelectContactAndGroup,{handleCheckContactAndGroup:handleCheckContactAndGroup,search:search}))),/*#__PURE__*/React.createElement(ModalFooter,{className:\"border-0\"},/*#__PURE__*/React.createElement(Button,{color:\"default\",onClick:toggle},t(\"Close\")),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:sendMessages},t(\"Forward\"))))));};export default ModalForwardMessageTo;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalForwardMessageTo.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","CardBody","Button","Input","ModalFooter","useModal","useTranslation","SimpleBar","useChat","SelectContactAndGroup","ModalForwardMessageTo","search","setSearch","selectedContactAndGroup","setSelectedContactAndGroup","t","showModalForwardMessageTo","setShowModalForwardMessageTo","setForwardMessageList","toggle","undefined","handleCheckContactAndGroup","selected","contactAndGroup","push","filter","sel","jid","sendMessages","e","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  Input,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport SelectContactAndGroup from \"./SelectContactAndGroup\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\n\r\nconst ModalForwardMessageTo: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedContactAndGroup, setSelectedContactAndGroup] = useState<\r\n    (IContact | IGroup)[]\r\n  >([]);\r\n  const { t } = useTranslation();\r\n  const {\r\n    showModalForwardMessageTo,\r\n    setShowModalForwardMessageTo,\r\n  } = useModal();\r\n  const {  setForwardMessageList  } = useChat();\r\n  const toggle = () => {\r\n    if (showModalForwardMessageTo) {\r\n      setShowModalForwardMessageTo(undefined);\r\n    }\r\n  };\r\n\r\n  const handleCheckContactAndGroup = (\r\n    selected: boolean,\r\n    contactAndGroup: (IContact | IGroup)\r\n  ) => {\r\n    if (selected) {\r\n      let selected = selectedContactAndGroup;\r\n      selected.push(contactAndGroup);\r\n      setSelectedContactAndGroup(selected);\r\n    } else {\r\n      setSelectedContactAndGroup(\r\n        selectedContactAndGroup.filter((sel) => {\r\n          if (sel.jid === contactAndGroup.jid) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const sendMessages = () => {\r\n    setForwardMessageList([...selectedContactAndGroup]);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalForwardMessageTo}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Forward\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectContactAndGroup\r\n                handleCheckContactAndGroup={handleCheckContactAndGroup}\r\n                search={search}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button color=\"default\" onClick={toggle}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button color=\"primary\" onClick={sendMessages}>\r\n              {t(\"Forward\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForwardMessageTo;\r\n"]},"metadata":{},"sourceType":"module"}