{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChangeGroupNameButton.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport { useTranslation } from 'react-i18next';\nimport ModalGenerics from './ModalGenerics';\nimport { toast } from 'react-toastify';\n\nconst ChangeGroupNameButton = ({\n  newGroupName,\n  setGroupName,\n  actualMembers\n}) => {\n  const {\n    activeChat\n  } = useChat();\n  const {\n    setChangeGroupData\n  } = useGroup();\n  const {\n    t\n  } = useTranslation();\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShow,\n    show: show,\n    title: \"Do you want to change the group name?\",\n    description: newGroupName,\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        setChangeGroupData({\n          groupId: activeChat.groupId,\n          groupName: newGroupName,\n          members: actualMembers,\n          description: \"Descrição do grupo!\"\n        });\n        setGroupName(\"\");\n        setShow(!show);\n        toast.success(t('Deleted!'), {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"Confirmar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => setGroupName(\"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Cancelar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default ChangeGroupNameButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChangeGroupNameButton.tsx"],"names":["React","useState","Button","useChat","useGroup","useTranslation","ModalGenerics","toast","ChangeGroupNameButton","newGroupName","setGroupName","actualMembers","activeChat","setChangeGroupData","t","show","setShow","groupId","groupName","members","description","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AASA,MAAMC,qBAAwC,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAmD;AACpG,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,OAAO,EAA9B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAyBT,QAAQ,EAAvC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAU,KAAV,CAAhC;AAEI,sBAAS,uDACT,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,MADN;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,OAAO,EAAE,MACPe,OAAO,CAAC,IAAD,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADS,eAWX,oBAAC,aAAD;AACA,IAAA,OAAO,EAAEA,OADT;AAEA,IAAA,IAAI,EAAED,IAFN;AAGA,IAAA,KAAK,EAAE,uCAHP;AAIA,IAAA,WAAW,EAAEN,YAJb;AAKA,IAAA,QAAQ,eACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAsC,MAAA,OAAO,EAAE,MAC7C;AACEI,QAAAA,kBAAkB,CAAC;AACjBI,UAAAA,OAAO,EAAEL,UAAU,CAACK,OADH;AAEjBC,UAAAA,SAAS,EAAET,YAFM;AAGjBU,UAAAA,OAAO,EAAER,aAHQ;AAIjBS,UAAAA,WAAW,EAAE;AAJI,SAAD,CAAlB;AAMAV,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAM,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAR,QAAAA,KAAK,CAACc,OAAN,CAAcP,CAAC,CAAC,UAAD,CAAf,EAA6B;AAC3BQ,UAAAA,QAAQ,EAAE,YADiB;AAE3BC,UAAAA,SAAS,EAAE,IAFgB;AAG3BC,UAAAA,eAAe,EAAE,KAHU;AAI3BC,UAAAA,YAAY,EAAE,IAJa;AAK3BC,UAAAA,YAAY,EAAE,IALa;AAM3BC,UAAAA,SAAS,EAAE,IANgB;AAO3BC,UAAAA,QAAQ,EAAEC;AAPiB,SAA7B;AASD,OAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAsBE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAAMnB,YAAY,CAAC,EAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,CANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXW,CAAT;AA6CH,CAnDD;;AAqDA,eAAeF,qBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ModalGenerics from './ModalGenerics'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\ninterface IProps{\r\n    newGroupName: string;\r\n    setGroupName(value: string): void;\r\n    actualMembers: string[] | undefined;\r\n}\r\n\r\nconst ChangeGroupNameButton : React.FC<IProps> = ({ newGroupName, setGroupName, actualMembers }) => {\r\nconst { activeChat } = useChat();\r\nconst { setChangeGroupData } = useGroup();\r\nconst { t } = useTranslation();\r\nconst [show, setShow] = useState<boolean>(false);\r\n\r\n    return ( <>\r\n    <Button\r\n    color=\"none\"\r\n    type=\"button\"\r\n    onClick={() =>\r\n      setShow(true)\r\n    }\r\n    >\r\n      <i className=\"ri-edit-line\"></i>\r\n    </Button>\r\n\r\n  <ModalGenerics\r\n  setShow={setShow}\r\n  show={show}\r\n  title={\"Do you want to change the group name?\"}\r\n  description={newGroupName}\r\n  children={\r\n    <div>\r\n      <Button type=\"button\" color=\"primary\" onClick={() => \r\n        {\r\n          setChangeGroupData({\r\n            groupId: activeChat.groupId,\r\n            groupName: newGroupName,\r\n            members: actualMembers,\r\n            description: \"Descrição do grupo!\",\r\n          });\r\n          setGroupName(\"\");\r\n          setShow(!show);\r\n          toast.success(t('Deleted!'), {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });         \r\n        }\r\n      }>Confirmar</Button>\r\n      <Button type=\"button\" color=\"link\" onClick={() => setGroupName(\"\")}>Cancelar</Button>\r\n    </div>\r\n  }/>\r\n\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChangeGroupNameButton; "]},"metadata":{},"sourceType":"module"}