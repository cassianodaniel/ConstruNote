{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar _require = require('@xmpp/xml'),\n    Parser = _require.Parser,\n    Element = _require.Element,\n    XMLError = _require.XMLError;\n\nmodule.exports = /*#__PURE__*/function (_Parser) {\n  _inherits(FramedParser, _Parser);\n\n  var _super = _createSuper(FramedParser);\n\n  function FramedParser() {\n    _classCallCheck(this, FramedParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FramedParser, [{\n    key: \"onStartElement\",\n    value: function onStartElement(name, attrs) {\n      var element = new Element(name, attrs);\n      var cursor = this.cursor;\n\n      if (cursor) {\n        cursor.append(element);\n      }\n\n      this.cursor = element;\n    }\n  }, {\n    key: \"onEndElement\",\n    value: function onEndElement(name) {\n      var cursor = this.cursor;\n\n      if (name !== cursor.name) {\n        // <foo></bar>\n        this.emit('error', new XMLError(\"\".concat(cursor.name, \" must be closed.\")));\n        return;\n      }\n\n      if (cursor.parent) {\n        this.cursor = cursor.parent;\n        return;\n      }\n\n      if (cursor.is('open', 'urn:ietf:params:xml:ns:xmpp-framing')) {\n        this.emit('start', cursor);\n      } else if (cursor.is('close', 'urn:ietf:params:xml:ns:xmpp-framing')) {\n        this.emit('end', cursor);\n      } else {\n        this.emit('element', cursor);\n      }\n\n      this.cursor = null;\n    }\n  }]);\n\n  return FramedParser;\n}(Parser);","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/websocket/lib/FramedParser.js"],"names":["require","Parser","Element","XMLError","module","exports","name","attrs","element","cursor","append","emit","parent","is"],"mappings":"AAAA;;;;;;;;;;eAEoCA,OAAO,CAAC,WAAD,C;IAApCC,M,YAAAA,M;IAAQC,O,YAAAA,O;IAASC,Q,YAAAA,Q;;AAExBC,MAAM,CAACC,OAAP;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,mCACiBC,IADjB,EACuBC,KADvB,EAC8B;AAC1B,UAAMC,OAAO,GAAG,IAAIN,OAAJ,CAAYI,IAAZ,EAAkBC,KAAlB,CAAhB;AAD0B,UAGnBE,MAHmB,GAGT,IAHS,CAGnBA,MAHmB;;AAK1B,UAAIA,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACC,MAAP,CAAcF,OAAd;AACD;;AAED,WAAKC,MAAL,GAAcD,OAAd;AACD;AAXH;AAAA;AAAA,iCAaeF,IAbf,EAaqB;AAAA,UACVG,MADU,GACA,IADA,CACVA,MADU;;AAEjB,UAAIH,IAAI,KAAKG,MAAM,CAACH,IAApB,EAA0B;AACxB;AACA,aAAKK,IAAL,CAAU,OAAV,EAAmB,IAAIR,QAAJ,WAAgBM,MAAM,CAACH,IAAvB,sBAAnB;AACA;AACD;;AAED,UAAIG,MAAM,CAACG,MAAX,EAAmB;AACjB,aAAKH,MAAL,GAAcA,MAAM,CAACG,MAArB;AACA;AACD;;AAED,UAAIH,MAAM,CAACI,EAAP,CAAU,MAAV,EAAkB,qCAAlB,CAAJ,EAA8D;AAC5D,aAAKF,IAAL,CAAU,OAAV,EAAmBF,MAAnB;AACD,OAFD,MAEO,IAAIA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAmB,qCAAnB,CAAJ,EAA+D;AACpE,aAAKF,IAAL,CAAU,KAAV,EAAiBF,MAAjB;AACD,OAFM,MAEA;AACL,aAAKE,IAAL,CAAU,SAAV,EAAqBF,MAArB;AACD;;AAED,WAAKA,MAAL,GAAc,IAAd;AACD;AAnCH;;AAAA;AAAA,EAA4CR,MAA5C","sourcesContent":["'use strict'\n\nconst {Parser, Element, XMLError} = require('@xmpp/xml')\n\nmodule.exports = class FramedParser extends Parser {\n  onStartElement(name, attrs) {\n    const element = new Element(name, attrs)\n\n    const {cursor} = this\n\n    if (cursor) {\n      cursor.append(element)\n    }\n\n    this.cursor = element\n  }\n\n  onEndElement(name) {\n    const {cursor} = this\n    if (name !== cursor.name) {\n      // <foo></bar>\n      this.emit('error', new XMLError(`${cursor.name} must be closed.`))\n      return\n    }\n\n    if (cursor.parent) {\n      this.cursor = cursor.parent\n      return\n    }\n\n    if (cursor.is('open', 'urn:ietf:params:xml:ns:xmpp-framing')) {\n      this.emit('start', cursor)\n    } else if (cursor.is('close', 'urn:ietf:params:xml:ns:xmpp-framing')) {\n      this.emit('end', cursor)\n    } else {\n      this.emit('element', cursor)\n    }\n\n    this.cursor = null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}