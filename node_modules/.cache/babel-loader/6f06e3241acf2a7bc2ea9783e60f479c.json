{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["export interface SubscriptionCallBack {\r\n  (event: string, data: any): void;\r\n}\r\nexport declare enum ChatType {\r\n  CHAT = \"chat\",\r\n  GROUPCHAT = \"groupchat\"\r\n}\r\nexport interface ConnectionOptions {\r\n  service: string;\r\n  domain?: string;\r\n  resource: string;\r\n  username: string;\r\n  password?: string;\r\n}\r\nexport interface Presence {\r\n  id: string;\r\n  from: string;\r\n  time: string;\r\n  status: string;\r\n}\r\nexport interface Message {\r\n  id: string;\r\n  to: string;\r\n  from: string;\r\n  sent_at: string;\r\n  type: string;\r\n  message: string;\r\n  reply_to: string | undefined;\r\n  reply_msg: string | undefined;\r\n  reply_msg_id: string | undefined;\r\n}\r\nexport interface FileMessage extends Message {\r\n  fileUrl: string;\r\n}\r\nexport interface SendingFile {\r\n  firstStepId?: string;\r\n  secondStepId?: string;\r\n  thirdStepId?: string;\r\n  file: File;\r\n  to: string;\r\n  callback: SendImageCallback;\r\n  chatType: ChatType;\r\n}\r\nexport interface SendImageCallback {\r\n  (imageUrl: string, error?: boolean): void;\r\n}\r\nexport interface OnlineCallback {\r\n  (): void;\r\n}\r\nexport interface OfflineCallback {\r\n  (): void;\r\n}\r\nexport interface MessageCallback {\r\n  (msg: Message | FileMessage): void;\r\n}\r\nexport interface StanzaCallback {\r\n  (stanza: any): void;\r\n}\r\nexport interface PresenceCallback {\r\n  (presence: Presence): void;\r\n}\r\nexport interface ErrorCallback {\r\n  (error: any): void;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}