{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";var UserBusiness=/*#__PURE__*/function(){function UserBusiness(api,settings){_classCallCheck(this,UserBusiness);this.api=api;this.settings=settings;}_createClass(UserBusiness,[{key:\"get\",value:function get(callback){var _this=this;if(this.user){callback(this.user);return;}if(!this.api)return;this.api.getUserInfo(function(user){_this.settings.get(function(settings){_this.user={id:settings.xmppUser,jid:\"\".concat(settings.xmppUser,\"@\").concat(settings.xmppDomain),name:(user===null||user===void 0?void 0:user.name)||\"\",email:(user===null||user===void 0?void 0:user.email)||\"\",profilePicture:settings.imageUrl,number:settings.sipUser.replace(\"w-\",\"\").replace(\"s-\",\"\"),status:\"online\"};callback(_this.user);});});}},{key:\"changeUserData\",value:function changeUserData(user,callback){this.api.setDataUser({name:user.name,email:user.email},callback);}},{key:\"changePassword\",value:function changePassword(user,callback){this.api.setNewPassword({oldPassword:user.oldPassword,newPassword:user.newPassword},callback);}}]);return UserBusiness;}();export{UserBusiness as default};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/User.ts"],"names":["UserBusiness","api","settings","callback","user","getUserInfo","get","id","xmppUser","jid","xmppDomain","name","email","profilePicture","imageUrl","number","sipUser","replace","status","setDataUser","setNewPassword","oldPassword","newPassword"],"mappings":"iWAeqBA,CAAAA,Y,yBACnB,sBAAoBC,GAApB,CAAsCC,QAAtC,CAAkE,yCAA9CD,GAA8C,CAA9CA,GAA8C,MAA5BC,QAA4B,CAA5BA,QAA4B,CAAE,C,yDAChEC,Q,CAA2B,gBAC7B,GAAI,KAAKC,IAAT,CAAe,CACbD,QAAQ,CAAC,KAAKC,IAAN,CAAR,CACA,OACD,CACD,GAAI,CAAC,KAAKH,GAAV,CAAe,OACf,KAAKA,GAAL,CAASI,WAAT,CAAqB,SAACD,IAAD,CAAU,CAC7B,KAAI,CAACF,QAAL,CAAcI,GAAd,CAAkB,SAACJ,QAAD,CAAc,CAC9B,KAAI,CAACE,IAAL,CAAY,CACVG,EAAE,CAAEL,QAAQ,CAACM,QADH,CAEVC,GAAG,WAAKP,QAAQ,CAACM,QAAd,aAA0BN,QAAQ,CAACQ,UAAnC,CAFO,CAGVC,IAAI,CAAE,CAAAP,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEO,IAAN,GAAc,EAHV,CAIVC,KAAK,CAAE,CAAAR,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEQ,KAAN,GAAe,EAJZ,CAKVC,cAAc,CAAEX,QAAQ,CAACY,QALf,CAMVC,MAAM,CAAEb,QAAQ,CAACc,OAAT,CAAiBC,OAAjB,CAAyB,IAAzB,CAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,CAAiD,EAAjD,CANE,CAOVC,MAAM,CAAE,QAPE,CAAZ,CASAf,QAAQ,CAAC,KAAI,CAACC,IAAN,CAAR,CACD,CAXD,EAYD,CAbD,EAcD,C,sDACcA,I,CAAwBD,Q,CAAkC,CACvE,KAAKF,GAAL,CAASkB,WAAT,CACE,CACER,IAAI,CAAEP,IAAI,CAACO,IADb,CAEEC,KAAK,CAAER,IAAI,CAACQ,KAFd,CADF,CAKET,QALF,EAOD,C,sDAECC,I,CACAD,Q,CACA,CACA,KAAKF,GAAL,CAASmB,cAAT,CACE,CACEC,WAAW,CAAEjB,IAAI,CAACiB,WADpB,CAEEC,WAAW,CAAElB,IAAI,CAACkB,WAFpB,CADF,CAKEnB,QALF,EAOD,C,mCA3CkBH,Y","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IUser from \"../../alias/IUser\";\r\nimport IChangedUserData from \"../../alias/IChangedUserData\";\r\nimport SettingsBusiness from \"./Settings\";\r\nimport { UserDataChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport { UserPasswordChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport IUserPasswordChange from \"./../../alias/IUserPasswordChange\";\r\n\r\ninterface GetUserCallBack {\r\n  (user: IUser): void;\r\n}\r\nexport default interface UserBusiness {\r\n  user: IUser | undefined;\r\n}\r\n\r\nexport default class UserBusiness {\r\n  constructor(private api: API, private settings: SettingsBusiness) {}\r\n  get(callback: GetUserCallBack) {\r\n    if (this.user) {\r\n      callback(this.user);\r\n      return;\r\n    }\r\n    if (!this.api) return;\r\n    this.api.getUserInfo((user) => {\r\n      this.settings.get((settings) => {\r\n        this.user = {\r\n          id: settings.xmppUser,\r\n          jid: `${settings.xmppUser}@${settings.xmppDomain}`,\r\n          name: user?.name || \"\",\r\n          email: user?.email || \"\",\r\n          profilePicture: settings.imageUrl,\r\n          number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\"),\r\n          status: \"online\",\r\n        };\r\n        callback(this.user);\r\n      });\r\n    });\r\n  }\r\n  changeUserData(user: IChangedUserData, callback: UserDataChangeCallback) {\r\n    this.api.setDataUser(\r\n      {\r\n        name: user.name,\r\n        email: user.email,\r\n      },\r\n      callback\r\n    );\r\n  }\r\n  changePassword(\r\n    user: IUserPasswordChange,\r\n    callback: UserPasswordChangeCallback\r\n  ) {\r\n    this.api.setNewPassword(\r\n      {\r\n        oldPassword: user.oldPassword,\r\n        newPassword: user.newPassword,\r\n      },\r\n      callback\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}