{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import VideoMessage from\"./VideoMessage\";import ImageMessage from\"./ImageMessage\";import AudioMessage from\"./AudioMessage\";import FileMessage from\"./FileMessage\";import{useTranslation}from\"react-i18next\";import GroupNotification from\"./GroupNotification\";import\"./../assets/css/link-message-text.css\";import Linkify from\"react-linkify\";import{parseEmojis}from\"../helpers/MessageUtils\";import{TextMessageTagParse}from\"../helpers/TextMessageTagParse\";import{useContact}from\"../contexts/ContactContext\";var ChatMessageText=function ChatMessageText(_ref){var message=_ref.message;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useContact=useContact(),contacts=_useContact.contacts,openContact=_useContact.openContact;var _useTranslation=useTranslation(),t=_useTranslation.t;var toggle=function toggle(){return setShow(!show);};var componentDecorator=function componentDecorator(href,text,key){return/*#__PURE__*/React.createElement(\"a\",{href:href,key:key,rel:\"noopener noreferrer\",target:\"_blank\"},text);};useEffect(function(){setShow(false);},[message]);var smallerMessage=\"\";var biggerMessage=\"\";var MAXNUMBEROFCHARACTERSONAMESSAGE=10000;var MAXNUMBERTODISPLAYMESSAGE=165;if(!message.eventId){if(message.message){if(message.message.length>MAXNUMBERTODISPLAYMESSAGE&&!message.isFileMessage&&!message.isImageMessage&&!message.isAudioMessage&&!message.isVideoMessage){return/*#__PURE__*/React.createElement(\"div\",{id:\"receivedmessage\",className:\"mb-0\",style:{wordBreak:\"break-word\",textAlign:\"left\"}},/*#__PURE__*/React.createElement(Linkify,{componentDecorator:componentDecorator},!show?(smallerMessage=message.message.slice(0,message.message.includes(\"userId\")?MAXNUMBERTODISPLAYMESSAGE+100*(message.message.match(/{\"userId\":\"/g)||[]).length:MAXNUMBERTODISPLAYMESSAGE))&&TextMessageTagParse(smallerMessage,contacts,openContact):null,show?(biggerMessage=message.message.slice(MAXNUMBERTODISPLAYMESSAGE,MAXNUMBEROFCHARACTERSONAMESSAGE))&&TextMessageTagParse(message.message.slice(0,MAXNUMBERTODISPLAYMESSAGE)+biggerMessage,contacts,openContact):null,/*#__PURE__*/React.createElement(\"button\",{className:\"hover\",id:\"more-msg\",style:{border:0,background:0},onClick:toggle},!show&&message.message.length>MAXNUMBERTODISPLAYMESSAGE+100*(message.message.match(/{\"userId\":\"/g)||[]).length?\".. \"+t(\"Read more\"):null)));}if(message.message.length<=MAXNUMBERTODISPLAYMESSAGE-1||message.isFileMessage||message.isImageMessage||message.isAudioMessage||message.isVideoMessage){return/*#__PURE__*/React.createElement(\"div\",{className:\"mb-0\",id:\"receivedmessage\",style:{wordBreak:\"break-word\",textAlign:\"left\"}},message.isAudioMessage&&/*#__PURE__*/React.createElement(AudioMessage,{url:message.fileUrl}),message.isFileMessage&&/*#__PURE__*/React.createElement(FileMessage,{url:message.fileUrl}),message.isVideoMessage&&/*#__PURE__*/React.createElement(VideoMessage,{url:message.fileUrl}),message.isImageMessage&&/*#__PURE__*/React.createElement(ImageMessage,{url:message.fileUrl}),!message.isAudioMessage&&!message.isFileMessage&&!message.isVideoMessage&&!message.isImageMessage&&/*#__PURE__*/React.createElement(Linkify,{componentDecorator:componentDecorator},message.message?message.message.toString().split(\"\\n\").map(function(msg,i){return/*#__PURE__*/React.createElement(\"div\",{key:i,id:message.id},TextMessageTagParse(parseEmojis(msg),contacts,openContact));}):null));}}}else{if(message.eventId){return/*#__PURE__*/React.createElement(GroupNotification,{msg:message});}}return/*#__PURE__*/React.createElement(React.Fragment,null);};export default ChatMessageText;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageText.tsx"],"names":["React","useState","useEffect","VideoMessage","ImageMessage","AudioMessage","FileMessage","useTranslation","GroupNotification","Linkify","parseEmojis","TextMessageTagParse","useContact","ChatMessageText","message","show","setShow","contacts","openContact","t","toggle","componentDecorator","href","text","key","smallerMessage","biggerMessage","MAXNUMBEROFCHARACTERSONAMESSAGE","MAXNUMBERTODISPLAYMESSAGE","eventId","length","isFileMessage","isImageMessage","isAudioMessage","isVideoMessage","wordBreak","textAlign","slice","includes","match","border","background","fileUrl","toString","split","map","msg","i","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport IMessage from \"../alias/IMessage\";\r\n\r\nimport VideoMessage from \"./VideoMessage\";\r\nimport ImageMessage from \"./ImageMessage\";\r\nimport AudioMessage from \"./AudioMessage\";\r\nimport FileMessage from \"./FileMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport GroupNotification from \"./GroupNotification\";\r\nimport \"./../assets/css/link-message-text.css\";\r\nimport Linkify from \"react-linkify\";\r\nimport { parseEmojis } from \"../helpers/MessageUtils\";\r\nimport { TextMessageTagParse } from \"../helpers/TextMessageTagParse\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\nconst ChatMessageText: React.FC<IProps> = ({ message }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { contacts, openContact } = useContact();\r\n  const { t } = useTranslation();\r\n  const toggle = () => setShow(!show);\r\n  const componentDecorator = (href: string, text: string, key: any) => (\r\n    <a href={href} key={key} rel=\"noopener noreferrer\" target=\"_blank\">\r\n      {text}\r\n    </a>\r\n  );\r\n  useEffect(() => {\r\n    setShow(false);\r\n  }, [message]);\r\n  var smallerMessage = \"\";\r\n  var biggerMessage = \"\";\r\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\r\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\r\n\r\n  if (!message.eventId) {\r\n    if (message.message) {\r\n      if (\r\n        message.message.length > MAXNUMBERTODISPLAYMESSAGE &&\r\n        !message.isFileMessage &&\r\n        !message.isImageMessage &&\r\n        !message.isAudioMessage &&\r\n        !message.isVideoMessage\r\n      ) {\r\n        return (\r\n          <div\r\n            id=\"receivedmessage\"\r\n            className=\"mb-0\"\r\n            style={{ wordBreak: \"break-word\", textAlign: \"left\" }}\r\n          >\r\n            <Linkify\r\n              componentDecorator={componentDecorator}\r\n            >\r\n              {!show\r\n                ? (smallerMessage = message.message.slice(\r\n                    0,\r\n                    message.message.includes(\"userId\") ? \r\n                      MAXNUMBERTODISPLAYMESSAGE + \r\n                      (100 * (message.message.match(/{\"userId\":\"/g) || []).length) \r\n                    : \r\n                      MAXNUMBERTODISPLAYMESSAGE\r\n                  )) && TextMessageTagParse(smallerMessage, contacts, openContact)\r\n                : null\r\n                }\r\n              {show\r\n                ? (biggerMessage = message.message.slice(\r\n                    MAXNUMBERTODISPLAYMESSAGE,\r\n                    MAXNUMBEROFCHARACTERSONAMESSAGE\r\n                  )) &&\r\n                  TextMessageTagParse(message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) +\r\n                    biggerMessage, contacts, openContact)\r\n                : null}\r\n\r\n              <button\r\n                className=\"hover\"\r\n                id=\"more-msg\"\r\n                style={{\r\n                  border: 0,\r\n                  background: 0,\r\n                }}\r\n                onClick={toggle}\r\n              >\r\n                {!show && message.message.length > \r\n                MAXNUMBERTODISPLAYMESSAGE + (100 * (message.message.match(/{\"userId\":\"/g) || []).length)  ? \".. \" + t(\"Read more\") \r\n                : null}\r\n              </button>\r\n            </Linkify>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (\r\n        (message.message.length <= MAXNUMBERTODISPLAYMESSAGE - 1 ) ||\r\n        message.isFileMessage ||\r\n        message.isImageMessage ||\r\n        message.isAudioMessage ||\r\n        message.isVideoMessage\r\n      ) {\r\n        return (\r\n          <div\r\n            className=\"mb-0\"\r\n            id=\"receivedmessage\"\r\n            style={{ wordBreak: \"break-word\", textAlign: \"left\" }}\r\n          >\r\n            {message.isAudioMessage && <AudioMessage url={message.fileUrl} />}\r\n            {message.isFileMessage && <FileMessage url={message.fileUrl} />}\r\n            {message.isVideoMessage && <VideoMessage url={message.fileUrl} />}\r\n            {message.isImageMessage && <ImageMessage url={message.fileUrl} />}\r\n            {!message.isAudioMessage &&\r\n              !message.isFileMessage &&\r\n              !message.isVideoMessage &&\r\n              !message.isImageMessage && (\r\n                <Linkify componentDecorator={componentDecorator}>\r\n                  {message.message\r\n                    ? message.message\r\n                        .toString()\r\n                        .split(\"\\n\")\r\n                        .map((msg, i) => (\r\n                          <div key={i} id={message.id}>\r\n                            {TextMessageTagParse(\r\n                              parseEmojis(msg),\r\n                              contacts,\r\n                              openContact\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                    : null}\r\n                </Linkify>\r\n              )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  } else {\r\n    if (message.eventId) {\r\n      return <GroupNotification msg={message} />;\r\n    }\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default ChatMessageText;\r\n"]},"metadata":{},"sourceType":"module"}