{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\SelectContact.tsx\";\nimport React from \"react\";\nimport { Input, Label } from \"reactstrap\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport sortContactGroup from \"../helpers/SortContactGroup\";\n\nconst SelectContact = ({\n  handleCheckContact\n}) => {\n  const {\n    contacts\n  } = useChat();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, sortContactGroup(contacts).map((contact, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 font-weight-bold text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, contact.group), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, contact.children.map((child, keyChild) => /*#__PURE__*/React.createElement(\"li\", {\n    key: keyChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => handleCheckContact(e.target.checked, child),\n    id: \"memberCheck\" + child.id,\n    value: child.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label\",\n    htmlFor: \"memberCheck\" + child.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, child.name))))))));\n};\n\nexport default SelectContact;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SelectContact.tsx"],"names":["React","Input","Label","useChat","sortContactGroup","SelectContact","handleCheckContact","contacts","map","contact","key","group","children","child","keyChild","e","target","checked","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;;AAMA,MAAMC,aAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,OAAO,EAA5B;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,CAACG,QAAD,CAAhB,CAA2BC,GAA3B,CAA+B,CAACC,OAAD,EAAUC,GAAV,kBAC9B;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,KADX,CADF,eAKE;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACG,QAAR,CAAiBJ,GAAjB,CAAqB,CAACK,KAAD,EAAQC,QAAR,kBACpB;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,QAAQ,EAAGC,CAAD,IACRT,kBAAkB,CAACS,CAAC,CAACC,MAAF,CAASC,OAAV,EAAmBJ,KAAnB,CAJtB;AAME,IAAA,EAAE,EAAE,gBAAgBA,KAAK,CAACK,EAN5B;AAOE,IAAA,KAAK,EAAEL,KAAK,CAACM,IAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,OAAO,EAAE,gBAAgBN,KAAK,CAACK,EAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,KAAK,CAACM,IAJT,CAVF,CADF,CADD,CADH,CALF,CADD,CADH,CADF;AAmCD,CAtCD;;AAwCA,eAAed,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Input, Label } from \"reactstrap\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport sortContactGroup from \"../helpers/SortContactGroup\";\r\n\r\ninterface IProps {\r\n  handleCheckContact(selected: boolean, contact: IContact): void;\r\n}\r\n\r\nconst SelectContact: React.FC<IProps> = ({ handleCheckContact }) => {\r\n  const { contacts } = useChat();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {sortContactGroup(contacts).map((contact, key) => (\r\n        <div key={key}>\r\n          <div className=\"p-3 font-weight-bold text-primary\">\r\n            {contact.group}\r\n          </div>\r\n\r\n          <ul className=\"list-unstyled contact-list\">\r\n            {contact.children.map((child, keyChild) => (\r\n              <li key={keyChild}>\r\n                <div className=\"custom-control custom-checkbox\">\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    onChange={(e) =>\r\n                      handleCheckContact(e.target.checked, child)\r\n                    }\r\n                    id={\"memberCheck\" + child.id}\r\n                    value={child.name}\r\n                  />\r\n                  <Label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor={\"memberCheck\" + child.id}\r\n                  >\r\n                    {child.name}\r\n                  </Label>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SelectContact;\r\n"]},"metadata":{},"sourceType":"module"}