{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyModeratorLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\n\nconst CopyModeratorLinkButtonInActiveCall = ({\n  moderatorLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(moderatorLink);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n    },\n    className: \"nav-btn user-profile-show\",\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 360,\n      height: 1,\n      width: 1,\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CopyModeratorLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyModeratorLinkButtonInActiveCall.tsx"],"names":["React","Button","ToastContainer","useCopy","CopyModeratorLinkButtonInActiveCall","moderatorLink","buttonIcon","copy","backgroundColor","borderRadius","height","width","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAOA,MAAMC,mCAAoF,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAC1H,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,OAAO,CAACE,aAAD,CAAxB;AACA,sBACI,uDACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACXE,MAAAA,IAAI;AACP,KALD;AAMA,IAAA,SAAS,EAAC,2BANV;AAOA,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAE,OADd;AAEHC,MAAAA,YAAY,EAAE,GAFX;AAGHC,MAAAA,MAAM,EAAE,CAHL;AAIHC,MAAAA,KAAK,EAAE,CAJJ;AAKHC,MAAAA,KAAK,EAAE;AALJ,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeI;AAAG,IAAA,SAAS,EAAEN,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CAFJ,CADJ;AAsBH,CAxBD;;AA0BA,eAAeF,mCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\n\r\nexport interface ICopyModeratorLinkButtonInActiveCall{\r\n    moderatorLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\nconst CopyModeratorLinkButtonInActiveCall : React.FC<ICopyModeratorLinkButtonInActiveCall> = ({moderatorLink, buttonIcon}) => {\r\n    const { copy } = useCopy(moderatorLink);    \r\n    return(\r\n        <>\r\n            <ToastContainer/>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n                copy();\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: 360,\r\n                height: 1,\r\n                width: 1,\r\n                color: \"black\",\r\n            }}\r\n            >\r\n                <i className={buttonIcon}></i>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CopyModeratorLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}