{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalAddMember.tsx\";\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, Input, ModalFooter } from \"reactstrap\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleBar from \"simplebar-react\";\nimport { useContact } from './../contexts/ContactContext';\n\nconst ModalAddContacts = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const {\n    setToggleAddingMembers,\n    setCheckedMembers\n  } = useContact();\n  const {\n    showModalAddContact,\n    setShowModalAddContact\n  } = useModal();\n\n  const toggle = () => {\n    if (showModalAddContact) {\n      setShowModalAddContact(!showModalAddContact);\n    }\n  };\n\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      let selected = selectedContact;\n      selected.push(contact);\n      setSelectedContact(selected);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.userId === contact.userId) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: !!showModalAddContact,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, t(\"Add Contacts\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-2 pb-3 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-3\",\n    id: \"addgroupname-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    onClick: () => {\n      setCheckedMembers(undefined);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      toggle();\n      setToggleAddingMembers(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, t(\"Add Contacts\"))))));\n};\n\nexport default ModalAddContacts;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddMember.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","CardBody","Button","Input","ModalFooter","useModal","useTranslation","SimpleBar","useContact","ModalAddContacts","search","setSearch","selectedContact","setSelectedContact","t","setToggleAddingMembers","setCheckedMembers","showModalAddContact","setShowModalAddContact","toggle","handleCheckContact","selected","contact","push","filter","sel","userId","e","target","value","height","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,WAPF,QAQO,YARP;AAUA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAIA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAY,EAAZ,CAAtD;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAM;AAAES,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAgDR,UAAU,EAAhE;AAEA,QAAM;AACJS,IAAAA,mBADI;AAEJC,IAAAA;AAFI,MAGFb,QAAQ,EAHZ;;AAKA,QAAMc,MAAM,GAAG,MAAM;AACnB,QAAIF,mBAAJ,EAAyB;AACvBC,MAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACD;AACF,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,CACzBC,QADyB,EAEzBC,OAFyB,KAGtB;AACH,QAAID,QAAJ,EAAc;AACZ,UAAIA,QAAQ,GAAGT,eAAf;AACAS,MAAAA,QAAQ,CAACE,IAAT,CAAcD,OAAd;AACAT,MAAAA,kBAAkB,CAACQ,QAAD,CAAlB;AACD,KAJD,MAIO;AACLR,MAAAA,kBAAkB,CAChBD,eAAe,CAACY,MAAhB,CAAwBC,GAAD,IAAS;AAC9B,YAAIA,GAAG,CAACC,MAAJ,KAAeJ,OAAO,CAACI,MAA3B,EAAmC;AACjC,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OALD,CADgB,CAAlB;AAQD;AACF,GAlBD;;AAoBA,sBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,MAAM,EAAE,CAAC,CAACT,mBAFZ;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,MAAM,EAAEE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,CAAC,CAAC,cAAD,CAA/B,CANF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,oBAHL;AAIE,IAAA,KAAK,EAAEJ,MAJT;AAKE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAME,IAAA,WAAW,EAAEf,CAAC,CAAC,gBAAD,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAeE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AACrCd,MAAAA,iBAAiB,CAACe,SAAD,CAAjB;AACAZ,MAAAA,MAAM;AACL,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,CAAC,CAAC,OAAD,CAJJ,CADF,eAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AACA,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,MAAM;AACNJ,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACC,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCD,CAAC,CAAC,cAAD,CALF,CAPF,CAfF,CADF,CAPF,CADF;AA2CD,CAlFD;;AAoFA,eAAeL,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  Input,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport SelectContact from \"./SelectContact\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IMember from \"../alias/IMember\";\r\nimport {useContact} from './../contexts/ContactContext'\r\n\r\nconst ModalAddContacts: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  \r\n  const [selectedContact, setSelectedContact] = useState<IMember[]>([]);\r\n\r\n  const { t } = useTranslation();\r\n  const { setToggleAddingMembers, setCheckedMembers } = useContact();\r\n\r\n  const {\r\n    showModalAddContact,\r\n    setShowModalAddContact,\r\n  } = useModal();\r\n\r\n  const toggle = () => {\r\n    if (showModalAddContact) {\r\n      setShowModalAddContact(!showModalAddContact);\r\n    }\r\n  };\r\n\r\n  const handleCheckContact = (\r\n    selected: boolean,\r\n    contact: IMember\r\n  ) => {\r\n    if (selected) {\r\n      let selected = selectedContact;\r\n      selected.push(contact);\r\n      setSelectedContact(selected);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.userId === contact.userId) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalAddContact}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Add Contacts\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              {/* <SelectContact handleCheckContact={handleCheckContact} search={search}/> */}\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button color=\"default\" onClick={() => {\r\n              setCheckedMembers(undefined);\r\n              toggle();\r\n              }}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button color=\"primary\" \r\n            onClick={() => {\r\n              toggle();\r\n              setToggleAddingMembers(true);\r\n              }}>\r\n            {t(\"Add Contacts\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalAddContacts;\r\n"]},"metadata":{},"sourceType":"module"}