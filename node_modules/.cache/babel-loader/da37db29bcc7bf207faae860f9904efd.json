{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatBody.tsx\";\nimport React, { useState } from \"react\";\nimport SimpleBar from \"simplebar-react\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport ChatMessage from \"./ChatMessage\";\n\nconst ChatBody = () => {\n  const {\n    activeChat\n  } = useChat();\n  const [showButtonBottom, setShowButtonBottom] = useState(true);\n\n  const scrolltoBottom = () => {\n    setShowButtonBottom(false);\n    /*\r\n      if (ref.current.el) {\r\n        ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n      }\r\n    */\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"chat-conversation p-3 p-lg-4\",\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, activeChat.messages.map((message, key) => /*#__PURE__*/React.createElement(ChatMessage, {\n    activeChat: activeChat,\n    message: message,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })))), showButtonBottom && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-chat-down\",\n    onClick: scrolltoBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-arrow-down-s-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ChatBody;\n/*\r\n \r\n  funcionalidades de scroll\r\n\r\n  useEffect(() => {\r\n    /*\r\n        ref.current.recalculate();\r\n        if (ref.current.el) {\r\n            ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    \r\n  }, [activeChat]);\r\n\r\n  const addMessage = (message: any, type: any) => {};\r\n\r\n  function scrolltoBottom() {\r\n    /*\r\n        if (ref.current.el) {\r\n        ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    \r\n  }\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatBody.tsx"],"names":["React","useState","SimpleBar","useChat","ChatMessage","ChatBody","activeChat","showButtonBottom","setShowButtonBottom","scrolltoBottom","maxHeight","messages","map","message","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,OAAO,EAA9B;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMQ,cAAc,GAAG,MAAM;AAC3BD,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;;;;;AAKD,GAPD;;AAQA,sBACE,uDACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAGE,IAAA,EAAE,EAAC,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,QAAX,CAAoBC,GAApB,CAAwB,CAACC,OAAD,EAAUC,GAAV,kBACvB,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAER,UAAzB;AAAqC,IAAA,OAAO,EAAEO,OAA9C;AAAuD,IAAA,GAAG,EAAEC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CALF,CADF,EAYGP,gBAAgB,iBACf;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEE,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,CADF;AAoBD,CAhCD;;AAkCA,eAAeJ,QAAf;AAEA","sourcesContent":["import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst ChatBody: React.FC = () => {\r\n  const { activeChat } = useChat();\r\n  const [showButtonBottom, setShowButtonBottom] = useState(true);\r\n\r\n  const scrolltoBottom = () => {\r\n    setShowButtonBottom(false);\r\n    /*\r\n      if (ref.current.el) {\r\n        ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n      }\r\n    */\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleBar\r\n        style={{ maxHeight: \"100%\" }}\r\n        className=\"chat-conversation p-3 p-lg-4\"\r\n        id=\"messages\"\r\n      >\r\n        <ul className=\"list-unstyled mb-0\">\r\n          {activeChat.messages.map((message, key) => (\r\n            <ChatMessage activeChat={activeChat} message={message} key={key} />\r\n          ))}\r\n        </ul>\r\n      </SimpleBar>\r\n      {showButtonBottom && (\r\n        <div className=\"btn-chat-down\" onClick={scrolltoBottom}>\r\n          <i className=\"ri-arrow-down-s-line\"></i>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBody;\r\n\r\n/*\r\n \r\n  funcionalidades de scroll\r\n\r\n  useEffect(() => {\r\n    /*\r\n        ref.current.recalculate();\r\n        if (ref.current.el) {\r\n            ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    \r\n  }, [activeChat]);\r\n\r\n  const addMessage = (message: any, type: any) => {};\r\n\r\n  function scrolltoBottom() {\r\n    /*\r\n        if (ref.current.el) {\r\n        ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    \r\n  }\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}