{"ast":null,"code":"import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = i => i) {\n  return {\n    regex,\n    deser: ([s]) => post(parseDigits(s))\n  };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `( |${NBSP})`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s.replace(/\\./g, \"\") // ignore dots that were made optional\n  .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n  .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) => strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return {\n    regex,\n    deser: ([, h, m]) => signedOffset(h, m),\n    groups\n  };\n}\n\nfunction simple(regex) {\n  return {\n    regex,\n    deser: ([s]) => s\n  };\n}\n\nfunction escapeToken(value) {\n  // eslint-disable-next-line no-useless-escape\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n        two = digitRegex(loc, \"{2}\"),\n        three = digitRegex(loc, \"{3}\"),\n        four = digitRegex(loc, \"{4}\"),\n        six = digitRegex(loc, \"{6}\"),\n        oneOrTwo = digitRegex(loc, \"{1,2}\"),\n        oneToThree = digitRegex(loc, \"{1,3}\"),\n        oneToSix = digitRegex(loc, \"{1,6}\"),\n        oneToNine = digitRegex(loc, \"{1,9}\"),\n        twoToFour = digitRegex(loc, \"{2,4}\"),\n        fourToSix = digitRegex(loc, \"{4,6}\"),\n        literal = t => ({\n    regex: RegExp(escapeToken(t.val)),\n    deser: ([s]) => s,\n    literal: true\n  }),\n        unitate = t => {\n    if (token.literal) {\n      return literal(t);\n    }\n\n    switch (t.val) {\n      // era\n      case \"G\":\n        return oneOf(loc.eras(\"short\", false), 0);\n\n      case \"GG\":\n        return oneOf(loc.eras(\"long\", false), 0);\n      // years\n\n      case \"y\":\n        return intUnit(oneToSix);\n\n      case \"yy\":\n        return intUnit(twoToFour, untruncateYear);\n\n      case \"yyyy\":\n        return intUnit(four);\n\n      case \"yyyyy\":\n        return intUnit(fourToSix);\n\n      case \"yyyyyy\":\n        return intUnit(six);\n      // months\n\n      case \"M\":\n        return intUnit(oneOrTwo);\n\n      case \"MM\":\n        return intUnit(two);\n\n      case \"MMM\":\n        return oneOf(loc.months(\"short\", true, false), 1);\n\n      case \"MMMM\":\n        return oneOf(loc.months(\"long\", true, false), 1);\n\n      case \"L\":\n        return intUnit(oneOrTwo);\n\n      case \"LL\":\n        return intUnit(two);\n\n      case \"LLL\":\n        return oneOf(loc.months(\"short\", false, false), 1);\n\n      case \"LLLL\":\n        return oneOf(loc.months(\"long\", false, false), 1);\n      // dates\n\n      case \"d\":\n        return intUnit(oneOrTwo);\n\n      case \"dd\":\n        return intUnit(two);\n      // ordinals\n\n      case \"o\":\n        return intUnit(oneToThree);\n\n      case \"ooo\":\n        return intUnit(three);\n      // time\n\n      case \"HH\":\n        return intUnit(two);\n\n      case \"H\":\n        return intUnit(oneOrTwo);\n\n      case \"hh\":\n        return intUnit(two);\n\n      case \"h\":\n        return intUnit(oneOrTwo);\n\n      case \"mm\":\n        return intUnit(two);\n\n      case \"m\":\n        return intUnit(oneOrTwo);\n\n      case \"q\":\n        return intUnit(oneOrTwo);\n\n      case \"qq\":\n        return intUnit(two);\n\n      case \"s\":\n        return intUnit(oneOrTwo);\n\n      case \"ss\":\n        return intUnit(two);\n\n      case \"S\":\n        return intUnit(oneToThree);\n\n      case \"SSS\":\n        return intUnit(three);\n\n      case \"u\":\n        return simple(oneToNine);\n      // meridiem\n\n      case \"a\":\n        return oneOf(loc.meridiems(), 0);\n      // weekYear (k)\n\n      case \"kkkk\":\n        return intUnit(four);\n\n      case \"kk\":\n        return intUnit(twoToFour, untruncateYear);\n      // weekNumber (W)\n\n      case \"W\":\n        return intUnit(oneOrTwo);\n\n      case \"WW\":\n        return intUnit(two);\n      // weekdays\n\n      case \"E\":\n      case \"c\":\n        return intUnit(one);\n\n      case \"EEE\":\n        return oneOf(loc.weekdays(\"short\", false, false), 1);\n\n      case \"EEEE\":\n        return oneOf(loc.weekdays(\"long\", false, false), 1);\n\n      case \"ccc\":\n        return oneOf(loc.weekdays(\"short\", true, false), 1);\n\n      case \"cccc\":\n        return oneOf(loc.weekdays(\"long\", true, false), 1);\n      // offset/zone\n\n      case \"Z\":\n      case \"ZZ\":\n        return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n\n      case \"ZZZ\":\n        return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n      // because we don't have any way to figure out what they are\n\n      case \"z\":\n        return simple(/[a-z_+-/]{1,256}?/i);\n\n      default:\n        return literal(t);\n    }\n  };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n  unit.token = token;\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  }\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const {\n    type,\n    value\n  } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value\n    };\n  }\n\n  const style = formatOpts[type];\n  let val = partTypeStyleToTokenVal[type];\n\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n              groups = h.groups ? h.groups + 1 : 1;\n\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n\n        matchIndex += groups;\n      }\n    }\n\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n\n      case \"s\":\n        return \"second\";\n\n      case \"m\":\n        return \"minute\";\n\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n\n      case \"d\":\n        return \"day\";\n\n      case \"o\":\n        return \"ordinal\";\n\n      case \"L\":\n      case \"M\":\n        return \"month\";\n\n      case \"y\":\n        return \"year\";\n\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n\n      case \"W\":\n        return \"weekNumber\";\n\n      case \"k\":\n        return \"weekYear\";\n\n      case \"q\":\n        return \"quarter\";\n\n      default:\n        return null;\n    }\n  };\n\n  let zone;\n\n  if (!isUndefined(matches.Z)) {\n    zone = new FixedOffsetZone(matches.Z);\n  } else if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  } else {\n    zone = null;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n  return [vals, zone];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n  if (!formatOpts) {\n    return token;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n  const tokens = parts.map(p => tokenForPart(p, locale, formatOpts));\n\n  if (tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n/**\n * @private\n */\n\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n        units = tokens.map(t => unitForToken(t, locale)),\n        disqualifyingUnit = units.find(t => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return {\n      input,\n      tokens,\n      invalidReason: disqualifyingUnit.invalidReason\n    };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n          regex = RegExp(regexString, \"i\"),\n          [rawMatches, matches] = match(input, regex, handlers),\n          [result, zone] = matches ? dateTimeFromMatches(matches) : [null, null];\n\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\"Can't include meridiem when specifying 24-hour format\");\n    }\n\n    return {\n      input,\n      tokens,\n      regex,\n      rawMatches,\n      matches,\n      result,\n      zone\n    };\n  }\n}\nexport function parseFromTokens(locale, input, format) {\n  const {\n    result,\n    zone,\n    invalidReason\n  } = explainFromTokens(locale, input, format);\n  return [result, zone, invalidReason];\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/luxon/src/impl/tokenParser.js"],"names":["parseMillis","isUndefined","untruncateYear","signedOffset","hasOwnProperty","Formatter","FixedOffsetZone","IANAZone","DateTime","digitRegex","parseDigits","ConflictingSpecificationError","MISSING_FTP","intUnit","regex","post","i","deser","s","NBSP","String","fromCharCode","spaceOrNBSP","spaceOrNBSPRegExp","RegExp","fixListRegex","replace","stripInsensitivities","toLowerCase","oneOf","strings","startIndex","map","join","findIndex","offset","groups","h","m","simple","escapeToken","value","unitForToken","token","loc","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","literal","t","val","unitate","eras","months","meridiems","weekdays","source","unit","invalidReason","partTypeStyleToTokenVal","year","numeric","month","short","long","day","weekday","dayperiod","dayPeriod","hour","minute","second","tokenForPart","part","locale","formatOpts","type","style","undefined","buildRegex","units","re","u","reduce","f","r","match","input","handlers","matches","all","matchIndex","slice","dateTimeFromMatches","toField","zone","Z","z","create","q","M","a","G","y","S","vals","Object","keys","k","dummyDateTimeCache","getDummyDateTime","fromMillis","maybeExpandMacroToken","macroTokenToFormatOpts","formatter","parts","formatDateTimeParts","tokens","p","includes","expandMacroTokens","Array","prototype","concat","explainFromTokens","format","parseFormat","disqualifyingUnit","find","regexString","rawMatches","result","parseFromTokens"],"mappings":"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","sourcesContent":["import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = i => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `( |${NBSP})`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  // eslint-disable-next-line no-useless-escape\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = t => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = t => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  }\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone;\n  if (!isUndefined(matches.Z)) {\n    zone = new FixedOffsetZone(matches.Z);\n  } else if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  } else {\n    zone = null;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n  if (!formatOpts) {\n    return token;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n\n  const tokens = parts.map(p => tokenForPart(p, locale, formatOpts));\n\n  if (tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map(t => unitForToken(t, locale)),\n    disqualifyingUnit = units.find(t => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone] = matches ? dateTimeFromMatches(matches) : [null, null];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, invalidReason];\n}\n"]},"metadata":{},"sourceType":"module"}