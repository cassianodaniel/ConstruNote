{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalGenerics.tsx\";\nimport React from \"react\";\nimport { Modal, ModalHeader, ModalFooter } from \"reactstrap\";\n\nconst ModalGenerics = ({\n  children,\n  show,\n  setShow,\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: show,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    tag: \"h5\",\n    className: \"modal-title font-size-16\",\n    toggle: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default ModalGenerics;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalGenerics.tsx"],"names":["React","Modal","ModalHeader","ModalFooter","ModalGenerics","children","show","setShow","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,WAA7B,QAAgD,YAAhD;;AAQA,MAAMC,aAA+B,GAAG,CAAC;AACvCC,EAAAA,QADuC;AAEvCC,EAAAA,IAFuC;AAGvCC,EAAAA,OAHuC;AAIvCC,EAAAA;AAJuC,CAAD,KAKlC;AACJ,sBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,QAAhB;AAAyB,IAAA,MAAM,EAAEF,IAAjC;AAAuC,IAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAA2D,IAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FE,KAA1F,CADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcH,QAAd,CAFF,CADF;AAMD,CAZD;;AAcA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Modal, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n  title: string;\r\n}\r\n\r\nconst ModalGenerics: React.FC<IProps> = ({\r\n  children,\r\n  show,\r\n  setShow,\r\n  title,\r\n}) => {\r\n  return (\r\n    <Modal backdrop=\"static\" isOpen={show} centered>\r\n      <ModalHeader tag=\"h5\" className=\"modal-title font-size-16\" toggle={() => setShow(!show)}>{title}</ModalHeader>\r\n      <ModalFooter>{children}</ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalGenerics;\r\n"]},"metadata":{},"sourceType":"module"}