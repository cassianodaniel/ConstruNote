{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar Socket = require('./Socket');\n\nvar Connection = require('@xmpp/connection');\n\nvar xml = require('@xmpp/xml');\n\nvar FramedParser = require('./FramedParser');\n\nvar NS_FRAMING = 'urn:ietf:params:xml:ns:xmpp-framing';\n/* References\n * WebSocket protocol https://tools.ietf.org/html/rfc6455\n * WebSocket Web API https://html.spec.whatwg.org/multipage/comms.html#network\n * XMPP over WebSocket https://tools.ietf.org/html/rfc7395\n */\n\nvar ConnectionWebSocket = /*#__PURE__*/function (_Connection) {\n  _inherits(ConnectionWebSocket, _Connection);\n\n  var _super = _createSuper(ConnectionWebSocket);\n\n  function ConnectionWebSocket() {\n    _classCallCheck(this, ConnectionWebSocket);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ConnectionWebSocket, [{\n    key: \"send\",\n    value: function send(element) {\n      var _get2;\n\n      if (!element.attrs.xmlns && _get(_getPrototypeOf(ConnectionWebSocket.prototype), \"isStanza\", this).call(this, element)) {\n        element.attrs.xmlns = 'jabber:client';\n      }\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(ConnectionWebSocket.prototype), \"send\", this)).call.apply(_get2, [this, element].concat(args));\n    } // https://tools.ietf.org/html/rfc7395#section-3.6\n\n  }, {\n    key: \"footerElement\",\n    value: function footerElement() {\n      return new xml.Element('close', {\n        xmlns: NS_FRAMING\n      });\n    } // https://tools.ietf.org/html/rfc7395#section-3.4\n\n  }, {\n    key: \"headerElement\",\n    value: function headerElement() {\n      var el = _get(_getPrototypeOf(ConnectionWebSocket.prototype), \"headerElement\", this).call(this);\n\n      el.name = 'open';\n      el.attrs.xmlns = NS_FRAMING;\n      return el;\n    }\n  }, {\n    key: \"socketParameters\",\n    value: function socketParameters(service) {\n      return service.match(/^wss?:\\/\\//) ? service : undefined;\n    }\n  }]);\n\n  return ConnectionWebSocket;\n}(Connection);\n\nConnectionWebSocket.prototype.Socket = Socket;\nConnectionWebSocket.prototype.NS = 'jabber:client';\nConnectionWebSocket.prototype.Parser = FramedParser;\nmodule.exports = ConnectionWebSocket;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/websocket/lib/Connection.js"],"names":["Socket","require","Connection","xml","FramedParser","NS_FRAMING","ConnectionWebSocket","element","attrs","xmlns","args","Element","el","name","service","match","undefined","prototype","NS","Parser","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAMI,UAAU,GAAG,qCAAnB;AAEA;AACA;AACA;AACA;AACA;;IAEMC,mB;;;;;;;;;;;;;yBACCC,O,EAAkB;AAAA;;AACrB,UAAI,CAACA,OAAO,CAACC,KAAR,CAAcC,KAAf,sFAAuCF,OAAvC,CAAJ,EAAqD;AACnDA,QAAAA,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsB,eAAtB;AACD;;AAHoB,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAKrB,mHAAkBH,OAAlB,SAA8BG,IAA9B;AACD,K,CAED;;;;oCACgB;AACd,aAAO,IAAIP,GAAG,CAACQ,OAAR,CAAgB,OAAhB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEJ;AADuB,OAAzB,CAAP;AAGD,K,CAED;;;;oCACgB;AACd,UAAMO,EAAE,yFAAR;;AACAA,MAAAA,EAAE,CAACC,IAAH,GAAU,MAAV;AACAD,MAAAA,EAAE,CAACJ,KAAH,CAASC,KAAT,GAAiBJ,UAAjB;AACA,aAAOO,EAAP;AACD;;;qCAEgBE,O,EAAS;AACxB,aAAOA,OAAO,CAACC,KAAR,CAAc,YAAd,IAA8BD,OAA9B,GAAwCE,SAA/C;AACD;;;;EA1B+Bd,U;;AA6BlCI,mBAAmB,CAACW,SAApB,CAA8BjB,MAA9B,GAAuCA,MAAvC;AACAM,mBAAmB,CAACW,SAApB,CAA8BC,EAA9B,GAAmC,eAAnC;AACAZ,mBAAmB,CAACW,SAApB,CAA8BE,MAA9B,GAAuCf,YAAvC;AAEAgB,MAAM,CAACC,OAAP,GAAiBf,mBAAjB","sourcesContent":["'use strict'\n\nconst Socket = require('./Socket')\nconst Connection = require('@xmpp/connection')\nconst xml = require('@xmpp/xml')\nconst FramedParser = require('./FramedParser')\n\nconst NS_FRAMING = 'urn:ietf:params:xml:ns:xmpp-framing'\n\n/* References\n * WebSocket protocol https://tools.ietf.org/html/rfc6455\n * WebSocket Web API https://html.spec.whatwg.org/multipage/comms.html#network\n * XMPP over WebSocket https://tools.ietf.org/html/rfc7395\n */\n\nclass ConnectionWebSocket extends Connection {\n  send(element, ...args) {\n    if (!element.attrs.xmlns && super.isStanza(element)) {\n      element.attrs.xmlns = 'jabber:client'\n    }\n\n    return super.send(element, ...args)\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.6\n  footerElement() {\n    return new xml.Element('close', {\n      xmlns: NS_FRAMING,\n    })\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.4\n  headerElement() {\n    const el = super.headerElement()\n    el.name = 'open'\n    el.attrs.xmlns = NS_FRAMING\n    return el\n  }\n\n  socketParameters(service) {\n    return service.match(/^wss?:\\/\\//) ? service : undefined\n  }\n}\n\nConnectionWebSocket.prototype.Socket = Socket\nConnectionWebSocket.prototype.NS = 'jabber:client'\nConnectionWebSocket.prototype.Parser = FramedParser\n\nmodule.exports = ConnectionWebSocket\n"]},"metadata":{},"sourceType":"script"}