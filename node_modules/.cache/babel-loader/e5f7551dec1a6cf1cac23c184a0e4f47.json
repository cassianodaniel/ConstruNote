{"ast":null,"code":"/**\n * An Exception is considered a condition that a reasonable application may wish to catch.\n * An Error indicates serious problems that a reasonable application should not try to catch.\n * @public\n */\nexport class Exception extends Error {\n  constructor(message) {\n    super(message); // 'Error' breaks prototype chain here\n\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/sip.js/lib/core/exceptions/exception.js"],"names":["Exception","Error","constructor","message","Object","setPrototypeOf","new","target","prototype"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,SAAN,SAAwBC,KAAxB,CAA8B;AACjCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN,EADiB,CACD;;AAChBC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BC,GAAG,CAACC,MAAJ,CAAWC,SAAvC,EAFiB,CAEkC;AACtD;;AAJgC","sourcesContent":["/**\n * An Exception is considered a condition that a reasonable application may wish to catch.\n * An Error indicates serious problems that a reasonable application should not try to catch.\n * @public\n */\nexport class Exception extends Error {\n    constructor(message) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n"]},"metadata":{},"sourceType":"module"}