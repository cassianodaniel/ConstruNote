{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\contexts\\\\AuthContext.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    status: \"offline\"\n  });\n  const [changedUserData, setChangedUserData] = useState({\n    email: \"\",\n    name: \"\"\n  });\n  const [changedUserPassword, setChangedUserPassword] = useState({\n    oldPassword: \"\",\n    newPassword: \"\"\n  });\n  const [visualNotificationEnabled, setVisualNotificationEnabled] = useState(localStorage.getItem(\"visualNotificationEnabled\") !== null ? localStorage.getItem(\"visualNotificationEnabled\") === \"true\" : true);\n  const [soundNotificationEnabled, setSoundNotificationEnabled] = useState(localStorage.getItem(\"soundNotificationEnabled\") !== null ? localStorage.getItem(\"visualNotificationEnabled\") === \"true\" : true);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      changedUserData,\n      setChangedUserData,\n      changedUserPassword,\n      setChangedUserPassword,\n      visualNotificationEnabled,\n      setVisualNotificationEnabled,\n      soundNotificationEnabled,\n      setSoundNotificationEnabled\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/AuthContext.tsx"],"names":["React","createContext","useContext","useState","AuthContext","AuthProvider","children","user","setUser","id","name","email","status","changedUserData","setChangedUserData","changedUserPassword","setChangedUserPassword","oldPassword","newPassword","visualNotificationEnabled","setVisualNotificationEnabled","localStorage","getItem","soundNotificationEnabled","setSoundNotificationEnabled","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAkBA,OAAO,MAAMC,WAAW,GAAGH,aAAa,CACtC,EADsC,CAAjC;AAIP,OAAO,MAAMI,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAQ;AACtCM,IAAAA,EAAE,EAAE,EADkC;AAEtCC,IAAAA,IAAI,EAAE,EAFgC;AAGtCC,IAAAA,KAAK,EAAE,EAH+B;AAItCC,IAAAA,MAAM,EAAE;AAJ8B,GAAR,CAAhC;AAMA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAmB;AACvEQ,IAAAA,KAAK,EAAE,EADgE;AAEvED,IAAAA,IAAI,EAAE;AAFiE,GAAnB,CAAtD;AAIA,QAAM,CACJK,mBADI,EAEJC,sBAFI,IAGFb,QAAQ,CAAsB;AAAEc,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,WAAW,EAAE;AAAhC,GAAtB,CAHZ;AAIA,QAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DjB,QAAQ,CACxEkB,YAAY,CAACC,OAAb,CAAqB,2BAArB,MAAsD,IAAtD,GACID,YAAY,CAACC,OAAb,CAAqB,2BAArB,MAAsD,MAD1D,GAEI,IAHoE,CAA1E;AAKA,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0DrB,QAAQ,CACtEkB,YAAY,CAACC,OAAb,CAAqB,0BAArB,MAAqD,IAArD,GACID,YAAY,CAACC,OAAb,CAAqB,2BAArB,MAAsD,MAD1D,GAEI,IAHkE,CAAxE;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLK,MAAAA,eAHK;AAILC,MAAAA,kBAJK;AAKLC,MAAAA,mBALK;AAMLC,MAAAA,sBANK;AAOLG,MAAAA,yBAPK;AAQLC,MAAAA,4BARK;AASLG,MAAAA,wBATK;AAULC,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGlB,QAdH,CADF;AAkBD,CA5CM;AA8CP,OAAO,SAASmB,OAAT,GAAmB;AACxB,SAAOvB,UAAU,CAACE,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport IUser from \"../alias/IUser\";\r\nimport IChangedDataUser from \"../alias/IChangedUserData\";\r\nimport IUserPasswordChange from \"../alias/IUserPasswordChange\";\r\n\r\ninterface IAuthContextData {\r\n  user: IUser;\r\n  setUser(value: IUser): void;\r\n  changedUserData: IChangedDataUser;\r\n  setChangedUserData(value: IChangedDataUser): void;\r\n  changedUserPassword: IUserPasswordChange;\r\n  setChangedUserPassword(value: IUserPasswordChange): void;\r\n  visualNotificationEnabled: boolean;\r\n  setVisualNotificationEnabled(v: boolean): void;\r\n  soundNotificationEnabled: boolean;\r\n  setSoundNotificationEnabled(v: boolean): void;\r\n}\r\n\r\nexport const AuthContext = createContext<IAuthContextData>(\r\n  {} as IAuthContextData\r\n);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUser>({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    status: \"offline\",\r\n  });\r\n  const [changedUserData, setChangedUserData] = useState<IChangedDataUser>({\r\n    email: \"\",\r\n    name: \"\",\r\n  });\r\n  const [\r\n    changedUserPassword,\r\n    setChangedUserPassword,\r\n  ] = useState<IUserPasswordChange>({ oldPassword: \"\", newPassword: \"\" });\r\n  const [visualNotificationEnabled, setVisualNotificationEnabled] = useState(\r\n    localStorage.getItem(\"visualNotificationEnabled\") !== null\r\n      ? localStorage.getItem(\"visualNotificationEnabled\") === \"true\"\r\n      : true\r\n  );\r\n  const [soundNotificationEnabled, setSoundNotificationEnabled] = useState(\r\n    localStorage.getItem(\"soundNotificationEnabled\") !== null\r\n      ? localStorage.getItem(\"visualNotificationEnabled\") === \"true\"\r\n      : true\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        changedUserData,\r\n        setChangedUserData,\r\n        changedUserPassword,\r\n        setChangedUserPassword,\r\n        visualNotificationEnabled,\r\n        setVisualNotificationEnabled,\r\n        soundNotificationEnabled,\r\n        setSoundNotificationEnabled,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}