{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\SelectContactAndGroup.tsx\";\nimport React from \"react\";\nimport { Input, Label } from \"reactstrap\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { SearchContactAndGroup } from \"../helpers/SearchContactAndGroup\";\nimport sortContactAndGroup from \"../helpers/SortContactAndGroup\";\n\nconst SelectContactAndGroup = ({\n  search,\n  handleCheckContactAndGroup\n}) => {\n  const {\n    groups\n  } = useGroup();\n  const {\n    contacts\n  } = useContact();\n  const data = [];\n  contacts.forEach(item => {\n    data.push(item);\n  });\n  groups.forEach(item => {\n    data.push(item);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, sortContactAndGroup(SearchContactAndGroup(data, search)).map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-3 pl-1 font-weight-bold text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, item.group), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled contact-list mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, item.children.map((child, keyChild) => /*#__PURE__*/React.createElement(\"li\", {\n    key: keyChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => handleCheckContactAndGroup(e.target.checked, child),\n    id: \"memberCheck\" + child.jid,\n    value: child.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label d-flex justify-content-between align-items-center\",\n    htmlFor: \"memberCheck\" + child.jid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, child.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, !child.jid.includes(\"@conference.\") ? \"Contato\" : \"Grupo\")))))))));\n};\n\nexport default SelectContactAndGroup;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SelectContactAndGroup.tsx"],"names":["React","Input","Label","useContact","useGroup","SearchContactAndGroup","sortContactAndGroup","SelectContactAndGroup","search","handleCheckContactAndGroup","groups","contacts","data","forEach","item","push","map","key","group","children","child","keyChild","e","target","checked","jid","name","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AAGA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;;AAUA,MAAMC,qBAAuC,GAAG,CAAC;AAC/CC,EAAAA,MAD+C;AAE/CC,EAAAA;AAF+C,CAAD,KAG1C;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAaN,QAAQ,EAA3B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeR,UAAU,EAA/B;AAEA,QAAMS,IAA0B,GAAG,EAAnC;AAEAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,IAAD,IAAU;AACzBF,IAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACD,GAFD;AAIAJ,EAAAA,MAAM,CAACG,OAAP,CAAgBC,IAAD,IAAU;AACvBF,IAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACD,GAFD;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,mBAAmB,CAACD,qBAAqB,CAACO,IAAD,EAAOJ,MAAP,CAAtB,CAAnB,CAAyDQ,GAAzD,CACC,CAACF,IAAD,EAAOG,GAAP,kBACE;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,KADR,CADF,eAKE;AAAI,IAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,QAAL,CAAcH,GAAd,CAAkB,CAACI,KAAD,EAAQC,QAAR,kBACjB;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,QAAQ,EAAGC,CAAD,IACRb,0BAA0B,CAACa,CAAC,CAACC,MAAF,CAASC,OAAV,EAAmBJ,KAAnB,CAJ9B;AAME,IAAA,EAAE,EAAE,gBAAgBA,KAAK,CAACK,GAN5B;AAOE,IAAA,KAAK,EAAEL,KAAK,CAACM,IAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,wEADZ;AAEE,IAAA,OAAO,EAAE,gBAAgBN,KAAK,CAACK,GAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,KAAK,CAACM,IAAZ,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,KAAK,CAACK,GAAN,CAAUE,QAAV,CAAmB,cAAnB,CAAD,GAAqC,SAArC,GAAiD,OADpD,CALF,CAVF,CADF,CADD,CADH,CALF,CAFH,CADH,CADF;AAwCD,CAzDD;;AA2DA,eAAepB,qBAAf","sourcesContent":["import React from \"react\";\r\nimport { Input, Label } from \"reactstrap\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { SearchContactAndGroup } from \"../helpers/SearchContactAndGroup\";\r\nimport sortContactAndGroup from \"../helpers/SortContactAndGroup\";\r\n\r\ninterface IProps {\r\n  search: string;\r\n  handleCheckContactAndGroup(\r\n    selected: boolean,\r\n    contact: (IContact | IGroup)\r\n  ): void;\r\n}\r\n\r\nconst SelectContactAndGroup: React.FC<IProps> = ({\r\n  search,\r\n  handleCheckContactAndGroup,\r\n}) => {\r\n  const { groups } = useGroup();\r\n  const { contacts } = useContact();\r\n\r\n  const data: (IContact| IGroup)[] = [];\r\n\r\n  contacts.forEach((item) => {\r\n    data.push(item);\r\n  });\r\n\r\n  groups.forEach((item) => {\r\n    data.push(item);\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      {sortContactAndGroup(SearchContactAndGroup(data, search)).map(\r\n        (item, key) => (\r\n          <div key={key}>\r\n            <div className=\"ml-3 pl-1 font-weight-bold text-primary\">\r\n              {item.group}\r\n            </div>\r\n\r\n            <ul className=\"list-unstyled contact-list mb-2\">\r\n              {item.children.map((child, keyChild) => (\r\n                <li key={keyChild}>\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) =>\r\n                        handleCheckContactAndGroup(e.target.checked, child)\r\n                      }\r\n                      id={\"memberCheck\" + child.jid}\r\n                      value={child.name}\r\n                    />\r\n                    <Label\r\n                      className=\"custom-control-label d-flex justify-content-between align-items-center\"\r\n                      htmlFor={\"memberCheck\" + child.jid}\r\n                    >\r\n                      <div>{child.name}</div>\r\n                      <div>\r\n                        {!child.jid.includes(\"@conference.\")? \"Contato\" : \"Grupo\"}\r\n                      </div>\r\n                    </Label>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectContactAndGroup;\r\n"]},"metadata":{},"sourceType":"module"}