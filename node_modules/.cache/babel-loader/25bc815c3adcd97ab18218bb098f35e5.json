{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupList.tsx\";\nimport React from \"react\";\nimport { Media, Badge } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\nimport star from \"./../assets/images/ic-star.svg\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleBar from \"simplebar-react\";\n\nconst GroupList = ({\n  recentGroupList\n}) => {\n  const {\n    chats\n  } = useChat();\n  const {\n    openGroup\n  } = useGroup();\n  const {\n    setNewFavorite\n  } = useContact();\n  const {\n    t\n  } = useTranslation();\n\n  const unRead = groupId => {\n    let aux = 0;\n    chats.forEach(item => {\n      if (item.groupId === groupId) {\n        aux = item.unRead;\n      }\n    });\n    return aux;\n  };\n\n  return /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"p-4 chat-message-list chat-group-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled chat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, recentGroupList.map((group, key) => group.favorite && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openGroup(group),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, group.name.trim().toUpperCase().charAt(0)))), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-14 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, group.name.trim(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      position: \"relative\",\n      bottom: 13.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(group);\n    },\n    src: group.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  })), unRead(group.groupId) !== 0 ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"none\",\n    pill: true,\n    className: \"badge-soft-danger float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, unRead(group.groupId) >= 99 ? 99 + \"+\" : unRead(group.groupId)) : null, false\n  /* New Group não utilizado */\n  &&\n  /*#__PURE__*/\n  React.createElement(Badge, {\n    color: \"none\",\n    pill: true,\n    className: \"badge-soft-danger float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, t(\"New\"))))))))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled chat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, recentGroupList.map((group, key) => !group.favorite && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openGroup(group),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, group.name.trim().toUpperCase().charAt(0)))), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-14 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, group.name.trim(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      position: \"relative\",\n      bottom: 13.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(group);\n    },\n    src: group.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  })), unRead(group.groupId) !== 0 ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"none\",\n    pill: true,\n    className: \"badge-soft-danger float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, unRead(group.groupId) >= 99 ? 99 + \"+\" : unRead(group.groupId)) : null, false\n  /* New Group não utilizado */\n  &&\n  /*#__PURE__*/\n  React.createElement(Badge, {\n    color: \"none\",\n    pill: true,\n    className: \"badge-soft-danger float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, t(\"New\"))))))))));\n};\n\nexport default GroupList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupList.tsx"],"names":["React","Media","Badge","Link","useChat","useGroup","useContact","useTranslation","SimpleBar","GroupList","recentGroupList","chats","openGroup","setNewFavorite","t","unRead","groupId","aux","forEach","item","maxHeight","map","group","key","favorite","name","trim","toUpperCase","charAt","display","justifyContent","alignItems","position","bottom","goldenstar","star","right","top"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Media, Badge } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\r\nimport star from \"./../assets/images/ic-star.svg\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport IGroup from \"../alias/IGroup\";\r\n\r\ninterface IPros {\r\n  recentGroupList: IGroup[];\r\n}\r\n\r\nconst GroupList: React.FC<IPros> = ({ recentGroupList }) => {\r\n  const { chats } = useChat();\r\n  const { openGroup } = useGroup();\r\n  const { setNewFavorite } = useContact();\r\n  const { t } = useTranslation();\r\n  const unRead = (groupId: string) => {\r\n    let aux = 0;\r\n    chats.forEach((item) => {\r\n      if (item.groupId === groupId) {\r\n        aux = item.unRead;\r\n      }\r\n    });\r\n    return aux;\r\n  };\r\n\r\n  return (\r\n    <SimpleBar\r\n      style={{ maxHeight: \"100%\" }}\r\n      className=\"p-4 chat-message-list chat-group-list\"\r\n    >\r\n      <ul className=\"list-unstyled chat-list\">\r\n        {recentGroupList.map((group, key) => (\r\n          group.favorite &&\r\n          <li key={key}>\r\n            <Link to=\"#\" onClick={() => openGroup(group)}>\r\n              <Media className=\"align-items-center\">\r\n                <div className=\"chat-user-img mr-3\">\r\n                  <div className=\"avatar-xs\">\r\n                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                      {group.name.trim().toUpperCase().charAt(0)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <Media body className=\"overflow-hidden\">\r\n                  <h5 className=\"text-truncate font-size-14 mb-0\">\r\n                    {group.name.trim()}\r\n                    \r\n                    <div style={{display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"flex-end\",\r\n                    position: \"relative\",\r\n                    bottom: 13.5\r\n                    }}>\r\n                    {<img alt=\"star\" onClick=\r\n                        {() =>\r\n                          {\r\n                          setNewFavorite(group);\r\n                          }\r\n                        }\r\n                        src={group.favorite ? goldenstar : star} style={{position: \"relative\", right: 2, top: 2}}\r\n                    />}\r\n                    </div>\r\n                    \r\n                    \r\n                    {unRead(group.groupId) !== 0 ? (\r\n                      <Badge\r\n                        color=\"none\"\r\n                        pill\r\n                        className=\"badge-soft-danger float-right\"\r\n                      >\r\n                        {unRead(group.groupId) >= 99\r\n                          ? 99 + \"+\"\r\n                          : unRead(group.groupId)}\r\n                      </Badge>\r\n                    ) : null}\r\n\r\n                    {false /* New Group não utilizado */ && (\r\n                      <Badge\r\n                        color=\"none\"\r\n                        pill\r\n                        className=\"badge-soft-danger float-right\"\r\n                      >\r\n                        {t(\"New\")}\r\n                      </Badge>\r\n                    )}\r\n                  </h5>\r\n                </Media>\r\n              </Media>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"list-unstyled chat-list\">\r\n        {recentGroupList.map((group, key) => (\r\n          !group.favorite &&\r\n          <li key={key}>\r\n            <Link to=\"#\" onClick={() => openGroup(group)}>\r\n              <Media className=\"align-items-center\">\r\n                <div className=\"chat-user-img mr-3\">\r\n                  <div className=\"avatar-xs\">\r\n                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                      {group.name.trim().toUpperCase().charAt(0)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <Media body className=\"overflow-hidden\">\r\n                  <h5 className=\"text-truncate font-size-14 mb-0\">\r\n                    {group.name.trim()}\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-end\",\r\n                        alignItems: \"flex-end\",\r\n                        position: \"relative\",\r\n                        bottom: 13.5,\r\n                      }}\r\n                    >\r\n                      {\r\n                        <img\r\n                          alt=\"star\"\r\n                          onClick={() => {\r\n                            setNewFavorite(group);\r\n                          }}\r\n                          src={group.favorite ? goldenstar : star}\r\n                          style={{ position: \"relative\", right: 2, top: 2 }}\r\n                        />\r\n                      }\r\n                    </div>\r\n\r\n                    {unRead(group.groupId) !== 0 ? (\r\n                      <Badge\r\n                        color=\"none\"\r\n                        pill\r\n                        className=\"badge-soft-danger float-right\"\r\n                      >\r\n                        {unRead(group.groupId) >= 99\r\n                          ? 99 + \"+\"\r\n                          : unRead(group.groupId)}\r\n                      </Badge>\r\n                    ) : null}\r\n\r\n                    {false /* New Group não utilizado */ && (\r\n                      <Badge\r\n                        color=\"none\"\r\n                        pill\r\n                        className=\"badge-soft-danger float-right\"\r\n                      >\r\n                        {t(\"New\")}\r\n                      </Badge>\r\n                    )}\r\n                  </h5>\r\n                </Media>\r\n              </Media>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </SimpleBar>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n"]},"metadata":{},"sourceType":"module"}