{"ast":null,"code":"export var Events;(function(Events){Events[\"ONLINE\"]=\"online\";Events[\"OFFLINE\"]=\"offline\";Events[\"MESSAGE\"]=\"message\";Events[\"ERROR\"]=\"error\";Events[\"PRESENCE\"]=\"presence\";Events[\"STANZA\"]=\"stanza\";Events[\"RECEIVED\"]=\"received\";Events[\"DISPLAYED\"]=\"displayed\";Events[\"COMPOSING\"]=\"composing\";Events[\"ACTIVE\"]=\"active\";Events[\"SEND_EVENT\"]=\"send_event\";Events[\"JOIN_ROOM\"]=\"join_room\";})(Events||(Events={}));export var ChatType;(function(ChatType){ChatType[\"CHAT\"]=\"chat\";ChatType[\"GROUPCHAT\"]=\"groupchat\";})(ChatType||(ChatType={}));","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/chat/types/types.ts"],"names":["Events","ChatType"],"mappings":"AAAA,UAAYA,CAAAA,MAAZ,C,UAAYA,M,EAAAA,M,oBAAAA,M,sBAAAA,M,sBAAAA,M,kBAAAA,M,wBAAAA,M,oBAAAA,M,wBAAAA,M,0BAAAA,M,0BAAAA,M,oBAAAA,M,4BAAAA,M,6BAAAA,M,GAAAA,M,MAeZ,UAAYC,CAAAA,QAAZ,C,UAAYA,Q,EAAAA,Q,gBAAAA,Q,6BAAAA,Q,GAAAA,Q","sourcesContent":["export enum Events {\r\n  ONLINE = \"online\",\r\n  OFFLINE = \"offline\",\r\n  MESSAGE = \"message\",\r\n  ERROR = \"error\",\r\n  PRESENCE = \"presence\",\r\n  STANZA = \"stanza\",\r\n  RECEIVED = \"received\",\r\n  DISPLAYED = \"displayed\",\r\n  COMPOSING = \"composing\",\r\n  ACTIVE = \"active\",\r\n  SEND_EVENT = \"send_event\",\r\n  JOIN_ROOM = \"join_room\"\r\n}\r\n\r\nexport enum ChatType {\r\n  CHAT = \"chat\",\r\n  GROUPCHAT = \"groupchat\",\r\n}\r\nexport interface ConnectionOptions {\r\n  service: string;\r\n  domain?: string;\r\n  resource: string;\r\n  username: string;\r\n  password?: string;\r\n}\r\nexport interface Presence {\r\n  id: string;\r\n  from: string;\r\n  time: string;\r\n  status: string;\r\n}\r\nexport interface Message {\r\n  id: string;\r\n  to: string;\r\n  from: string;\r\n  sent_at: string;\r\n  type: string;\r\n  message: string;\r\n  reply_to: string | undefined;\r\n  reply_msg: string | undefined;\r\n  reply_msg_id: string | undefined;\r\n  eventId?: number;\r\n  eventBody?: string;\r\n}\r\nexport interface FileMessage extends Message {\r\n  fileUrl: string;\r\n}\r\nexport interface SendingFile {\r\n  firstStepId?: string;\r\n  secondStepId?: string;\r\n  file: File;\r\n  to: string;\r\n  callback: SendImageCallback;\r\n  chatType: ChatType;\r\n}\r\nexport interface SendImageCallbackReturn {\r\n  url: string;\r\n  msgId: string;\r\n}\r\nexport interface SendImageCallback {\r\n  (data: SendImageCallbackReturn | string, error?: boolean): void;\r\n}\r\nexport interface OnlineCallback {\r\n  (): void;\r\n}\r\nexport interface OfflineCallback {\r\n  (): void;\r\n}\r\nexport interface EventCallback {\r\n  (msg: Message): void;\r\n}\r\nexport interface MessageCallback {\r\n  (msg: Message | FileMessage): void;\r\n}\r\nexport interface StanzaCallback {\r\n  (stanza: any): void;\r\n}\r\nexport interface PresenceCallback {\r\n  (presence: Presence): void;\r\n}\r\nexport interface ErrorCallback {\r\n  (error: any): void;\r\n}\r\nexport interface SendMessageCallback {\r\n  (msgId: string): void;\r\n}\r\nexport interface ReceivedCallback {\r\n  (msgId: string): void;\r\n}\r\nexport interface DisplayedCallback {\r\n  (msgId: string): void;\r\n}\r\nexport interface ComposingCallback {\r\n  (fromUser: string): void;\r\n}\r\nexport interface ActiveCallback {\r\n  (fromUser: string): void;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}