{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatProfileSidebar.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport ModalAddMember from \"./ModalAddMember\";\nimport { Input } from \"@material-ui/core\";\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\nimport LeaveGroupButton from \"./LeaveGroupButton\";\nimport InfoHeadOnSidebar from \"./InfoHeadOnSidebar\";\nimport MembersOnSidebar from \"./MembersOnSidebar\";\nimport { useTranslation } from \"react-i18next\";\nimport Swal from \"sweetalert2\";\nimport { ModalEditConference } from \"./ModalEditConference\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport ChatType from \"../enuns/ChatType\";\n\nconst ChatProfileSidebar = ({\n  show,\n  setShow\n}) => {\n  var _activeChat$members, _activeChat$members2, _activeChat$members3;\n\n  const {\n    t\n  } = useTranslation();\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const [newGroupName, setGroupName] = useState(\"\");\n  const {\n    user\n  } = useAuth();\n  const {\n    activeChat,\n    chats,\n    setChats,\n    setActiveChat\n  } = useChat();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    setShowModalAddMember\n  } = useModal();\n  const [showModal, setShowModal] = useState(false);\n  const {\n    setConferenceToRemove,\n    conferenceList\n  } = useConference();\n\n  const toggleCollapse1 = () => {\n    setIsOpen1(!isOpen1);\n  };\n\n  const toggleCollapse2 = () => {\n    setIsOpen2(!isOpen2);\n  };\n\n  const closeUserSidebar = () => {\n    setShow(false);\n  };\n\n  const getAttachedFiles = () => {\n    if (show && activeChat.attachedFileList === undefined) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: []\n      });\n    } else if (!show) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAttachedFiles(); // eslint-disable-next-line\n\n    setShowModal(false); // eslint-disable-next-line\n  }, [show]);\n\n  const closeUserSidebarOnActiveChatChange = () => {\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\n  };\n\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\n  const actualMember = (_activeChat$members = activeChat.members) === null || _activeChat$members === void 0 ? void 0 : _activeChat$members.find(member => member.userId === user.id);\n  const isAdmin = (actualMember === null || actualMember === void 0 ? void 0 : actualMember.role) === \"admin\"; //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\n\n  const actualMembers = (_activeChat$members2 = activeChat.members) === null || _activeChat$members2 === void 0 ? void 0 : _activeChat$members2.map(mb => {\n    return mb.userId;\n  });\n  const isGroup = activeChat.groupId;\n  const membersArrayPreventingDuplicateDisplayMember = activeChat.chatType === ChatType.GROUP ? (_activeChat$members3 = activeChat.members) === null || _activeChat$members3 === void 0 ? void 0 : _activeChat$members3.filter((item, index, arrayCompleto) => arrayCompleto.findIndex(item2 => item.userId === item2.userId) === index) : activeChat.conferenceRoomParticipants;\n\n  function swDelete() {\n    Swal.fire({\n      title: t(`Do you want to delete the group '${activeChat.name}' ?`),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: t(\"Yes\"),\n      cancelButtonText: t(\"No\"),\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        const conferenceData = conferenceList.find(conference => conference.jid === activeChat.jid);\n        if (conferenceData) setConferenceToRemove(conferenceData);\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: t(\"Deleted!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalEditConference, {\n    show: showModal,\n    toggle: () => setShowModal(!showModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: show ? \"block\" : \"none\"\n    },\n    className: \"user-profile-sidebar \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, isGroup && isAdmin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    className: \"nav-btn\",\n    onClick: () => setShowModalAddMember(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(ModalAddMember, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(LeaveGroupButton, {\n    activeChat: activeChat,\n    actualMember: actualMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    onClick: closeUserSidebar,\n    className: \"nav-btn\",\n    id: \"user-profile-hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center px-4 pt-4 pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, !activeChat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, activeChat.name.trim().charAt(0))) : /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: activeChat.profilePicture,\n    onError: () => {\n      if (activeChat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, activeChat);\n    },\n    fallbackImage: defaultAvatar,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, isGroup ? /*#__PURE__*/React.createElement(Input, {\n    inputProps: {\n      min: 0,\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    placeholder: activeChat.name,\n    disableUnderline: true,\n    fullWidth: true,\n    onChange: e => setGroupName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, activeChat.name)), isGroup && newGroupName.length > 0 ? /*#__PURE__*/React.createElement(ChangeGroupNameButton, {\n    newGroupName: newGroupName,\n    setGroupName: setGroupName,\n    actualMembers: actualMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }) : isGroup && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 24\n    }\n  }), activeChat.status && /*#__PURE__*/React.createElement(UserStatusOnProfileSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"px-4 py-2 user-profile-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-user-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoHeadOnSidebar, {\n    activeChat: activeChat,\n    toggleCollapse1: toggleCollapse1,\n    isOpen1: isOpen1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), activeChat.jid.includes(\"@conference.\") && /*#__PURE__*/React.createElement(MembersOnSidebar, {\n    isAdmin: isAdmin,\n    isOpen2: isOpen2,\n    defaultAvatar: defaultAvatar,\n    toggleCollapse2: toggleCollapse2,\n    membersArrayPreventingDuplicateDisplayMember: membersArrayPreventingDuplicateDisplayMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AttachedFilesOnSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), activeChat.chatType === ChatType.CONFERENCE && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block\",\n    onClick: swDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }), t(\"Add participants\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    onClick: swDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, t(\"Delete conference\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, t(\"Edit conference\")))))))));\n};\n\nexport default ChatProfileSidebar;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatProfileSidebar.tsx"],"names":["React","useEffect","useState","Button","SimpleBar","useChat","AttachedFilesOnSidebar","ReactImageFallback","defaultAvatar","onImgError","useGroup","useContact","useAuth","useModal","ModalAddMember","Input","UserStatusOnProfileSidebar","ChangeGroupNameButton","LeaveGroupButton","InfoHeadOnSidebar","MembersOnSidebar","useTranslation","Swal","ModalEditConference","useConference","ChatType","ChatProfileSidebar","show","setShow","t","isOpen1","setIsOpen1","isOpen2","setIsOpen2","newGroupName","setGroupName","user","activeChat","chats","setChats","setActiveChat","groups","setGroups","contacts","setContacts","setShowModalAddMember","showModal","setShowModal","setConferenceToRemove","conferenceList","toggleCollapse1","toggleCollapse2","closeUserSidebar","getAttachedFiles","attachedFileList","undefined","closeUserSidebarOnActiveChatChange","actualMember","members","find","member","userId","id","isAdmin","role","actualMembers","map","mb","isGroup","groupId","membersArrayPreventingDuplicateDisplayMember","chatType","GROUP","filter","item","index","arrayCompleto","findIndex","item2","conferenceRoomParticipants","swDelete","fire","title","name","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","popup","then","result","isConfirmed","conferenceData","conference","jid","position","showConfirmButton","timer","display","justifyContent","profilePicture","trim","charAt","includes","min","style","textAlign","e","target","value","length","status","maxHeight","CONFERENCE","flexDirection","justifyItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport ModalAddMember from \"./ModalAddMember\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\r\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\r\nimport LeaveGroupButton from \"./LeaveGroupButton\";\r\nimport InfoHeadOnSidebar from \"./InfoHeadOnSidebar\";\r\nimport MembersOnSidebar from \"./MembersOnSidebar\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ModalEditConference } from \"./ModalEditConference\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport ChatType from \"../enuns/ChatType\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n}\r\n\r\nconst ChatProfileSidebar: React.FC<IProps> = ({ show, setShow }) => {\r\n  const { t } = useTranslation();\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const [newGroupName, setGroupName] = useState(\"\");\r\n  const { user } = useAuth();\r\n  const { activeChat, chats, setChats, setActiveChat } = useChat();\r\n  const { groups, setGroups } = useGroup();\r\n  const { contacts, setContacts } = useContact();\r\n  const { setShowModalAddMember } = useModal();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { setConferenceToRemove, conferenceList } = useConference();\r\n  const toggleCollapse1 = () => {\r\n    setIsOpen1(!isOpen1);\r\n  };\r\n\r\n  const toggleCollapse2 = () => {\r\n    setIsOpen2(!isOpen2);\r\n  };\r\n\r\n  const closeUserSidebar = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const getAttachedFiles = () => {\r\n    if (show && activeChat.attachedFileList === undefined) {\r\n      setActiveChat({ ...activeChat, attachedFileList: [] });\r\n    } else if (!show) {\r\n      setActiveChat({ ...activeChat, attachedFileList: undefined });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAttachedFiles(); // eslint-disable-next-line\r\n    setShowModal(false); // eslint-disable-next-line\r\n  }, [show]);\r\n\r\n  const closeUserSidebarOnActiveChatChange = () => {\r\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\r\n  };\r\n\r\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\r\n  const actualMember = activeChat.members?.find(\r\n    (member) => member.userId === user.id\r\n  );\r\n\r\n  const isAdmin = actualMember?.role === \"admin\";\r\n  //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\r\n  const actualMembers = activeChat.members?.map((mb) => {\r\n    return mb.userId;\r\n  });\r\n\r\n  const isGroup = activeChat.groupId;\r\n\r\n  const membersArrayPreventingDuplicateDisplayMember =\r\n    activeChat.chatType === ChatType.GROUP\r\n      ? activeChat.members?.filter(\r\n          (item, index, arrayCompleto) =>\r\n            arrayCompleto.findIndex((item2) => item.userId === item2.userId) ===\r\n            index\r\n        )\r\n      : activeChat.conferenceRoomParticipants;\r\n\r\n  function swDelete() {\r\n    Swal.fire({\r\n      title: t(`Do you want to delete the group '${activeChat.name}' ?`),\r\n      text: \"\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: t(\"Yes\"),\r\n      cancelButtonText: t(\"No\"),\r\n      customClass: {\r\n        popup: \"swal-mini-popup\",\r\n      },\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const conferenceData = conferenceList.find(\r\n          (conference) => conference.jid === activeChat.jid\r\n        );\r\n        if (conferenceData) setConferenceToRemove(conferenceData);\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: t(\"Deleted!\"),\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n          customClass: {\r\n            popup: \"swal-mini-popup\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ModalEditConference\r\n        show={showModal}\r\n        toggle={() => setShowModal(!showModal)}\r\n      />\r\n      <div\r\n        style={{ display: show ? \"block\" : \"none\" }}\r\n        className=\"user-profile-sidebar \"\r\n      >\r\n        <div className=\"d-flex\" style={{ justifyContent: \"center\" }}>\r\n          {isGroup && isAdmin && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  className=\"nav-btn\"\r\n                  onClick={() => setShowModalAddMember(true)}\r\n                >\r\n                  <i className=\"ri-user-add-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <ModalAddMember />\r\n          {isGroup && (\r\n            <LeaveGroupButton\r\n              activeChat={activeChat}\r\n              actualMember={actualMember}\r\n            />\r\n          )}\r\n          {isGroup && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  onClick={closeUserSidebar}\r\n                  className=\"nav-btn\"\r\n                  id=\"user-profile-hide\"\r\n                >\r\n                  <i className=\"ri-close-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"text-center px-4 pt-4 pb-3\">\r\n          <div className=\"mb-4 d-flex justify-content-center\">\r\n            {!activeChat.profilePicture ? (\r\n              <div className=\"avatar-lg\">\r\n                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\">\r\n                  {activeChat.name.trim().charAt(0)}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <ReactImageFallback\r\n                src={activeChat.profilePicture}\r\n                onError={() => {\r\n                  if (activeChat.jid.includes(\"@conference.\"))\r\n                    onImgError(\r\n                      chats,\r\n                      groups,\r\n                      contacts,\r\n                      setChats,\r\n                      setGroups,\r\n                      setContacts,\r\n                      activeChat\r\n                    );\r\n                }}\r\n                fallbackImage={defaultAvatar}\r\n                className=\"rounded-circle avatar-lg img-thumbnail\"\r\n                alt=\"chatvia\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            {isGroup ? (\r\n              <Input\r\n                inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                placeholder={activeChat.name}\r\n                disableUnderline\r\n                fullWidth\r\n                onChange={(e) => setGroupName(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{activeChat.name}</div>\r\n            )}\r\n          </div>\r\n          {isGroup && newGroupName.length > 0 ? (\r\n            <ChangeGroupNameButton\r\n              newGroupName={newGroupName}\r\n              setGroupName={setGroupName}\r\n              actualMembers={actualMembers}\r\n            />\r\n          ) : (\r\n            isGroup && <i className=\"ri-edit-line\"></i>\r\n          )}\r\n          {activeChat.status && <UserStatusOnProfileSidebar />}\r\n        </div>\r\n        <SimpleBar\r\n          style={{ maxHeight: \"100%\" }}\r\n          className=\"px-4 py-2 user-profile-desc\"\r\n        >\r\n          <div id=\"profile-user-accordion\" className=\"custom-accordion\">\r\n            <InfoHeadOnSidebar\r\n              activeChat={activeChat}\r\n              toggleCollapse1={toggleCollapse1}\r\n              isOpen1={isOpen1}\r\n            />\r\n\r\n            {activeChat.jid.includes(\"@conference.\") && (\r\n              <MembersOnSidebar\r\n                isAdmin={isAdmin}\r\n                isOpen2={isOpen2}\r\n                defaultAvatar={defaultAvatar}\r\n                toggleCollapse2={toggleCollapse2}\r\n                membersArrayPreventingDuplicateDisplayMember={\r\n                  membersArrayPreventingDuplicateDisplayMember\r\n                }\r\n              />\r\n            )}\r\n\r\n            <AttachedFilesOnSidebar />\r\n\r\n            {activeChat.chatType === ChatType.CONFERENCE && (\r\n              <>\r\n\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-success btn-block\"\r\n                    onClick={swDelete}\r\n                  > \r\n                    \r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyItems: 'center'}}>\r\n                      <i className=\"ri-add-line\"/>\r\n                      {t(\"Add participants\")}\r\n                    </div>\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-danger btn-block\"\r\n                    onClick={swDelete}\r\n                  > \r\n                    <div>{t(\"Delete conference\")}</div>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    onClick={() => setShowModal(true)}\r\n                  >\r\n                    <div>{t(\"Edit conference\")}</div>\r\n                  </button>\r\n                </div>\r\n                \r\n              </>\r\n            )}\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatProfileSidebar;\r\n"]},"metadata":{},"sourceType":"module"}