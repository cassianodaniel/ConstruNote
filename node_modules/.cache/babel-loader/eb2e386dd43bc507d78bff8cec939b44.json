{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalNewConference.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport SelectContact from \"./SelectContact\";\nimport { useTranslation } from \"react-i18next\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport EmailList from \"./EmailList\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport { getAllTimeDay, today } from '../helpers/DateEasy';\nexport const ModalNewConference = ({\n  show,\n  toggle\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    contacts\n  } = useContact();\n  const {\n    setCreateConference\n  } = useConference();\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startDate, setStartDate] = useState(today().date);\n  const [startTime, setStartTime] = useState(today().time);\n  const [duration, setDuration] = useState(\"01:00\");\n  const [mdCheck, setMdCheck] = useState(false);\n  const [selectedContact, setSelectedContact] = useState([]);\n  const [emailList, setEmailList] = useState([]);\n  const [parsedDate, setParsedDate] = useState(new Date().toISOString());\n  const [flagWrongStartTime, setFlagWrongStartTime] = useState(false);\n\n  var DatePicker = require(\"reactstrap-date-picker\");\n\n  const inputName = useRef(null);\n\n  const refreshTime = () => {\n    setTime(today().time);\n  };\n\n  const handleCalendarChange = e => {\n    if (e) {\n      let year = e.split('-')[0];\n      let month = e.split('-')[1];\n      let day = e.split('-')[2].slice(0, 2);\n      setParsedDate(year + '-' + month + '-' + day + 'T12:00:00.000Z');\n      setStartDate(year + '-' + month + '-' + day);\n      setStartTime(today().time);\n    }\n  };\n\n  const handleCreateGroup = () => {\n    setCreateConference({\n      name,\n      description,\n      startDate,\n      startTime,\n      duration,\n      mdCheck,\n      selectedContact,\n      emailList\n    });\n    setIsOpenAlert(true);\n    setMessage(\"Criando conferÃªncia...\");\n    setTimeout(() => {\n      setIsOpenAlert(false);\n      setMessage(\"\");\n      setSearch(\"\");\n      setName(\"\");\n      setDescription(\"\");\n      setStartDate(today().date);\n      setStartTime(today().time);\n      setDuration(\"01:00\");\n      setMdCheck(false);\n      setSelectedContact([]);\n      setEmailList([]);\n    }, 3000);\n    toggle();\n  };\n\n  const closeAndCleanData = () => {\n    setMessage(\"\");\n    setSearch(\"\");\n    setName(\"\");\n    setDescription(\"\");\n    setStartDate(today().date);\n    setStartTime(today().time);\n    setDuration(\"01:00\");\n    setMdCheck(false);\n    setSelectedContact([]);\n    setEmailList([]);\n    toggle();\n  };\n\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      setSelectedContact([...selectedContact, contact]);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.id === contact.id) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const updatedTime = () => {\n    setTime(startTime);\n  };\n\n  useEffect(updatedTime, [startDate]);\n  useEffect(refreshTime, [show]);\n\n  const setTime = value => {\n    let time = value.split(\":\");\n    let currentTime = today().time.split(\":\");\n\n    if (startDate === today().date) {\n      if (parseInt(time[0]) < parseInt(currentTime[0])) {\n        setFlagWrongStartTime(true);\n        return;\n      } else {\n        setFlagWrongStartTime(false);\n        setStartTime(value);\n      }\n\n      if (parseInt(time[0]) === parseInt(currentTime[0]) && parseInt(time[1]) < parseInt(currentTime[1])) {\n        setFlagWrongStartTime(true);\n        return;\n      } else {\n        setFlagWrongStartTime(false);\n        setStartTime(value);\n      }\n    } else {\n      setFlagWrongStartTime(false);\n      setStartTime(value);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      var _inputName$current;\n\n      return (_inputName$current = inputName.current) === null || _inputName$current === void 0 ? void 0 : _inputName$current.focus();\n    }, 500);\n  }, [show]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: show,\n    size: \"lg\",\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    tag: \"h5\",\n    className: \"modal-title font-size-16\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, t(\"Create conference\")), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, t(\"Room name\")), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputName,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name-input\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: t(\"Room name\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }), name === \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, t(\"The field is required\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, t(\"Room description\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description-input\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: t(\"Room description\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"date-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, t(\"Starting date\")), /*#__PURE__*/React.createElement(DatePicker, {\n    id: \"example-datepicker\",\n    onChange: e => handleCalendarChange(e),\n    minDate: new Date().toISOString(),\n    value: parsedDate,\n    showClearButton: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"time-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, t(\"Starting time\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: startTime,\n    onChange: e => setTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, today().time), getAllTimeDay().map((time, i) => {\n    let hiddenOption = true;\n\n    if (startDate === today().date) {\n      let hh = parseInt(time.split(\":\")[0]);\n      let mm = parseInt(time.split(\":\")[1]);\n      let hhc = parseInt(today().time.split(\":\")[0]);\n      let mmc = parseInt(today().time.split(\":\")[1]);\n\n      if (hhc < hh) {\n        hiddenOption = false;\n      } else if (hhc === hh) {\n        if (mmc < mm) {\n          hiddenOption = false;\n        }\n      }\n    } else {\n      hiddenOption = false;\n    }\n\n    if (!hiddenOption) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i + Math.random(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 27\n        }\n      }, time);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  })), flagWrongStartTime === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, t(\"Invalid time\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"duration-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, t(\"Duration\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    className: \"form-control\",\n    id: \"date-end-input\",\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => {\n      setMdCheck(e.target.checked);\n    },\n    id: \"mdCheck\",\n    value: mdCheck ? 1 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label\",\n    htmlFor: \"mdCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, t(\"Wait for call administrator to start\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, t(\"Conference Members\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    id: \"search-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"320px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SelectContact, {\n    handleCheckContact: handleCheckContact,\n    contacts: contacts,\n    search: search,\n    checkedContacts: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, t(\"External participants\")), /*#__PURE__*/React.createElement(EmailList, {\n    emailList: emailList,\n    setEmailList: setEmailList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Alert, {\n    isOpen: isOpenAlert,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, message)), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"link\",\n    onClick: closeAndCleanData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, t(\"Close\")), name !== \"\" && flagWrongStartTime === false ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: handleCreateGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, t(\"Create conference\")) : /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, t(\"Create conference\"))));\n};\n/* https://app.citrussquad.com/api/v1/read?authUser=698dbe5b-bf91-2a34-fc87-63883c91a94f@test.citrussquad.com&between=11d3a709-8c53-0392-0149-3a3a0e0eeaae@test.citrussquad.com&id=0eb03fc3-4b69-4d5d-a330-ddd63df32541&chatType=chat */","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalNewConference.tsx"],"names":["React","useState","useEffect","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","Alert","SimpleBar","SelectContact","useTranslation","useContact","EmailList","useConference","getAllTimeDay","today","ModalNewConference","show","toggle","t","contacts","setCreateConference","isOpenAlert","setIsOpenAlert","search","setSearch","message","setMessage","name","setName","description","setDescription","startDate","setStartDate","date","startTime","setStartTime","time","duration","setDuration","mdCheck","setMdCheck","selectedContact","setSelectedContact","emailList","setEmailList","parsedDate","setParsedDate","Date","toISOString","flagWrongStartTime","setFlagWrongStartTime","DatePicker","require","inputName","refreshTime","setTime","handleCalendarChange","e","year","split","month","day","slice","handleCreateGroup","setTimeout","closeAndCleanData","handleCheckContact","selected","contact","filter","sel","id","updatedTime","value","currentTime","parseInt","current","focus","target","color","map","i","hiddenOption","hh","mm","hhc","mmc","Math","random","checked","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport SimpleBar from \"simplebar-react\";\r\nimport SelectContact from \"./SelectContact\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport EmailList from \"./EmailList\";\r\nimport IEmailList from \"../alias/IEmailList\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport { getAllTimeDay, today } from '../helpers/DateEasy';\r\nimport { time } from \"console\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nexport const ModalNewConference: React.FC<IProps> = ({ show, toggle }) => {\r\n  const { t } = useTranslation();\r\n  const { contacts } = useContact();\r\n  const { setCreateConference } = useConference();\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [startDate, setStartDate] = useState<string>(today().date);\r\n  const [startTime, setStartTime] = useState<string>(today().time);\r\n  const [duration, setDuration] = useState<string>(\"01:00\");\r\n  const [mdCheck, setMdCheck] = useState<boolean>(false);\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n  const [emailList, setEmailList] = useState<IEmailList[]>([]);\r\n  const [parsedDate, setParsedDate] = useState(new Date().toISOString());\r\n  const [flagWrongStartTime, setFlagWrongStartTime] = useState<boolean>(false);\r\n  var DatePicker = require(\"reactstrap-date-picker\");\r\n  const inputName = useRef<HTMLInputElement>(null);\r\n\r\n  const refreshTime = () => {\r\n    setTime(today().time);\r\n  }\r\n\r\n  const handleCalendarChange = (e: string) => {\r\n    if(e){\r\n      let year = e.split('-')[0];\r\n      let month = e.split('-')[1];\r\n      let day = e.split('-')[2].slice(0,2);\r\n      setParsedDate(year+'-'+month+'-'+day+'T12:00:00.000Z');\r\n      setStartDate(year+'-'+month+'-'+day);\r\n      setStartTime(today().time);\r\n    }\r\n  }\r\n  \r\n  const handleCreateGroup = () => {\r\n    setCreateConference({\r\n      name,\r\n      description,\r\n      startDate,\r\n      startTime,\r\n      duration,\r\n      mdCheck,\r\n      selectedContact,\r\n      emailList,\r\n    });\r\n    \r\n    \r\n    setIsOpenAlert(true);\r\n    setMessage(\"Criando conferÃªncia...\");\r\n    \r\n    setTimeout(() => {\r\n      setIsOpenAlert(false);\r\n      setMessage(\"\");\r\n      setSearch(\"\");\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      setStartDate(today().date);\r\n      setStartTime(today().time);\r\n      setDuration(\"01:00\");\r\n      setMdCheck(false);\r\n      setSelectedContact([]);\r\n      setEmailList([]);\r\n    }, 3000);\r\n    toggle();\r\n  };\r\n  \r\n  const closeAndCleanData = () => {\r\n    setMessage(\"\");\r\n    setSearch(\"\");\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStartDate(today().date);\r\n    setStartTime(today().time);\r\n    setDuration(\"01:00\");\r\n    setMdCheck(false);\r\n    setSelectedContact([]);\r\n    setEmailList([]);\r\n    toggle();\r\n  }\r\n  \r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setSelectedContact([...selectedContact, contact]);\r\n    } else {\r\n    setSelectedContact(\r\n      selectedContact.filter((sel) => {\r\n        if (sel.id === contact.id) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      );\r\n    }\r\n  };\r\n    \r\n  const updatedTime = () => {\r\n    setTime(startTime);\r\n  };\r\n  \r\n  useEffect(updatedTime, [startDate]);\r\n  useEffect(refreshTime, [show]);\r\n    \r\n  const setTime = (value: string) => {\r\n      let time = value.split(\":\");\r\n      let currentTime = today().time.split(\":\");\r\n      if (startDate === today().date) {\r\n        if(parseInt(time[0]) < parseInt(currentTime[0])) {\r\n          setFlagWrongStartTime(true);\r\n          return;\r\n        }else{\r\n          setFlagWrongStartTime(false);\r\n        setStartTime(value);\r\n      }\r\n\r\n      if(\r\n        parseInt(time[0]) === parseInt(currentTime[0]) &&\r\n        parseInt(time[1]) < parseInt(currentTime[1])\r\n      ){\r\n        setFlagWrongStartTime(true);\r\n        return;\r\n      }else{\r\n        setFlagWrongStartTime(false);\r\n        setStartTime(value);\r\n      }\r\n    }else{\r\n      setFlagWrongStartTime(false);\r\n      setStartTime(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputName.current?.focus(), 500);\r\n  }, [show]);\r\n  \r\n  return (\r\n    <Modal isOpen={show} size=\"lg\" centered toggle={toggle}>\r\n      <ModalHeader\r\n        tag=\"h5\"\r\n        className=\"modal-title font-size-16\"\r\n        toggle={toggle}\r\n      >\r\n        {t(\"Create conference\")}\r\n      </ModalHeader>\r\n      <ModalBody className=\"p-4\">\r\n        <Form>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"name-input\">{t(\"Room name\")}</Label>\r\n                <input\r\n                  ref={inputName}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name-input\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder={t(\"Room name\") + \"...\"}\r\n                />\r\n                {name === \"\" &&\r\n                  <div className={\"mt-2\"} style={{\r\n                  color: \"red\",\r\n                }}>{t(\"The field is required\")}</div>}\r\n              </FormGroup>\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"description-input\">\r\n                  {t(\"Room description\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description-input\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  placeholder={t(\"Room description\") + \"...\"}\r\n                />\r\n              </FormGroup>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"date-start-input\">{t(\"Starting date\")}</Label>\r\n                  <DatePicker\r\n                    id=\"example-datepicker\" \r\n                    onChange={(e: any) => handleCalendarChange(e)}\r\n                    minDate={new Date().toISOString()}\r\n                    value={parsedDate}\r\n                    showClearButton={false}\r\n                    />\r\n                  </FormGroup>\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"time-start-input\">{t(\"Starting time\")}</Label>\r\n                  <select className=\"form-control\" \r\n                  value={startTime} onChange={(e) => setTime(e.target.value)}>\r\n                    <option>{today().time}</option>\r\n                    {getAllTimeDay().map((time, i) => {\r\n                      let hiddenOption = true;\r\n                      if(startDate === today().date){\r\n                        let hh = parseInt(time.split(\":\")[0]);\r\n                        let mm = parseInt(time.split(\":\")[1]);\r\n                        let hhc = parseInt(today().time.split(\":\")[0]);\r\n                        let mmc = parseInt(today().time.split(\":\")[1]);\r\n                        if (hhc < hh) {\r\n                          hiddenOption = false;\r\n                        } else if (hhc === hh) {\r\n                          if (mmc < mm) {\r\n                            hiddenOption = false;\r\n                          }\r\n                        }\r\n                      }else{\r\n                        hiddenOption = false;\r\n                      }\r\n                      if(!hiddenOption){\r\n                        return (\r\n                          <option key={i + Math.random()}>\r\n                            {time}\r\n                          </option>\r\n                        );\r\n                      } \r\n                      return<></>\r\n                    })}\r\n                  </select>\r\n                  {flagWrongStartTime === true &&\r\n                  <div className={\"mt-2\"} style={{\r\n                    color: \"red\",\r\n                  }}>{t(\"Invalid time\")}</div>}\r\n                </FormGroup>\r\n                <div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-12\">\r\n                  <Label htmlFor=\"duration-input\">{t(\"Duration\")}</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"date-end-input\"\r\n                    value={duration}\r\n                    onChange={(e) => setDuration(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-4 col-12\">\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) => {\r\n                        setMdCheck(e.target.checked);\r\n                      }}\r\n                      id={\"mdCheck\"}\r\n                      value={mdCheck ? 1 : 0}\r\n                    />\r\n                    <Label className=\"custom-control-label\" htmlFor={\"mdCheck\"}>\r\n                      {t(\"Wait for call administrator to start\")}\r\n                    </Label>\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"search-input\">{t(\"Conference Members\")}</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control mb-2\"\r\n                  id=\"search-input\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  placeholder={t(\"Search users..\")}\r\n                />\r\n                <div className=\"border\">\r\n                  <SimpleBar style={{ height: \"320px\" }}>\r\n                    <div id=\"addContacts\">\r\n                      <SelectContact\r\n                        handleCheckContact={handleCheckContact}\r\n                        contacts={contacts}\r\n                        search={search}\r\n                        checkedContacts={selectedContact}\r\n                      />\r\n                    </div>\r\n                  </SimpleBar>\r\n                </div>\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <h5 className=\"mb-3\">{t(\"External participants\")}</h5>\r\n          <EmailList emailList={emailList} setEmailList={setEmailList} />\r\n        </Form>\r\n        <Alert isOpen={isOpenAlert} color=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button type=\"button\" color=\"link\" onClick={closeAndCleanData}>\r\n          {t(\"Close\")}\r\n        </Button>\r\n        { name !== \"\" && flagWrongStartTime === false ?\r\n        <Button type=\"button\" color=\"primary\" onClick={handleCreateGroup}>\r\n          {t(\"Create conference\")}\r\n        </Button>\r\n          :\r\n          <Button type=\"button\" color=\"primary\" disabled>\r\n          {t(\"Create conference\")}\r\n        </Button>\r\n      }\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n/* https://app.citrussquad.com/api/v1/read?authUser=698dbe5b-bf91-2a34-fc87-63883c91a94f@test.citrussquad.com&between=11d3a709-8c53-0392-0149-3a3a0e0eeaae@test.citrussquad.com&id=0eb03fc3-4b69-4d5d-a330-ddd63df32541&chatType=chat */"]},"metadata":{},"sourceType":"module"}