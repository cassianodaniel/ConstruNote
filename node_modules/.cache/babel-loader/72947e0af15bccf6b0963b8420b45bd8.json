{"ast":null,"code":"import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { invariant } from '../utils';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n\nfunction isUnicodeRegionSubtag(region) {\n  return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\n\nfunction isUnicodeScriptSubtag(script) {\n  return ALPHA_4.test(script);\n}\n\nexport function CanonicalCodeForDisplayNames(type, code) {\n  if (type === 'language') {\n    return CanonicalizeLocaleList([code])[0];\n  }\n\n  if (type === 'region') {\n    if (!isUnicodeRegionSubtag(code)) {\n      throw RangeError('invalid region');\n    }\n\n    return code.toUpperCase();\n  }\n\n  if (type === 'script') {\n    if (!isUnicodeScriptSubtag(code)) {\n      throw RangeError('invalid script');\n    }\n\n    return \"\" + code[0].toUpperCase() + code.slice(1);\n  }\n\n  invariant(type === 'currency', 'invalid type');\n\n  if (!IsWellFormedCurrencyCode(code)) {\n    throw RangeError('invalid currency');\n  }\n\n  return code.toUpperCase();\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/DisplayNames/CanonicalCodeForDisplayNames.js"],"names":["CanonicalizeLocaleList","invariant","IsWellFormedCurrencyCode","UNICODE_REGION_SUBTAG_REGEX","ALPHA_4","isUnicodeRegionSubtag","region","test","isUnicodeScriptSubtag","script","CanonicalCodeForDisplayNames","type","code","RangeError","toUpperCase","slice"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,2BAAvC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,IAAIC,2BAA2B,GAAG,wBAAlC;AACA,IAAIC,OAAO,GAAG,aAAd;;AACA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACnC,SAAOH,2BAA2B,CAACI,IAA5B,CAAiCD,MAAjC,CAAP;AACH;;AACD,SAASE,qBAAT,CAA+BC,MAA/B,EAAuC;AACnC,SAAOL,OAAO,CAACG,IAAR,CAAaE,MAAb,CAAP;AACH;;AACD,OAAO,SAASC,4BAAT,CAAsCC,IAAtC,EAA4CC,IAA5C,EAAkD;AACrD,MAAID,IAAI,KAAK,UAAb,EAAyB;AACrB,WAAOX,sBAAsB,CAAC,CAACY,IAAD,CAAD,CAAtB,CAA+B,CAA/B,CAAP;AACH;;AACD,MAAID,IAAI,KAAK,QAAb,EAAuB;AACnB,QAAI,CAACN,qBAAqB,CAACO,IAAD,CAA1B,EAAkC;AAC9B,YAAMC,UAAU,CAAC,gBAAD,CAAhB;AACH;;AACD,WAAOD,IAAI,CAACE,WAAL,EAAP;AACH;;AACD,MAAIH,IAAI,KAAK,QAAb,EAAuB;AACnB,QAAI,CAACH,qBAAqB,CAACI,IAAD,CAA1B,EAAkC;AAC9B,YAAMC,UAAU,CAAC,gBAAD,CAAhB;AACH;;AACD,WAAO,KAAKD,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,EAAL,GAA6BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAApC;AACH;;AACDd,EAAAA,SAAS,CAACU,IAAI,KAAK,UAAV,EAAsB,cAAtB,CAAT;;AACA,MAAI,CAACT,wBAAwB,CAACU,IAAD,CAA7B,EAAqC;AACjC,UAAMC,UAAU,CAAC,kBAAD,CAAhB;AACH;;AACD,SAAOD,IAAI,CAACE,WAAL,EAAP;AACH","sourcesContent":["import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { invariant } from '../utils';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\nfunction isUnicodeRegionSubtag(region) {\n    return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\nfunction isUnicodeScriptSubtag(script) {\n    return ALPHA_4.test(script);\n}\nexport function CanonicalCodeForDisplayNames(type, code) {\n    if (type === 'language') {\n        return CanonicalizeLocaleList([code])[0];\n    }\n    if (type === 'region') {\n        if (!isUnicodeRegionSubtag(code)) {\n            throw RangeError('invalid region');\n        }\n        return code.toUpperCase();\n    }\n    if (type === 'script') {\n        if (!isUnicodeScriptSubtag(code)) {\n            throw RangeError('invalid script');\n        }\n        return \"\" + code[0].toUpperCase() + code.slice(1);\n    }\n    invariant(type === 'currency', 'invalid type');\n    if (!IsWellFormedCurrencyCode(code)) {\n        throw RangeError('invalid currency');\n    }\n    return code.toUpperCase();\n}\n"]},"metadata":{},"sourceType":"module"}