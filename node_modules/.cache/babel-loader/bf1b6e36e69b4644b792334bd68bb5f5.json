{"ast":null,"code":"import i18n from\"i18next\";import detector from\"i18next-browser-languagedetector\";import{initReactI18next}from\"react-i18next\";import translationGr from\"./locales/gr/translation.json\";import translationIT from\"./locales/it/translation.json\";import translationSP from\"./locales/sp/translation.json\";import translationRS from\"./locales/rs/translation.json\";import translationENG from\"./locales/en/translation.json\";//translations\nvar resources={gr:{translation:translationGr},it:{translation:translationIT},sp:{translation:translationSP},rs:{translation:translationRS},eng:{translation:translationENG}};i18n.use(detector).use(initReactI18next)// passes i18n down to react-i18next\n.init({resources:resources,lng:\"en\",fallbackLng:\"en\",// use en if detected lng is not available\nkeySeparator:false,// we do not use keys in form messages.welcome\ninterpolation:{escapeValue:false// react already safes from xss\n}});export default i18n;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/i18n.ts"],"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationSP","translationRS","translationENG","resources","gr","translation","it","sp","rs","eng","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CAEA;AACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,EAAE,CAAE,CACFC,WAAW,CAAEP,aADX,CADY,CAIhBQ,EAAE,CAAE,CACFD,WAAW,CAAEN,aADX,CAJY,CAOhBQ,EAAE,CAAE,CACFF,WAAW,CAAEL,aADX,CAPY,CAUhBQ,EAAE,CAAE,CACFH,WAAW,CAAEJ,aADX,CAVY,CAahBQ,GAAG,CAAE,CACHJ,WAAW,CAAEH,cADV,CAbW,CAAlB,CAkBAP,IAAI,CACDe,GADH,CACOd,QADP,EAEGc,GAFH,CAEOb,gBAFP,CAEyB;AAFzB,CAGGc,IAHH,CAGQ,CACJR,SAAS,CAATA,SADI,CAEJS,GAAG,CAAE,IAFD,CAGJC,WAAW,CAAE,IAHT,CAGe;AAEnBC,YAAY,CAAE,KALV,CAKiB;AAErBC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AADP,CAPX,CAHR,EAeA,cAAerB,CAAAA,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport translationGr from \"./locales/gr/translation.json\";\r\nimport translationIT from \"./locales/it/translation.json\";\r\nimport translationSP from \"./locales/sp/translation.json\";\r\nimport translationRS from \"./locales/rs/translation.json\";\r\nimport translationENG from \"./locales/en/translation.json\";\r\n\r\n//translations\r\nconst resources = {\r\n  gr: {\r\n    translation: translationGr,\r\n  },\r\n  it: {\r\n    translation: translationIT,\r\n  },\r\n  sp: {\r\n    translation: translationSP,\r\n  },\r\n  rs: {\r\n    translation: translationRS,\r\n  },\r\n  eng: {\r\n    translation: translationENG,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}