{"ast":null,"code":"import { parseChats } from \"../utils/parseUtils\";\nexport default class ChatsBusiness {\n  constructor(api, contacts, groups, user) {\n    this.api = api;\n    this.contacts = contacts;\n    this.groups = groups;\n    this.user = user;\n  }\n\n  list(callback) {\n    if (!this.api) return;\n    this.contacts.list(__ => {\n      this.groups.list(__ => {\n        this.api.getChats({\n          paramsUrl: {\n            limit: 5000\n          }\n        }, response => {\n          //Retornando os Chats\n          if (!this.api) {\n            return;\n          }\n\n          this.user.get(user => {\n            const returnChats = parseChats(response.chats, this.groups.getGroups(), this.contacts.getContacts(), user);\n            callback(returnChats);\n          });\n        });\n      });\n    });\n  }\n\n  setFavorite(favorited, callback) {\n    this.api.setFavoriteUser({\n      contactID: favorited.jid.split('@')[0],\n      contactType: favorited.jid.includes('@conference.') ? \"group\" : \"contact\",\n      favorite: favorited.favorite\n    }, callback);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/Chats.ts"],"names":["parseChats","ChatsBusiness","constructor","api","contacts","groups","user","list","callback","__","getChats","paramsUrl","limit","response","get","returnChats","chats","getGroups","getContacts","setFavorite","favorited","setFavoriteUser","contactID","jid","split","contactType","includes","favorite"],"mappings":"AAIA,SAASA,UAAT,QAA2B,qBAA3B;AAUA,eAAe,MAAMC,aAAN,CAAoB;AACjCC,EAAAA,WAAW,CACDC,GADC,EAEDC,QAFC,EAGDC,MAHC,EAIDC,IAJC,EAKT;AAAA,SAJQH,GAIR,GAJQA,GAIR;AAAA,SAHQC,QAGR,GAHQA,QAGR;AAAA,SAFQC,MAER,GAFQA,MAER;AAAA,SADQC,IACR,GADQA,IACR;AAAE;;AACJC,EAAAA,IAAI,CAACC,QAAD,EAA0B;AAC5B,QAAI,CAAC,KAAKL,GAAV,EAAe;AACf,SAAKC,QAAL,CAAcG,IAAd,CAAoBE,EAAD,IAAQ;AACzB,WAAKJ,MAAL,CAAYE,IAAZ,CAAkBE,EAAD,IAAQ;AACvB,aAAKN,GAAL,CAASO,QAAT,CAAkB;AAAEC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAAb,SAAlB,EAAmDC,QAAD,IAAmB;AACnE;AACA,cAAI,CAAC,KAAKV,GAAV,EAAe;AACb;AACD;;AACD,eAAKG,IAAL,CAAUQ,GAAV,CAAeR,IAAD,IAAU;AACtB,kBAAMS,WAAoB,GAAGf,UAAU,CACrCa,QAAQ,CAACG,KAD4B,EAErC,KAAKX,MAAL,CAAYY,SAAZ,EAFqC,EAGrC,KAAKb,QAAL,CAAcc,WAAd,EAHqC,EAIrCZ,IAJqC,CAAvC;AAMAE,YAAAA,QAAQ,CAACO,WAAD,CAAR;AACD,WARD;AASD,SAdD;AAeD,OAhBD;AAiBD,KAlBD;AAmBD;;AACDI,EAAAA,WAAW,CAACC,SAAD,EAAuCZ,QAAvC,EAAqE;AAC9E,SAAKL,GAAL,CAASkB,eAAT,CAAyB;AACvBC,MAAAA,SAAS,EAAEF,SAAS,CAACG,GAAV,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CADY;AAEvBC,MAAAA,WAAW,EAAEL,SAAS,CAACG,GAAV,CAAcG,QAAd,CAAuB,cAAvB,IAAyC,OAAzC,GAAmD,SAFzC;AAGvBC,MAAAA,QAAQ,EAAEP,SAAS,CAACO;AAHG,KAAzB,EAIGnB,QAJH;AAKD;;AAnCgC","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IContact from '../../alias/IContact';\r\nimport IChat from '../../alias/IChat';\r\nimport IGroup from '../../alias/IGroup';\r\nimport { parseChats } from \"../utils/parseUtils\";\r\nimport ContactsBusiness from \"./Contacts\";\r\nimport GroupsBusiness from \"./Groups\";\r\nimport UserBusiness from \"./User\";\r\nimport { FavoriteUserCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\n\r\ninterface ChatsCallBack {\r\n  (chats: IChat[]): void;\r\n}\r\nexport default interface ChatsBusiness {}\r\nexport default class ChatsBusiness {\r\n  constructor(\r\n    private api: API,\r\n    private contacts: ContactsBusiness,\r\n    private groups: GroupsBusiness,\r\n    private user: UserBusiness\r\n  ) {}\r\n  list(callback: ChatsCallBack) {\r\n    if (!this.api) return;\r\n    this.contacts.list((__) => {\r\n      this.groups.list((__) => {\r\n        this.api.getChats({ paramsUrl: { limit: 5000 } }, (response: any) => {\r\n          //Retornando os Chats\r\n          if (!this.api) {\r\n            return;\r\n          }\r\n          this.user.get((user) => {\r\n            const returnChats: IChat[] = parseChats(\r\n              response.chats,\r\n              this.groups.getGroups(),\r\n              this.contacts.getContacts(),\r\n              user\r\n            );\r\n            callback(returnChats);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  setFavorite(favorited: IGroup | IContact | IChat, callback:FavoriteUserCallback){\r\n    this.api.setFavoriteUser({\r\n      contactID: favorited.jid.split('@')[0],\r\n      contactType: favorited.jid.includes('@conference.') ? \"group\" : \"contact\",\r\n      favorite: favorited.favorite\r\n    }, callback);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}