{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{Modal,ModalHeader,ModalBody,CardBody,Button,ModalFooter}from\"reactstrap\";import{useModal}from\"../contexts/ModalContext\";import{useTranslation}from\"react-i18next\";import SimpleBar from\"simplebar-react\";import SelectContact from\"./SelectContact\";import{useContact}from\"./../contexts/ContactContext\";var ModalAddContacts=function ModalAddContacts(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useContact=useContact(),setToggleAddingContacts=_useContact.setToggleAddingContacts,contactsOutsideUserContacts=_useContact.contactsOutsideUserContacts,checkedContacts=_useContact.checkedContacts,setCheckedContacts=_useContact.setCheckedContacts;var _useModal=useModal(),showModalAddContact=_useModal.showModalAddContact,setShowModalAddContact=_useModal.setShowModalAddContact;var toggle=function toggle(){if(showModalAddContact){setShowModalAddContact(!showModalAddContact);}setSearch(\"\");};var handleCheckContact=function handleCheckContact(selected,contact){if(selected){setCheckedContacts([].concat(_toConsumableArray(checkedContacts),[contact]));}else{setCheckedContacts(checkedContacts.filter(function(sel){if(sel.jid===contact.jid){return false;}return true;}));}};var inputSearch=useRef(null);useEffect(function(){setTimeout(function(){var _inputSearch$current;return(_inputSearch$current=inputSearch.current)===null||_inputSearch$current===void 0?void 0:_inputSearch$current.focus();},500);},[showModalAddContact]);return/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",isOpen:!!showModalAddContact,centered:true,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},t(\"Add Contacts\")),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(CardBody,{className:\"p-2 border\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pt-2 pb-3 border-bottom\"},/*#__PURE__*/React.createElement(\"input\",{ref:inputSearch,type:\"text\",className:\"form-control mb-3\",id:\"addgroupname-input\",value:search,onChange:function onChange(e){return setSearch(e.target.value);},placeholder:t(\"Search users..\")}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(SimpleBar,{style:{height:\"500px\"}},/*#__PURE__*/React.createElement(SelectContact,{contacts:contactsOutsideUserContacts,handleCheckContact:handleCheckContact,search:search,checkedContacts:checkedContacts}))),/*#__PURE__*/React.createElement(ModalFooter,{className:\"border-0\"},/*#__PURE__*/React.createElement(Button,{color:\"default\",onClick:function onClick(){setCheckedContacts([]);toggle();}},t(\"Close\")),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){toggle();setToggleAddingContacts(true);}},t(\"Add Contacts\"))))));};export default ModalAddContacts;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddContacts.tsx"],"names":["React","useState","useRef","useEffect","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","useModal","useTranslation","SimpleBar","SelectContact","useContact","ModalAddContacts","search","setSearch","t","setToggleAddingContacts","contactsOutsideUserContacts","checkedContacts","setCheckedContacts","showModalAddContact","setShowModalAddContact","toggle","handleCheckContact","selected","contact","filter","sel","jid","inputSearch","setTimeout","current","focus","e","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport SelectContact from \"./SelectContact\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\n\r\nconst ModalAddContacts: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { t } = useTranslation();\r\n  const {\r\n    setToggleAddingContacts,\r\n    /* toggleAddingContacts, */\r\n    contactsOutsideUserContacts,\r\n    checkedContacts,\r\n    setCheckedContacts\r\n  } = useContact();\r\n\r\n  const { showModalAddContact, setShowModalAddContact } = useModal();\r\n\r\n  const toggle = () => {\r\n    if (showModalAddContact) {\r\n      setShowModalAddContact(!showModalAddContact);\r\n    }\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setCheckedContacts([...checkedContacts, contact]);\r\n    } else {\r\n      setCheckedContacts(\r\n        checkedContacts.filter((sel) => {\r\n          if (sel.jid === contact.jid) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputSearch.current?.focus(), 500);\r\n  }, [showModalAddContact]);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalAddContact}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Add Contacts\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <input\r\n              ref={inputSearch}\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectContact\r\n                contacts={contactsOutsideUserContacts}\r\n                handleCheckContact={handleCheckContact}\r\n                search={search}\r\n                checkedContacts={checkedContacts}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button\r\n              color=\"default\"\r\n              onClick={() => {\r\n                setCheckedContacts([]);\r\n                toggle();\r\n              }}\r\n            >\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                toggle();\r\n                setToggleAddingContacts(true);\r\n              }}\r\n            >\r\n              {t(\"Add Contacts\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalAddContacts;\r\n"]},"metadata":{},"sourceType":"module"}