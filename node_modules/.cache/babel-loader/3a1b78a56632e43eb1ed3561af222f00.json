{"ast":null,"code":"/**\n * @private\n */\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\nimport { isUndefined, isString, isNumber } from \"./util.js\";\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"local\") return defaultZone;else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;else if ((offset = IANAZone.parseGMTOffset(input)) != null) {\n      // handle Etc/GMT-4, which V8 chokes on\n      return FixedOffsetZone.instance(offset);\n    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/luxon/src/impl/zoneUtil.js"],"names":["Zone","IANAZone","FixedOffsetZone","InvalidZone","isUndefined","isString","isNumber","normalizeZone","input","defaultZone","offset","lowered","toLowerCase","utcInstance","parseGMTOffset","instance","isValidSpecifier","create","parseSpecifier"],"mappings":"AAAA;;;AAIA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,QAAhC,QAAgD,WAAhD;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,WAA9B,EAA2C;AAChD,MAAIC,MAAJ;;AACA,MAAIN,WAAW,CAACI,KAAD,CAAX,IAAsBA,KAAK,KAAK,IAApC,EAA0C;AACxC,WAAOC,WAAP;AACD,GAFD,MAEO,IAAID,KAAK,YAAYR,IAArB,EAA2B;AAChC,WAAOQ,KAAP;AACD,GAFM,MAEA,IAAIH,QAAQ,CAACG,KAAD,CAAZ,EAAqB;AAC1B,UAAMG,OAAO,GAAGH,KAAK,CAACI,WAAN,EAAhB;AACA,QAAID,OAAO,KAAK,OAAhB,EAAyB,OAAOF,WAAP,CAAzB,KACK,IAAIE,OAAO,KAAK,KAAZ,IAAqBA,OAAO,KAAK,KAArC,EAA4C,OAAOT,eAAe,CAACW,WAAvB,CAA5C,KACA,IAAI,CAACH,MAAM,GAAGT,QAAQ,CAACa,cAAT,CAAwBN,KAAxB,CAAV,KAA6C,IAAjD,EAAuD;AAC1D;AACA,aAAON,eAAe,CAACa,QAAhB,CAAyBL,MAAzB,CAAP;AACD,KAHI,MAGE,IAAIT,QAAQ,CAACe,gBAAT,CAA0BL,OAA1B,CAAJ,EAAwC,OAAOV,QAAQ,CAACgB,MAAT,CAAgBT,KAAhB,CAAP,CAAxC,KACF,OAAON,eAAe,CAACgB,cAAhB,CAA+BP,OAA/B,KAA2C,IAAIR,WAAJ,CAAgBK,KAAhB,CAAlD;AACN,GATM,MASA,IAAIF,QAAQ,CAACE,KAAD,CAAZ,EAAqB;AAC1B,WAAON,eAAe,CAACa,QAAhB,CAAyBP,KAAzB,CAAP;AACD,GAFM,MAEA,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,MAAnC,IAA6C,OAAOF,KAAK,CAACE,MAAb,KAAwB,QAAzE,EAAmF;AACxF;AACA;AACA,WAAOF,KAAP;AACD,GAJM,MAIA;AACL,WAAO,IAAIL,WAAJ,CAAgBK,KAAhB,CAAP;AACD;AACF","sourcesContent":["/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"local\") return defaultZone;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else if ((offset = IANAZone.parseGMTOffset(input)) != null) {\n      // handle Etc/GMT-4, which V8 chokes on\n      return FixedOffsetZone.instance(offset);\n    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);\n    else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}