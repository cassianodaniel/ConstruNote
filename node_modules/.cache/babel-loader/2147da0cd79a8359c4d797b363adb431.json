{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupNotification.tsx\";\nimport React from 'react';\nimport { useGroup } from '../contexts/GroupContext';\nimport { useContact } from '../contexts/ContactContext';\nconst {\n  groups,\n  removedMember\n} = useGroup();\nconst {\n  contacts,\n  contactsOutsideUserContacts\n} = useContact();\nlet userRemoving;\n\nconst GroupNotification = ({\n  msg\n}) => {\n  switch (msg.eventId) {\n    case 6:\n      groups.map(grp => {\n        if (grp.groupId === msg.fromUser) {\n          //msg.fromUser é o id do grupo que ocorrerá o evento?\n          contacts.map(ctc => {\n            if (ctc.id === msg.eventBody) {\n              userRemoving = msg.eventBody;\n            }\n          });\n          contactsOutsideUserContacts.map(ctc => {\n            if (ctc.id === msg.eventBody) {\n              userRemoving = msg.eventBody;\n            }\n          });\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, removedMember === null || removedMember === void 0 ? void 0 : removedMember.name, \" has been removed by \", userRemoving, \"!\"));\n\n    default:\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default GroupNotification;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupNotification.tsx"],"names":["React","useGroup","useContact","groups","removedMember","contacts","contactsOutsideUserContacts","userRemoving","GroupNotification","msg","eventId","map","grp","groupId","fromUser","ctc","id","eventBody","color","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAMA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA4BH,QAAQ,EAA1C;AACA,MAAM;AAAEI,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA4CJ,UAAU,EAA5D;AAEA,IAAIK,YAAJ;;AAEA,MAAMC,iBAAgD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAClE,UAAOA,GAAG,CAACC,OAAX;AACI,SAAK,CAAL;AACAP,MAAAA,MAAM,CAACQ,GAAP,CAAYC,GAAD,IAAS;AAChB,YAAGA,GAAG,CAACC,OAAJ,KAAgBJ,GAAG,CAACK,QAAvB,EAAgC;AAAE;AAC9BT,UAAAA,QAAQ,CAACM,GAAT,CAAcI,GAAD,IAAS;AAClB,gBAAGA,GAAG,CAACC,EAAJ,KAAWP,GAAG,CAACQ,SAAlB,EAA4B;AACxBV,cAAAA,YAAY,GAAGE,GAAG,CAACQ,SAAnB;AACH;AACJ,WAJD;AAKAX,UAAAA,2BAA2B,CAACK,GAA5B,CAAiCI,GAAD,IAAS;AACrC,gBAAGA,GAAG,CAACC,EAAJ,KAAWP,GAAG,CAACQ,SAAlB,EAA4B;AACxBV,cAAAA,YAAY,GAAGE,GAAG,CAACQ,SAAnB;AACH;AACJ,WAJD;AAKH;AACJ,OAbD;AAcA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKd,aADL,aACKA,aADL,uBACKA,aAAa,CAAEe,IADpB,2BAC+CZ,YAD/C,MADJ,CADJ;;AAOA;AACI,0BAAO,yCAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeC,iBAAf","sourcesContent":["import React from 'react';\r\nimport IMessage from '../alias/IMessage';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport { useContact } from '../contexts/ContactContext';\r\n\r\ninterface IGroupNotification{\r\n    msg: IMessage;\r\n}\r\n\r\nconst { groups, removedMember } = useGroup();\r\nconst { contacts, contactsOutsideUserContacts } = useContact();\r\n\r\nlet userRemoving: any;\r\n\r\nconst GroupNotification : React.FC<IGroupNotification> = ({ msg }) => {\r\n    switch(msg.eventId){\r\n        case 6:\r\n        groups.map((grp) => {\r\n            if(grp.groupId === msg.fromUser){ //msg.fromUser é o id do grupo que ocorrerá o evento?\r\n                contacts.map((ctc) => {\r\n                    if(ctc.id === msg.eventBody){\r\n                        userRemoving = msg.eventBody;\r\n                    }\r\n                })\r\n                contactsOutsideUserContacts.map((ctc) => {\r\n                    if(ctc.id === msg.eventBody){\r\n                        userRemoving = msg.eventBody;\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\" style={{color: \"red\"}}>\r\n                    {removedMember?.name} has been removed by {userRemoving}!\r\n                </div>\r\n            </div>\r\n        );\r\n        default:\r\n            return <></>    \r\n    }\r\n}\r\n\r\nexport default GroupNotification;"]},"metadata":{},"sourceType":"module"}