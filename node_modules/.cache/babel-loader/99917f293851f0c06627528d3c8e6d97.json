{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupMember.tsx\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Media, Badge, Button } from 'reactstrap';\nimport ReactImageFallback from \"react-image-fallback\";\nimport { Link } from \"react-router-dom\";\nimport { useContact } from '../contexts/ContactContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\nimport { useConference } from '../contexts/ConferenceContext';\nimport ScreenType from \"../enuns/ScreenType\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport ModalGenerics from './ModalGenerics';\nimport { toastSuccess } from './../helpers/toastCaller';\n\nconst ChangeGroupNameButton = ({\n  isAdmin,\n  defaultAvatar,\n  member\n}) => {\n  var _activeChat$conferenc, _activeChat$conferenc2, _activeChat$conferenc3;\n\n  const {\n    activeChat,\n    chats,\n    openChat\n  } = useChat();\n  const [show, setShow] = useState(false);\n  const [showModalToggleRole, setShowModalToggleRole] = useState(false);\n  const [showModalToggleRoleAdminOrModerator, setShowModalToggleRoleAdminOrModerator] = useState(false);\n  const {\n    setToggleMemberRole,\n    setRemovedMember,\n    setGroupToRemoveContact\n  } = useGroup();\n  const {\n    setClickedContact,\n    contacts,\n    contactsOutsideUserContacts,\n    openContact\n  } = useContact();\n  const {\n    setRemovingParticipantsPayload,\n    setAddingParticipantsPayload\n  } = useConference();\n  const {\n    setScreen\n  } = useMainBox();\n  const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState([]);\n  const {\n    user\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const moderators = (_activeChat$conferenc = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc === void 0 ? void 0 : _activeChat$conferenc.filter(participant => participant.userModerator === true && participant.type === ConferenceRoomParticipantType.MODERATOR && participant.userUuid === user.id);\n  const amIaModerator = ((_activeChat$conferenc2 = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc2 === void 0 ? void 0 : (_activeChat$conferenc3 = _activeChat$conferenc2.find(member => member.userUuid === user.id)) === null || _activeChat$conferenc3 === void 0 ? void 0 : _activeChat$conferenc3.userModerator) === true;\n\n  const isThisMemberAModerator = member => {\n    moderators === null || moderators === void 0 ? void 0 : moderators.find(moderator => moderator.userUuid === member.userId);\n  };\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setScreen(ScreenType.CHAT);\n  };\n\n  const toggleMemberRole = (member, activeChat) => {\n    setToggleMemberRole({\n      mbId: member.userId,\n      gpId: activeChat.groupId ? activeChat.groupId : \"\",\n      mbRole: member.role,\n      mb: member\n    });\n  };\n\n  const toggleParticipantRole = (conferenceId, participant) => {\n    arrayToPushAOnlyParticipant.push({\n      description: '',\n      email: '',\n      name: participant.name,\n      userModerator: participant.role === \"admin\" ? false : true,\n      type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\n      userUuid: participant.userId\n    });\n    setRemovingParticipantsPayload({\n      conferenceId: conferenceId,\n      participantId: participant.userId\n    });\n    setTimeout(() => {\n      setAddingParticipantsPayload({\n        conferenceId: conferenceId,\n        data: arrayToPushAOnlyParticipant\n      });\n      setArrayToPushAOnlyParticipant([]);\n    }, 2500);\n  };\n\n  const removeParticipantPayload = (activeChat, member) => {\n    setRemovingParticipantsPayload({\n      conferenceId: activeChat.id,\n      participantId: member.userId\n    });\n  };\n\n  const removeParticipantAndToastSuccessAndCloseModal = (activeChat, member) => {\n    removeParticipantPayload(activeChat, member);\n    toastSuccess(t(\"Sucess!\"));\n    setShow(!show);\n  };\n\n  const removeMemberPayload = (member, activeChat) => {\n    setRemovedMember(member);\n    setGroupToRemoveContact(activeChat.groupId);\n  };\n\n  const removeMemberAndToastAndCloseModal = (member, activeChat) => {\n    removeMemberPayload(member, activeChat);\n    toastSuccess(t(\"Sucess!\"));\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShow,\n    show: show,\n    title: t(\"Remove\") + \" \" + member.name + \"?\",\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: activeChat.conferenceRoomParticipants ? () => removeParticipantAndToastSuccessAndCloseModal(activeChat, member) : () => removeMemberAndToastAndCloseModal(member, activeChat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, t(\"Confirm\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => {\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShowModalToggleRole,\n    show: showModalToggleRole,\n    title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"a member?\"),\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => setShowModalToggleRole(!showModalToggleRole),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")), activeChat.conferenceRoomParticipants ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toastSuccess(t(\"Sucess!\"));\n        toggleParticipantRole(activeChat.id, member);\n        setShowModalToggleRole(!showModalToggleRole);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\")) : /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toastSuccess(t(\"Sucess!\"));\n        toggleMemberRole(member, activeChat);\n        setShowModalToggleRole(!showModalToggleRole);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShowModalToggleRoleAdminOrModerator,\n    show: showModalToggleRoleAdminOrModerator,\n    title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\"),\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")), activeChat.conferenceRoomParticipants ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toastSuccess(t(\"Sucess!\"));\n        toggleParticipantRole(activeChat.id, member);\n        setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\")) : /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toastSuccess(t(\"Sucess!\"));\n        toggleMemberRole(member, activeChat);\n        setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    key: member.userId,\n    className: \"p-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: member.profilePicture,\n    className: \"rounded-circle avatar-xs mr-2\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      chats.forEach(cht => {\n        if (cht.id === member.userId) {\n          openChatAction(cht);\n          contacts.forEach(ctc => {\n            if (ctc.id === member.userId) {\n              setClickedContact(ctc);\n            }\n          });\n        } else {\n          contactsOutsideUserContacts.forEach(ctcOut => {\n            if (ctcOut.id === member.userId) {\n              openContact(ctcOut);\n              setClickedContact(ctcOut);\n            }\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, member.name), (isAdmin || amIaModerator) && user.id !== member.userId && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), member.role === \"admin\" || isThisMemberAModerator(member) ? /*#__PURE__*/React.createElement(Badge, {\n    color: activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\",\n    className: activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\",\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && setShowModalToggleRole(true),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    className: \"badge-soft-success float-right\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && setShowModalToggleRoleAdminOrModerator(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, t(\"Member\"))))))));\n};\n\nexport default ChangeGroupNameButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupMember.tsx"],"names":["React","useState","useTranslation","Card","Media","Badge","Button","ReactImageFallback","Link","useContact","useAuth","useChat","useGroup","ConferenceRoomParticipantType","useConference","ScreenType","useMainBox","ModalGenerics","toastSuccess","ChangeGroupNameButton","isAdmin","defaultAvatar","member","activeChat","chats","openChat","show","setShow","showModalToggleRole","setShowModalToggleRole","showModalToggleRoleAdminOrModerator","setShowModalToggleRoleAdminOrModerator","setToggleMemberRole","setRemovedMember","setGroupToRemoveContact","setClickedContact","contacts","contactsOutsideUserContacts","openContact","setRemovingParticipantsPayload","setAddingParticipantsPayload","setScreen","arrayToPushAOnlyParticipant","setArrayToPushAOnlyParticipant","user","t","moderators","conferenceRoomParticipants","filter","participant","userModerator","type","MODERATOR","userUuid","id","amIaModerator","find","isThisMemberAModerator","moderator","userId","openChatAction","chat","CHAT","toggleMemberRole","mbId","gpId","groupId","mbRole","role","mb","toggleParticipantRole","conferenceId","push","description","email","name","PARTICIPANT","participantId","setTimeout","data","removeParticipantPayload","removeParticipantAndToastSuccessAndCloseModal","removeMemberPayload","removeMemberAndToastAndCloseModal","profilePicture","forEach","cht","ctc","ctcOut","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, Media, Badge, Button } from 'reactstrap';\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContact } from '../contexts/ContactContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport IChat from '../alias/IChat';\r\nimport IMember from '../alias/IMember';\r\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\r\nimport { useConference } from '../contexts/ConferenceContext';\r\nimport { ConferenceRoomParticipant } from '@digivox/apicommunicator/dist/types/types/types';\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport ModalGenerics from './ModalGenerics';\r\nimport { toastSuccess } from './../helpers/toastCaller';\r\n\r\ninterface IProps {\r\n  member: IMember;\r\n  defaultAvatar: any;\r\n  isAdmin: any;\r\n}\r\n\r\nconst ChangeGroupNameButton : React.FC<IProps> = ({ isAdmin, defaultAvatar, member, }) => {\r\n    const { activeChat, chats, openChat } = useChat();\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const [showModalToggleRole, setShowModalToggleRole] = useState<boolean>(false);\r\n    const [showModalToggleRoleAdminOrModerator, setShowModalToggleRoleAdminOrModerator] = useState<boolean>(false);\r\n    const { setToggleMemberRole, setRemovedMember, setGroupToRemoveContact } = useGroup();\r\n    const { setClickedContact, contacts, contactsOutsideUserContacts, openContact } = useContact();\r\n    const { setRemovingParticipantsPayload, setAddingParticipantsPayload } = useConference();\r\n    const { setScreen } = useMainBox();\r\n    const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState<ConferenceRoomParticipant[]>([]);\r\n    const { user } = useAuth();\r\n    const { t } = useTranslation();\r\n    const moderators = activeChat\r\n    .conferenceRoomParticipants?.filter(\r\n      (participant) => \r\n          participant.userModerator === true && \r\n          participant.type === ConferenceRoomParticipantType.MODERATOR &&\r\n          participant.userUuid === user.id\r\n    );\r\n    const amIaModerator =\r\n    activeChat.conferenceRoomParticipants?.find((member) => member.userUuid === user.id)?.userModerator ===\r\n    true;\r\n\r\n    const isThisMemberAModerator = (member: IMember) => {\r\n      moderators?.find((moderator) => moderator.userUuid === member.userId)\r\n    }\r\n\r\n    const openChatAction = (chat: IChat) => {\r\n        openChat(chat);\r\n        setScreen(ScreenType.CHAT);\r\n    };\r\n\r\n    const toggleMemberRole = (member: IMember, activeChat: IChat) => {\r\n      setToggleMemberRole({\r\n        mbId: member.userId,\r\n        gpId: activeChat.groupId\r\n          ? activeChat.groupId\r\n          : \"\",\r\n        mbRole: member.role,\r\n        mb: member,\r\n      });\r\n    }\r\n\r\n    const toggleParticipantRole = (conferenceId: string, participant: IMember) => {\r\n      arrayToPushAOnlyParticipant.push(\r\n        {\r\n        description: '',\r\n            email: '',\r\n            name: participant.name,\r\n            userModerator: participant.role === \"admin\" ? false : true,\r\n            type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\r\n            userUuid: participant.userId\r\n        } as ConferenceRoomParticipant\r\n      )\r\n      setRemovingParticipantsPayload({\r\n        conferenceId: conferenceId,\r\n        participantId: participant.userId\r\n      });\r\n      setTimeout(() => {\r\n        setAddingParticipantsPayload({\r\n          conferenceId: conferenceId,\r\n          data: arrayToPushAOnlyParticipant,\r\n        });\r\n        setArrayToPushAOnlyParticipant([]);\r\n      }, 2500)\r\n    }\r\n\r\n    const removeParticipantPayload = (activeChat: IChat, member: IMember) => {\r\n      setRemovingParticipantsPayload({\r\n        conferenceId: activeChat.id,\r\n        participantId: member.userId,\r\n      })\r\n    }\r\n    \r\n    const removeParticipantAndToastSuccessAndCloseModal = (activeChat: IChat, member: IMember) => {\r\n      removeParticipantPayload(activeChat, member);\r\n      toastSuccess(t(\"Sucess!\"));\r\n      setShow(!show);\r\n    }\r\n\r\n    const removeMemberPayload = (member: IMember, activeChat: IChat) => {\r\n      setRemovedMember(member)\r\n      setGroupToRemoveContact(activeChat.groupId)\r\n    }\r\n\r\n    const removeMemberAndToastAndCloseModal = (member: IMember, activeChat: IChat) => {\r\n      removeMemberPayload(member, activeChat);\r\n      toastSuccess(t(\"Sucess!\"));\r\n      setShow(!show);\r\n    }\r\n\r\n    return (<>\r\n    <ModalGenerics\r\n      setShow={setShow}\r\n      show={show}\r\n      title={t(\"Remove\") + \" \" + member.name + \"?\"}\r\n      children={\r\n        <div>\r\n          <>\r\n          <Button type=\"button\" color=\"primary\" onClick={\r\n            activeChat.conferenceRoomParticipants \r\n              ? \r\n            () => removeParticipantAndToastSuccessAndCloseModal(activeChat, member)\r\n                : \r\n            () => removeMemberAndToastAndCloseModal(member, activeChat)\r\n          }>{t(\"Confirm\")}</Button>\r\n          <Button type=\"button\" color=\"link\" onClick={() => \r\n            {\r\n              setShow(!show);\r\n            }\r\n          }>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          </>\r\n        </div>\r\n      }\r\n      />\r\n    <ModalGenerics\r\n      setShow={setShowModalToggleRole}\r\n      show={showModalToggleRole}\r\n      title={t(\"Turn\") +\r\n      \" \" +\r\n      member.name +\r\n      \" \" +\r\n      t(\"a member?\")}\r\n      children={\r\n        <>\r\n          <Button type=\"button\" color=\"link\" onClick={() => setShowModalToggleRole(!showModalToggleRole)}>\r\n              {t(\"Cancel\")}\r\n          </Button>\r\n          {\r\n            activeChat.conferenceRoomParticipants ?\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => {\r\n                toastSuccess(t(\"Sucess!\")); \r\n                toggleParticipantRole(activeChat.id, member);\r\n                setShowModalToggleRole(!showModalToggleRole)\r\n              }}>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n                :\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => \r\n                {\r\n                  toastSuccess(t(\"Sucess!\")); \r\n                  toggleMemberRole(member, activeChat)\r\n                  setShowModalToggleRole(!showModalToggleRole);\r\n                }\r\n              }>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n          }\r\n        </>\r\n      }\r\n      />\r\n\r\n\r\n      <ModalGenerics\r\n      setShow={setShowModalToggleRoleAdminOrModerator}\r\n      show={showModalToggleRoleAdminOrModerator}\r\n      title={t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\")}\r\n      children={\r\n        <>\r\n          <Button type=\"button\" color=\"link\" onClick={() => setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator)}>\r\n              {t(\"Cancel\")}\r\n          </Button>\r\n          {\r\n            activeChat.conferenceRoomParticipants ?\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => {\r\n                toastSuccess(t(\"Sucess!\")); \r\n                toggleParticipantRole(activeChat.id, member);\r\n                setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator)\r\n              }}>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n                :\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => \r\n                {\r\n                  toastSuccess(t(\"Sucess!\")); \r\n                  toggleMemberRole(member, activeChat)\r\n                  setShowModalToggleRoleAdminOrModerator(!showModalToggleRoleAdminOrModerator);\r\n                }\r\n              }>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n          }\r\n        </>\r\n      }\r\n      /> \r\n\r\n    <Card key={member.userId} className=\"p-2 mb-2\">\r\n    <Media className=\"align-items-center\">\r\n      <ReactImageFallback\r\n        src={member.profilePicture}\r\n        className=\"rounded-circle avatar-xs mr-2\"\r\n        alt=\"chatvia\"\r\n        fallbackImage={defaultAvatar}\r\n      />\r\n      <Media body>\r\n        <div className=\"text-left\">\r\n          <h5 className=\"font-size-14 mb-1\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => {\r\n                chats.forEach((cht: any) => {\r\n                  if (cht.id === member.userId) {\r\n                    openChatAction(cht);\r\n                    contacts.forEach((ctc: any) => {\r\n                      if (ctc.id === member.userId) {\r\n                        setClickedContact(ctc);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    contactsOutsideUserContacts.forEach(\r\n                      (ctcOut) => {\r\n                        if (ctcOut.id === member.userId) {\r\n                          openContact(ctcOut);\r\n                          setClickedContact(ctcOut);\r\n                        }\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                {member.name}\r\n              </Link>\r\n\r\n            {(((isAdmin || amIaModerator) && user.id !== member.userId) && (\r\n              <span\r\n                className=\"float-right ml-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  setShow(true)\r\n                }\r\n              >\r\n                <i className=\"ri-close-fill\"></i>\r\n              </span>\r\n            ))}\r\n\r\n            {member.role === \"admin\" || isThisMemberAModerator(member) ?\r\n              (\r\n              <Badge\r\n                color={activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\"}\r\n                className={activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\"}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  setShowModalToggleRole(true)\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")}\r\n              </Badge>\r\n              ) : (\r\n              <Badge\r\n                color=\"success\"\r\n                className=\"badge-soft-success float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  setShowModalToggleRoleAdminOrModerator(true)\r\n                }\r\n              >\r\n                {t(\"Member\")}\r\n              </Badge>\r\n            )}\r\n\r\n          </h5>\r\n        </div>\r\n      </Media>\r\n    </Media>\r\n  </Card>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChangeGroupNameButton;\r\n"]},"metadata":{},"sourceType":"module"}