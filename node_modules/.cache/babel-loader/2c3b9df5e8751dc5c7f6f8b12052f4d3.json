{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupNotification.tsx\";\nimport React from 'react';\nimport { useContact } from '../contexts/ContactContext';\n\nconst GroupNotification = ({\n  msg\n}) => {\n  const {\n    contacts,\n    contactsOutsideUserContacts\n  } = useContact();\n\n  switch (msg.eventId) {\n    case 2:\n      let adder = msg.userName;\n      let userThatIsBeingAdded;\n      contacts.forEach(ctc => {\n        var _msg$eventBody;\n\n        if (ctc.id === ((_msg$eventBody = msg.eventBody) === null || _msg$eventBody === void 0 ? void 0 : _msg$eventBody.split('@')[0])) {\n          userThatIsBeingAdded = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody2;\n\n        if (ctc.id === ((_msg$eventBody2 = msg.eventBody) === null || _msg$eventBody2 === void 0 ? void 0 : _msg$eventBody2.split('@')[0])) {\n          userThatIsBeingAdded = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, userThatIsBeingAdded || msg.eventBody, \" has been added by \", adder, \"!\"));\n\n    case 6:\n      let remover = msg.userName;\n      let userThatIsBeingRemoved;\n      contacts.forEach(ctc => {\n        var _msg$eventBody3;\n\n        if (ctc.id === ((_msg$eventBody3 = msg.eventBody) === null || _msg$eventBody3 === void 0 ? void 0 : _msg$eventBody3.split('@')[0])) {\n          userThatIsBeingRemoved = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody4;\n\n        if (ctc.id === ((_msg$eventBody4 = msg.eventBody) === null || _msg$eventBody4 === void 0 ? void 0 : _msg$eventBody4.split('@')[0])) {\n          userThatIsBeingRemoved = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, userThatIsBeingRemoved || msg.eventBody, \" has been removed by \", remover, \"!\"));\n\n    default:\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default GroupNotification;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupNotification.tsx"],"names":["React","useContact","GroupNotification","msg","contacts","contactsOutsideUserContacts","eventId","adder","userName","userThatIsBeingAdded","forEach","ctc","id","eventBody","split","name","color","remover","userThatIsBeingRemoved"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,QAA2B,4BAA3B;;AAMA,MAAMC,iBAAgD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAClE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4CJ,UAAU,EAA5D;;AAEA,UAAOE,GAAG,CAACG,OAAX;AACI,SAAK,CAAL;AACA,UAAIC,KAAK,GAAGJ,GAAG,CAACK,QAAhB;AACA,UAAIC,oBAAJ;AACAL,MAAAA,QAAQ,CAACM,OAAT,CAAkBC,GAAD,IAAS;AAAA;;AACtB,YAAGA,GAAG,CAACC,EAAJ,wBAAWT,GAAG,CAACU,SAAf,mDAAW,eAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX,CAAH,EAA2C;AACvCL,UAAAA,oBAAoB,GAAGE,GAAG,CAACI,IAA3B;AACH;;AAAA;AACJ,OAJD;AAKAV,MAAAA,2BAA2B,CAACK,OAA5B,CAAqCC,GAAD,IAAS;AAAA;;AACzC,YAAGA,GAAG,CAACC,EAAJ,yBAAWT,GAAG,CAACU,SAAf,oDAAW,gBAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX,CAAH,EAA2C;AACvCL,UAAAA,oBAAoB,GAAGE,GAAG,CAACI,IAA3B;AACH;;AAAA;AACJ,OAJD;AAKA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCP,oBAAoB,IAAIN,GAAG,CAACU,SAD7B,yBAC2DN,KAD3D,MADJ,CADJ;;AAQA,SAAK,CAAL;AACA,UAAIU,OAAO,GAAGd,GAAG,CAACK,QAAlB;AACA,UAAIU,sBAAJ;AACAd,MAAAA,QAAQ,CAACM,OAAT,CAAkBC,GAAD,IAAS;AAAA;;AACtB,YAAGA,GAAG,CAACC,EAAJ,yBAAWT,GAAG,CAACU,SAAf,oDAAW,gBAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX,CAAH,EAA2C;AACvCI,UAAAA,sBAAsB,GAAGP,GAAG,CAACI,IAA7B;AACH;;AAAA;AACJ,OAJD;AAKAV,MAAAA,2BAA2B,CAACK,OAA5B,CAAqCC,GAAD,IAAS;AAAA;;AACzC,YAAGA,GAAG,CAACC,EAAJ,yBAAWT,GAAG,CAACU,SAAf,oDAAW,gBAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX,CAAH,EAA2C;AACvCI,UAAAA,sBAAsB,GAAGP,GAAG,CAACI,IAA7B;AACH;;AAAA;AACJ,OAJD;AAKA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCE,sBAAsB,IAAIf,GAAG,CAACU,SAD/B,2BAC+DI,OAD/D,MADJ,CADJ;;AAOA;AACI,0BAAO,yCAAP;AA3CR;AA6CH,CAhDD;;AAkDA,eAAef,iBAAf","sourcesContent":["import React from 'react';\r\nimport IMessage from '../alias/IMessage';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useContact } from '../contexts/ContactContext';\r\n\r\ninterface IGroupNotification{\r\n    msg: IMessage;\r\n}\r\n\r\nconst GroupNotification : React.FC<IGroupNotification> = ({ msg }) => {\r\n    const { contacts, contactsOutsideUserContacts } = useContact();\r\n\r\n    switch(msg.eventId){\r\n        case 2:\r\n        let adder = msg.userName;\r\n        let userThatIsBeingAdded: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingAdded = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingAdded = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\" style={{color: \"green\"}}>\r\n                {userThatIsBeingAdded || msg.eventBody} has been added by {adder}!\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        case 6:\r\n        let remover = msg.userName;\r\n        let userThatIsBeingRemoved: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingRemoved = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingRemoved = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\" style={{color: \"red\"}}>\r\n                {userThatIsBeingRemoved || msg.eventBody} has been removed by {remover}!\r\n                </div>\r\n            </div>\r\n        );\r\n        default:\r\n            return <></>    \r\n    }\r\n}\r\n\r\nexport default GroupNotification;"]},"metadata":{},"sourceType":"module"}