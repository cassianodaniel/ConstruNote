{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\DragNDropImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\n// for profile picture\nconst ImageUpload = ({\n  addFile,\n  files\n}) => {\n  const [warningMsg, setWarningMsg] = useState(\"\");\n\n  const onDrop = (accepted, rejected) => {\n    if (Object.keys(rejected).length !== 0) {\n      const message = \"Please submit valid file type\";\n      setWarningMsg(message);\n    } else {\n      addFile(accepted);\n      setWarningMsg(\"\");\n      console.log(accepted[0].preview);\n      var blobPromise = new Promise((resolve, reject) => {\n        const reader = new window.FileReader();\n        reader.readAsDataURL(accepted[0]);\n\n        reader.onloadend = () => {\n          const base64data = reader.result;\n          resolve(base64data);\n        };\n      });\n      blobPromise.then(value => {// console.log(value);\n      });\n    }\n  };\n\n  const thumbs = /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    },\n    src: files,\n    alt: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  });\n  const render = Object.keys(files).length !== 0 ? /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, thumbs) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"+ image here to prompt users to click\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\",\n      border: \" 1px dashed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, warningMsg), /*#__PURE__*/React.createElement(Dropzone, {\n    multiple: false,\n    accept: \"image/*\",\n    onDrop: (accepted, rejected) => onDrop(accepted, rejected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, ({\n    isDragReject\n  }) => {\n    return render;\n  }));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/DragNDropImageUpload.tsx"],"names":["React","useState","Dropzone","ImageUpload","addFile","files","warningMsg","setWarningMsg","onDrop","accepted","rejected","Object","keys","length","message","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","thumbs","width","height","borderRadius","objectFit","objectPosition","render","border","isDragReject"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAOA;AACA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAC5D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMO,MAAM,GAAG,CAACC,QAAD,EAAgBC,QAAhB,KAAkC;AAC/C,QAAIC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAArC,EAAwC;AACtC,YAAMC,OAAO,GAAG,+BAAhB;AACAP,MAAAA,aAAa,CAACO,OAAD,CAAb;AACD,KAHD,MAGO;AACLV,MAAAA,OAAO,CAACK,QAAD,CAAP;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAAC,CAAD,CAAR,CAAYQ,OAAxB;AAEA,UAAIC,WAAW,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD,cAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,QAAAA,MAAM,CAACG,aAAP,CAAqBhB,QAAQ,CAAC,CAAD,CAA7B;;AACAa,QAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvB,gBAAMC,UAAU,GAAGL,MAAM,CAACM,MAA1B;AACAR,UAAAA,OAAO,CAACO,UAAD,CAAP;AACD,SAHD;AAID,OAPiB,CAAlB;AAQAT,MAAAA,WAAW,CAACW,IAAZ,CAAiBC,KAAK,IAAI,CACxB;AACD,OAFD;AAGD;AACF,GArBD;;AAuBE,QAAMC,MAAM,gBACZ;AAAK,IAAA,KAAK,EAAE;AACZC,MAAAA,KAAK,EAAE,OADK;AAEZC,MAAAA,MAAM,EAAE,OAFI;AAGZC,MAAAA,YAAY,EAAE,KAHF;AAIZC,MAAAA,SAAS,EAAE,OAJC;AAKZC,MAAAA,cAAc,EAAE;AALJ,KAAZ;AAMA,IAAA,GAAG,EAAE/B,KANL;AAMY,IAAA,GAAG,EAAC,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAUA,QAAMgC,MAAM,GACV1B,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,MAAnB,KAA8B,CAA9B,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQkB,MAAR,CADF,gBAGE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ;AAOA,sBACE;AACA,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,YAAY,EAAE,KAHT;AAILC,MAAAA,SAAS,EAAE,OAJN;AAKLC,MAAAA,cAAc,EAAE,QALX;AAMLE,MAAAA,MAAM,EAAE;AANH,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhC,UAAJ,CATF,eAWE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,MAAM,EAAE,CAACG,QAAD,EAAWC,QAAX,KAAwBF,MAAM,CAACC,QAAD,EAAWC,QAAX,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAAC;AAAE6B,IAAAA;AAAF,GAAD,KAAsB;AACrB,WAAOF,MAAP;AACD,GAPH,CAXF,CADF;AAuBD,CAjEH;;AAmEA,eAAelC,WAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ninterface IProps{\r\n    addFile(value: any): any;\r\n    files: any;\r\n}\r\n\r\n// for profile picture\r\nconst ImageUpload: React.FC<IProps> = ({ addFile, files }) => {\r\n  const [warningMsg, setWarningMsg] = useState(\"\");\r\n  const onDrop = (accepted: any, rejected: any) => {\r\n    if (Object.keys(rejected).length !== 0) {\r\n      const message = \"Please submit valid file type\";\r\n      setWarningMsg(message);\r\n    } else {\r\n      addFile(accepted);\r\n      setWarningMsg(\"\");\r\n      console.log(accepted[0].preview);\r\n\r\n      var blobPromise = new Promise((resolve, reject) => {\r\n        const reader = new window.FileReader();\r\n        reader.readAsDataURL(accepted[0]);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          resolve(base64data);\r\n        };\r\n      });\r\n      blobPromise.then(value => {\r\n        // console.log(value);\r\n      });\r\n    }\r\n  };\r\n\r\n    const thumbs = \r\n    <img style={{\r\n    width: \"150px\",\r\n    height: \"150px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"center\"}} \r\n    src={files} alt=\"profile\"\r\n    />;\r\n\r\n    const render =\r\n      Object.keys(files).length !== 0 ? (\r\n        <aside>{thumbs}</aside>\r\n      ) : (\r\n        <p className=\"hello\">+ image here to prompt users to click</p>\r\n      );\r\n\r\n    return (\r\n      <div\r\n      style={{\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        objectFit: \"cover\",\r\n        objectPosition: \"center\",\r\n        border: \" 1px dashed\"\r\n      }}>\r\n        <p>{warningMsg}</p>\r\n\r\n        <Dropzone\r\n          multiple={false}\r\n          accept=\"image/*\"\r\n          onDrop={(accepted, rejected) => onDrop(accepted, rejected)}\r\n        >\r\n          {({ isDragReject }) => {\r\n            return render;\r\n          }}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}