{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from\"react\";import{useChat}from\"./ChatContext\";//alias\nimport ChatType from\"../enuns/ChatType\";export var GroupContext=createContext({});export var GroupProvider=function GroupProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),groups=_useState2[0],setGroups=_useState2[1];var _useChat=useChat(),activeChat=_useChat.activeChat,chats=_useChat.chats,setChats=_useChat.setChats,setActiveChat=_useChat.setActiveChat,setShowChat=_useChat.setShowChat;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),memberQuit=_useState4[0],setMemberQuit=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),groupIdOfLeaveRequest=_useState6[0],setGroupIdOfLeaveRequest=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),groupToRemoveContact=_useState8[0],setGroupToRemoveContact=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),removedMember=_useState10[0],setRemovedMember=_useState10[1];var _useState11=useState(undefined),_useState12=_slicedToArray(_useState11,2),members=_useState12[0],setMembers=_useState12[1];var _useState13=useState(undefined),_useState14=_slicedToArray(_useState13,2),toggleMemberRole=_useState14[0],setToggleMemberRole=_useState14[1];var _useState15=useState(undefined),_useState16=_slicedToArray(_useState15,2),changeGroupData=_useState16[0],setChangeGroupData=_useState16[1];var _useState17=useState(undefined),_useState18=_slicedToArray(_useState17,2),groupToCreate=_useState18[0],setGroupToCreate=_useState18[1];var _useState19=useState(undefined),_useState20=_slicedToArray(_useState19,2),groupJid=_useState20[0],setGroupJid=_useState20[1];var openGroup=function openGroup(obj){if((activeChat===null||activeChat===void 0?void 0:activeChat.jid)===obj.jid)return;var find=false;setChats(chats.map(function(item){if(item.jid===obj.jid){item.unRead=0;item.messageLoaded=item.messages.length>=20?false:true;setShowChat(true);setActiveChat(item);find=true;}return item;}));if(!find){var newChat={id:obj.jid.split(\"@\")[0],jid:obj.jid,name:obj.name,profilePicture:obj.profilePicture,messageLoaded:true,unRead:1,chatType:ChatType.GROUP,inputMessage:\"\",isTyping:false,messages:[],favorite:obj.favorite,added:obj.added,members:obj.members,groupId:obj.groupId};setShowChat(true);setActiveChat(newChat);}};return/*#__PURE__*/React.createElement(GroupContext.Provider,{value:{openGroup:openGroup,groups:groups,setGroups:setGroups,memberQuit:memberQuit,setMemberQuit:setMemberQuit,groupIdOfLeaveRequest:groupIdOfLeaveRequest,setGroupIdOfLeaveRequest:setGroupIdOfLeaveRequest,groupToRemoveContact:groupToRemoveContact,setGroupToRemoveContact:setGroupToRemoveContact,removedMember:removedMember,setRemovedMember:setRemovedMember,members:members,setMembers:setMembers,toggleMemberRole:toggleMemberRole,setToggleMemberRole:setToggleMemberRole,changeGroupData:changeGroupData,setChangeGroupData:setChangeGroupData,groupToCreate:groupToCreate,setGroupToCreate:setGroupToCreate,groupJid:groupJid,setGroupJid:setGroupJid}},children);};export function useGroup(){return useContext(GroupContext);}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/GroupContext.tsx"],"names":["React","createContext","useContext","useState","useChat","ChatType","GroupContext","GroupProvider","children","groups","setGroups","activeChat","chats","setChats","setActiveChat","setShowChat","memberQuit","setMemberQuit","groupIdOfLeaveRequest","setGroupIdOfLeaveRequest","groupToRemoveContact","setGroupToRemoveContact","removedMember","setRemovedMember","undefined","members","setMembers","toggleMemberRole","setToggleMemberRole","changeGroupData","setChangeGroupData","groupToCreate","setGroupToCreate","groupJid","setGroupJid","openGroup","obj","jid","find","map","item","unRead","messageLoaded","messages","length","newChat","id","split","name","profilePicture","chatType","GROUP","inputMessage","isTyping","favorite","added","groupId","useGroup"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\n//alias\r\nimport IGroup from \"./../alias/IGroup\";\r\nimport ChatType from \"../enuns/ChatType\";\r\nimport IMember from \"../alias/IMember\";\r\nimport UserType from \"../enuns/UserType\";\r\nimport INewGroup from '../alias/INewGroup';\r\n\r\n\r\ninterface IGroupContextData {\r\n  openGroup(obj: IGroup): void;\r\n  groups: IGroup[];\r\n  setGroups(value: IGroup[]): void;\r\n  memberQuit : IMember | undefined;\r\n  setMemberQuit(value: IMember | undefined): void;\r\n  groupIdOfLeaveRequest : string;\r\n  setGroupIdOfLeaveRequest(value: string): void;\r\n  groupToRemoveContact : string  | undefined;\r\n  setGroupToRemoveContact(value: string  | undefined): void;\r\n  removedMember: IMember | undefined;\r\n  setRemovedMember(value: IMember | undefined): void;\r\n  members: IMember[] | undefined;\r\n  setMembers(value: IMember[] | undefined): void;\r\n  toggleMemberRole : IToggleMemberRole | undefined;\r\n  setToggleMemberRole(value: IToggleMemberRole | undefined): void;\r\n  changeGroupData: IChangeGroupData | undefined;\r\n  setChangeGroupData(value: IChangeGroupData | undefined): void;\r\n  groupToCreate: INewGroup | undefined;\r\n  setGroupToCreate(value: INewGroup | undefined): void;\r\n  groupJid: string | undefined;\r\n  setGroupJid(value: string | undefined): any;\r\n}\r\n\r\nexport const GroupContext = createContext<IGroupContextData>(\r\n  {} as IGroupContextData\r\n);\r\n\r\nexport interface IToggleMemberRole {\r\n  mbId: string;\r\n  gpId: string;\r\n  mbRole: UserType;\r\n  mb: IMember;\r\n}\r\n\r\nexport interface IChangeGroupData{\r\n  groupId: string | undefined;\r\n  groupName: string;\r\n  members: string[] | undefined;\r\n  description: string;\r\n}\r\n\r\nexport const GroupProvider: React.FC = ({ children }) => {\r\n  const [groups, setGroups] = useState<IGroup[]>([]);\r\n  const { activeChat, chats, setChats, setActiveChat, setShowChat } = useChat();\r\n  const [memberQuit, setMemberQuit] = useState<IMember | undefined>();\r\n  const [groupIdOfLeaveRequest, setGroupIdOfLeaveRequest] = useState<string>('');\r\n  const [groupToRemoveContact, setGroupToRemoveContact] = useState<string | undefined>();\r\n  const [removedMember, setRemovedMember] = useState<IMember | undefined>();\r\n  const [members, setMembers] = useState<IMember[] | undefined>(undefined);\r\n  const [toggleMemberRole, setToggleMemberRole] = useState<IToggleMemberRole | undefined>(undefined);\r\n  const [changeGroupData, setChangeGroupData] = useState<IChangeGroupData | undefined>(undefined);\r\n  const [groupToCreate, setGroupToCreate] = useState<INewGroup | undefined>(undefined);\r\n  const [groupJid, setGroupJid] = useState<string | undefined>(undefined);\r\n\r\n  const openGroup = (obj: IGroup) => {\r\n    if (activeChat?.jid === obj.jid) return;\r\n    let find = false;\r\n\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (item.jid === obj.jid) {\r\n          item.unRead = 0;\r\n          item.messageLoaded = item.messages.length >= 20 ? false : true;\r\n          setShowChat(true);\r\n          setActiveChat(item);\r\n          find = true;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n\r\n    if (!find) {\r\n      let newChat = {\r\n        id: obj.jid.split(\"@\")[0],\r\n        jid: obj.jid,\r\n        name: obj.name,\r\n        profilePicture: obj.profilePicture,\r\n        messageLoaded: true,\r\n        unRead: 1,\r\n        chatType: ChatType.GROUP,\r\n        inputMessage: \"\",\r\n        isTyping: false,\r\n        messages: [],\r\n        favorite: obj.favorite,\r\n        added: obj.added,\r\n        members: obj.members,\r\n        groupId: obj.groupId\r\n      };\r\n      setShowChat(true);\r\n      setActiveChat(newChat);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GroupContext.Provider\r\n      value={{\r\n        openGroup,\r\n        groups,\r\n        setGroups,\r\n        memberQuit,\r\n        setMemberQuit,\r\n        groupIdOfLeaveRequest,\r\n        setGroupIdOfLeaveRequest,\r\n        groupToRemoveContact,\r\n        setGroupToRemoveContact,\r\n        removedMember,\r\n        setRemovedMember,\r\n        members,\r\n        setMembers,\r\n        toggleMemberRole, \r\n        setToggleMemberRole,\r\n        changeGroupData, \r\n        setChangeGroupData,\r\n        groupToCreate,\r\n        setGroupToCreate,\r\n        groupJid,\r\n        setGroupJid\r\n      }}\r\n    >\r\n      {children}\r\n    </GroupContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useGroup() {\r\n  return useContext(GroupContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}