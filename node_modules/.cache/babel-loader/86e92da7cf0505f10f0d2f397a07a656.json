{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nvar _require = require('@xmpp/client-core'),\n    xml = _require.xml,\n    jid = _require.jid,\n    Client = _require.Client;\n\nvar getDomain = require('./lib/getDomain');\n\nvar _reconnect = require('@xmpp/reconnect');\n\nvar _websocket = require('@xmpp/websocket');\n\nvar _middleware = require('@xmpp/middleware');\n\nvar _streamFeatures = require('@xmpp/stream-features');\n\nvar _iqCaller = require('@xmpp/iq/caller');\n\nvar _iqCallee = require('@xmpp/iq/callee');\n\nvar _resolve = require('@xmpp/resolve'); // Stream features - order matters and define priority\n\n\nvar _sasl = require('@xmpp/sasl');\n\nvar _resourceBinding = require('@xmpp/resource-binding');\n\nvar _sessionEstablishment = require('@xmpp/session-establishment');\n\nvar _streamManagement = require('@xmpp/stream-management'); // SASL mechanisms - order matters and define priority\n\n\nvar anonymous = require('@xmpp/sasl-anonymous');\n\nvar plain = require('@xmpp/sasl-plain');\n\nfunction client() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var resource = options.resource,\n      credentials = options.credentials,\n      username = options.username,\n      password = options.password,\n      params = _objectWithoutProperties(options, [\"resource\", \"credentials\", \"username\", \"password\"]);\n\n  var domain = params.domain,\n      service = params.service;\n\n  if (!domain && service) {\n    params.domain = getDomain(service);\n  }\n\n  var entity = new Client(params);\n\n  var reconnect = _reconnect({\n    entity: entity\n  });\n\n  var websocket = _websocket({\n    entity: entity\n  });\n\n  var middleware = _middleware({\n    entity: entity\n  });\n\n  var streamFeatures = _streamFeatures({\n    middleware: middleware\n  });\n\n  var iqCaller = _iqCaller({\n    middleware: middleware,\n    entity: entity\n  });\n\n  var iqCallee = _iqCallee({\n    middleware: middleware,\n    entity: entity\n  });\n\n  var resolve = _resolve({\n    entity: entity\n  }); // Stream features - order matters and define priority\n\n\n  var sasl = _sasl({\n    streamFeatures: streamFeatures\n  }, credentials || {\n    username: username,\n    password: password\n  });\n\n  var streamManagement = _streamManagement({\n    streamFeatures: streamFeatures,\n    entity: entity,\n    middleware: middleware\n  });\n\n  var resourceBinding = _resourceBinding({\n    iqCaller: iqCaller,\n    streamFeatures: streamFeatures\n  }, resource);\n\n  var sessionEstablishment = _sessionEstablishment({\n    iqCaller: iqCaller,\n    streamFeatures: streamFeatures\n  }); // SASL mechanisms - order matters and define priority\n\n\n  var mechanisms = Object.entries({\n    plain: plain,\n    anonymous: anonymous\n  }).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return _defineProperty({}, k, v(sasl));\n  });\n  return Object.assign(entity, {\n    entity: entity,\n    reconnect: reconnect,\n    websocket: websocket,\n    middleware: middleware,\n    streamFeatures: streamFeatures,\n    iqCaller: iqCaller,\n    iqCallee: iqCallee,\n    resolve: resolve,\n    sasl: sasl,\n    resourceBinding: resourceBinding,\n    sessionEstablishment: sessionEstablishment,\n    streamManagement: streamManagement,\n    mechanisms: mechanisms\n  });\n}\n\nmodule.exports.xml = xml;\nmodule.exports.jid = jid;\nmodule.exports.client = client;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/client/browser.js"],"names":["require","xml","jid","Client","getDomain","_reconnect","_websocket","_middleware","_streamFeatures","_iqCaller","_iqCallee","_resolve","_sasl","_resourceBinding","_sessionEstablishment","_streamManagement","anonymous","plain","client","options","resource","credentials","username","password","params","domain","service","entity","reconnect","websocket","middleware","streamFeatures","iqCaller","iqCallee","resolve","sasl","streamManagement","resourceBinding","sessionEstablishment","mechanisms","Object","entries","map","k","v","assign","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst {xml, jid, Client} = require('@xmpp/client-core')\nconst getDomain = require('./lib/getDomain')\n\nconst _reconnect = require('@xmpp/reconnect')\nconst _websocket = require('@xmpp/websocket')\nconst _middleware = require('@xmpp/middleware')\nconst _streamFeatures = require('@xmpp/stream-features')\nconst _iqCaller = require('@xmpp/iq/caller')\nconst _iqCallee = require('@xmpp/iq/callee')\nconst _resolve = require('@xmpp/resolve')\n\n// Stream features - order matters and define priority\nconst _sasl = require('@xmpp/sasl')\nconst _resourceBinding = require('@xmpp/resource-binding')\nconst _sessionEstablishment = require('@xmpp/session-establishment')\nconst _streamManagement = require('@xmpp/stream-management')\n\n// SASL mechanisms - order matters and define priority\nconst anonymous = require('@xmpp/sasl-anonymous')\nconst plain = require('@xmpp/sasl-plain')\n\nfunction client(options = {}) {\n  const {resource, credentials, username, password, ...params} = options\n\n  const {domain, service} = params\n  if (!domain && service) {\n    params.domain = getDomain(service)\n  }\n\n  const entity = new Client(params)\n\n  const reconnect = _reconnect({entity})\n  const websocket = _websocket({entity})\n\n  const middleware = _middleware({entity})\n  const streamFeatures = _streamFeatures({middleware})\n  const iqCaller = _iqCaller({middleware, entity})\n  const iqCallee = _iqCallee({middleware, entity})\n  const resolve = _resolve({entity})\n  // Stream features - order matters and define priority\n  const sasl = _sasl({streamFeatures}, credentials || {username, password})\n  const streamManagement = _streamManagement({\n    streamFeatures,\n    entity,\n    middleware,\n  })\n  const resourceBinding = _resourceBinding({iqCaller, streamFeatures}, resource)\n  const sessionEstablishment = _sessionEstablishment({iqCaller, streamFeatures})\n  // SASL mechanisms - order matters and define priority\n  const mechanisms = Object.entries({plain, anonymous}).map(([k, v]) => ({\n    [k]: v(sasl),\n  }))\n\n  return Object.assign(entity, {\n    entity,\n    reconnect,\n    websocket,\n    middleware,\n    streamFeatures,\n    iqCaller,\n    iqCallee,\n    resolve,\n    sasl,\n    resourceBinding,\n    sessionEstablishment,\n    streamManagement,\n    mechanisms,\n  })\n}\n\nmodule.exports.xml = xml\nmodule.exports.jid = jid\nmodule.exports.client = client\n"]},"metadata":{},"sourceType":"script"}