{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\EventNotification.tsx\";\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useContact } from '../contexts/ContactContext'; // eslint-disable-next-line no-lone-blocks\n\n{\n  /* \r\n  <div className=\"chat-day-title\">\r\n     <span className=\"title\">Evento chegou!</span>\r\n  </div> \r\n  */\n}\n\nconst EventNotification = ({\n  msg\n}) => {\n  let eventSender = msg.userName;\n  const {\n    contacts,\n    contactsOutsideUserContacts\n  } = useContact();\n  const {\n    t\n  } = useTranslation();\n\n  switch (msg.eventId) {\n    case 1:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, t(\"Group has been created!\")));\n\n    case 2:\n      let userThatIsBeingAdded;\n      contacts.forEach(ctc => {\n        var _msg$eventBody;\n\n        if (ctc.id === ((_msg$eventBody = msg.eventBody) === null || _msg$eventBody === void 0 ? void 0 : _msg$eventBody.split('@')[0])) {\n          userThatIsBeingAdded = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody2;\n\n        if (ctc.id === ((_msg$eventBody2 = msg.eventBody) === null || _msg$eventBody2 === void 0 ? void 0 : _msg$eventBody2.split('@')[0])) {\n          userThatIsBeingAdded = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, userThatIsBeingAdded || msg.eventBody || t(\"User\"), \" \", t(\"has been added!\")));\n\n    case 3:\n      let userThatIsLeaving;\n      contacts.forEach(ctc => {\n        var _msg$eventBody3;\n\n        if (ctc.id === ((_msg$eventBody3 = msg.eventBody) === null || _msg$eventBody3 === void 0 ? void 0 : _msg$eventBody3.split('@')[0])) {\n          userThatIsLeaving = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody4;\n\n        if (ctc.id === ((_msg$eventBody4 = msg.eventBody) === null || _msg$eventBody4 === void 0 ? void 0 : _msg$eventBody4.split('@')[0])) {\n          userThatIsLeaving = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, userThatIsLeaving || msg.eventBody || eventSender || t(\"User\"), \" \", t(\"has left the group!\")));\n\n    case 6:\n      let userThatIsBeingRemoved;\n      contacts.forEach(ctc => {\n        var _msg$eventBody5;\n\n        if (ctc.id === ((_msg$eventBody5 = msg.eventBody) === null || _msg$eventBody5 === void 0 ? void 0 : _msg$eventBody5.split('@')[0])) {\n          userThatIsBeingRemoved = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody6;\n\n        if (ctc.id === ((_msg$eventBody6 = msg.eventBody) === null || _msg$eventBody6 === void 0 ? void 0 : _msg$eventBody6.split('@')[0])) {\n          userThatIsBeingRemoved = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, userThatIsBeingRemoved || msg.eventBody || t(\"User\"), \" \", t(\"has been removed!\")));\n\n    case 8:\n      let userTurningAdmin;\n      contacts.forEach(ctc => {\n        var _msg$eventBody7;\n\n        if (ctc.id === ((_msg$eventBody7 = msg.eventBody) === null || _msg$eventBody7 === void 0 ? void 0 : _msg$eventBody7.split('@')[0])) {\n          userTurningAdmin = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody8;\n\n        if (ctc.id === ((_msg$eventBody8 = msg.eventBody) === null || _msg$eventBody8 === void 0 ? void 0 : _msg$eventBody8.split('@')[0])) {\n          userTurningAdmin = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, t(\"User\"), \" \", userTurningAdmin, \" \", t(\"is now an admin!\")));\n\n    case 9:\n      let userTurningMember;\n      contacts.forEach(ctc => {\n        var _msg$eventBody9;\n\n        if (ctc.id === ((_msg$eventBody9 = msg.eventBody) === null || _msg$eventBody9 === void 0 ? void 0 : _msg$eventBody9.split('@')[0])) {\n          userTurningMember = ctc.name;\n        }\n\n        ;\n      });\n      contactsOutsideUserContacts.forEach(ctc => {\n        var _msg$eventBody10;\n\n        if (ctc.id === ((_msg$eventBody10 = msg.eventBody) === null || _msg$eventBody10 === void 0 ? void 0 : _msg$eventBody10.split('@')[0])) {\n          userTurningMember = ctc.name;\n        }\n\n        ;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, t(\"User\"), \" \", userTurningMember, \" \", t(\"is now a member!\")));\n\n    case 10:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-day-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, t(\"Group info has been edited!\")));\n\n    default:\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default EventNotification;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/EventNotification.tsx"],"names":["React","useTranslation","useContact","EventNotification","msg","eventSender","userName","contacts","contactsOutsideUserContacts","t","eventId","userThatIsBeingAdded","forEach","ctc","id","eventBody","split","name","userThatIsLeaving","userThatIsBeingRemoved","userTurningAdmin","userTurningMember"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IMessage from '../alias/IMessage';\r\nimport { useContact } from '../contexts/ContactContext';\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* \r\n<div className=\"chat-day-title\">\r\n    <span className=\"title\">Evento chegou!</span>\r\n</div> \r\n*/}\r\n\r\ninterface IGroupNotification{\r\n    msg: IMessage;\r\n}\r\n\r\nconst EventNotification: React.FC<IGroupNotification> = ({ msg }) => {\r\n    let eventSender = msg.userName;\r\n    const { contacts, contactsOutsideUserContacts } = useContact();\r\n    const { t } = useTranslation();\r\n    switch(msg.eventId){\r\n        case 1:\r\n            return (\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{t(\"Group has been created!\")}</span>\r\n            </div>\r\n            ); \r\n        case 2:\r\n        let userThatIsBeingAdded: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingAdded = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingAdded = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{userThatIsBeingAdded || msg.eventBody || t(\"User\")} {t(\"has been added!\")}</span>\r\n             </div> \r\n        );\r\n        case 3:\r\n        let userThatIsLeaving: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsLeaving = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsLeaving = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{userThatIsLeaving || msg.eventBody || eventSender || t(\"User\")} {t(\"has left the group!\")}</span>\r\n            </div>\r\n        );\r\n        case 6:\r\n        let userThatIsBeingRemoved: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingRemoved = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userThatIsBeingRemoved = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{userThatIsBeingRemoved || msg.eventBody || t(\"User\")} {t(\"has been removed!\")}</span>\r\n            </div>\r\n        );\r\n        case 8: \r\n        let userTurningAdmin: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userTurningAdmin = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userTurningAdmin = ctc.name;\r\n            };\r\n        })\r\n        return(\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{t(\"User\")} {userTurningAdmin} {t(\"is now an admin!\")}</span>\r\n            </div>\r\n        )\r\n        case 9: \r\n        let userTurningMember: any;\r\n        contacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userTurningMember = ctc.name;\r\n            };\r\n        })\r\n        contactsOutsideUserContacts.forEach((ctc) => {\r\n            if(ctc.id === msg.eventBody?.split('@')[0]){\r\n                userTurningMember = ctc.name;\r\n            };\r\n        })\r\n        return (\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{t(\"User\")} {userTurningMember} {t(\"is now a member!\")}</span>\r\n            </div>\r\n        )\r\n        case 10:\r\n            return(\r\n            <div className=\"chat-day-title\">\r\n                <span className=\"title\">{t(\"Group info has been edited!\")}</span>\r\n            </div>\r\n            );\r\n        default:\r\n            return <></>    \r\n    }\r\n}\r\n\r\nexport default EventNotification;"]},"metadata":{},"sourceType":"module"}