{"ast":null,"code":"import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToObject } from '../../262';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\n/**\n * Chop off the unicode extension from the locale string.\n */\n\nfunction removeUnicodeExtensionFromLocale(canonicalLocale) {\n  var extensionIndex = canonicalLocale.indexOf('-u-');\n  return extensionIndex >= 0 ? canonicalLocale.slice(0, extensionIndex) : canonicalLocale;\n}\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\n\n\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n      localeData = _a.localeData,\n      availableLocales = _a.availableLocales,\n      numberingSystemNames = _a.numberingSystemNames,\n      getDefaultLocale = _a.getDefaultLocale,\n      currencyDigitsData = _a.currencyDigitsData; // @ts-ignore\n\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var options = opts === undefined ? Object.create(null) : ToObject(opts);\n  var opt = Object.create(null);\n  var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  opt.localeMatcher = matcher;\n  var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n\n  if (numberingSystem !== undefined && numberingSystemNames.indexOf(numberingSystem) < 0) {\n    // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n    // throw a RangeError exception.\n    throw RangeError(\"Invalid numberingSystems: \" + numberingSystem);\n  }\n\n  opt.nu = numberingSystem;\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, // [[RelevantExtensionKeys]] slot, which is a constant\n  ['nu'], localeData, getDefaultLocale);\n  var dataLocaleData = localeData[removeUnicodeExtensionFromLocale(r.locale)];\n  invariant(!!dataLocaleData, \"Missing locale data for \" + r.locale);\n  var internalSlots = getInternalSlots(nf);\n  internalSlots.locale = r.locale;\n  internalSlots.dataLocale = r.dataLocale;\n  internalSlots.numberingSystem = r.nu;\n  internalSlots.dataLocaleData = dataLocaleData;\n  SetNumberFormatUnitOptions(nf, options, {\n    getInternalSlots: getInternalSlots\n  });\n  var style = internalSlots.style;\n  var mnfdDefault;\n  var mxfdDefault;\n\n  if (style === 'currency') {\n    var currency = internalSlots.currency;\n    var cDigits = CurrencyDigits(currency, {\n      currencyDigitsData: currencyDigitsData\n    });\n    mnfdDefault = cDigits;\n    mxfdDefault = cDigits;\n  } else {\n    mnfdDefault = 0;\n    mxfdDefault = style === 'percent' ? 0 : 3;\n  }\n\n  var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n  internalSlots.notation = notation;\n  SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n  var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n\n  if (notation === 'compact') {\n    internalSlots.compactDisplay = compactDisplay;\n  }\n\n  var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n  internalSlots.useGrouping = useGrouping;\n  var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n  internalSlots.signDisplay = signDisplay;\n  return nf;\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/NumberFormat/InitializeNumberFormat.js"],"names":["CanonicalizeLocaleList","ToObject","GetOption","ResolveLocale","SetNumberFormatUnitOptions","CurrencyDigits","SetNumberFormatDigitOptions","invariant","removeUnicodeExtensionFromLocale","canonicalLocale","extensionIndex","indexOf","slice","InitializeNumberFormat","nf","locales","opts","_a","getInternalSlots","localeData","availableLocales","numberingSystemNames","getDefaultLocale","currencyDigitsData","requestedLocales","options","undefined","Object","create","opt","matcher","localeMatcher","numberingSystem","RangeError","nu","r","dataLocaleData","locale","internalSlots","dataLocale","style","mnfdDefault","mxfdDefault","currency","cDigits","notation","compactDisplay","useGrouping","signDisplay"],"mappings":"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","sourcesContent":["import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToObject } from '../../262';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\n/**\n * Chop off the unicode extension from the locale string.\n */\nfunction removeUnicodeExtensionFromLocale(canonicalLocale) {\n    var extensionIndex = canonicalLocale.indexOf('-u-');\n    return extensionIndex >= 0\n        ? canonicalLocale.slice(0, extensionIndex)\n        : canonicalLocale;\n}\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = opts === undefined ? Object.create(null) : ToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \" + numberingSystem);\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[removeUnicodeExtensionFromLocale(r.locale)];\n    invariant(!!dataLocaleData, \"Missing locale data for \" + r.locale);\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n    }\n    var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n    internalSlots.useGrouping = useGrouping;\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n    internalSlots.signDisplay = signDisplay;\n    return nf;\n}\n"]},"metadata":{},"sourceType":"module"}