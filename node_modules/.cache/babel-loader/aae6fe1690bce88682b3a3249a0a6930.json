{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\MediaTabFiles.tsx\";\nimport React, { useState } from \"react\";\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Card, Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"; //i18n\n\nimport { useTranslation } from \"react-i18next\"; //lightbox\n\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\n\nconst MediaTabFiles = ({\n  list\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"null\");\n  const {\n    t\n  } = useTranslation();\n\n  const toggleLightbox = currentImage => {\n    setIsOpen(!isOpen);\n    setCurrentImage(currentImage);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-2 border mb-2 d-flex flex-row flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, list && list.map((item, index) => item.isImageMessage || item.isVideoMessage ? /*#__PURE__*/React.createElement(Media, {\n    key: index,\n    header: \"true\",\n    className: \"align-content-end bd-highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => toggleLightbox(item.thumbnail),\n    className: \"popup-img d-inline-block m-1\",\n    title: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.thumbnail,\n    alt: item.name,\n    className: \"rounded border\",\n    style: {\n      width: 140,\n      height: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline mb-0 font-size-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"text-muted px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-download-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    className: \"text-muted px-1\",\n    tag: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-more-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    left: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, t(\"Favorite message\")), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }\n  }, t(\"Forward message\")), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, t(\"Delete\"))))))))) : null)), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: currentImage,\n    onCloseRequest: toggleLightbox,\n    imageTitle: \"Image File\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MediaTabFiles;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MediaTabFiles.tsx"],"names":["React","useState","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","Card","Media","Link","useTranslation","Lightbox","MediaTabFiles","list","isOpen","setIsOpen","currentImage","setCurrentImage","t","toggleLightbox","map","item","index","isImageMessage","isVideoMessage","thumbnail","name","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Card,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//lightbox\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nimport avatar4 from \"../assets/images/users/avatar-4.jpg\";\r\n\r\nimport IAttachedFiles from \"./../alias/IAttachedFiles\";\r\n\r\ninterface IMediaTabFiles{\r\n  list: IAttachedFiles[] | undefined; \r\n}\r\n\r\nconst MediaTabFiles: React.FC<IMediaTabFiles> = ({list}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"p-2 border mb-2 d-flex flex-row flex-wrap\">\r\n        {list && list.map((item, index) =>\r\n          item.isImageMessage || item.isVideoMessage ? (\r\n            <Media\r\n              key={index}\r\n              header=\"true\"\r\n              className=\"align-content-end bd-highlight\"\r\n            >\r\n              <div className=\"ml-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={() => toggleLightbox(item.thumbnail)}\r\n                  className=\"popup-img d-inline-block m-1\"\r\n                  title={item.name}\r\n                >\r\n                  <img\r\n                    src={item.thumbnail}\r\n                    alt={item.name}\r\n                    className=\"rounded border\"\r\n                    style={{ width: 140, height: 140 }}\r\n                  />\r\n                </Link>\r\n                <Media>\r\n                  <div className=\"ml-1\">\r\n                    <ul className=\"list-inline mb-0 font-size-18\">\r\n                      <li className=\"list-inline-item\">\r\n                        <Link to=\"#\" className=\"text-muted px-1\">\r\n                          <i className=\"ri-download-2-line\"></i>\r\n                        </Link>\r\n                      </li>\r\n                      <UncontrolledDropdown className=\"list-inline-item\">\r\n                        <DropdownToggle className=\"text-muted px-1\" tag=\"a\">\r\n                          <i className=\"ri-more-fill\"></i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu left=\"true\">\r\n                          <DropdownItem>{t(\"Favorite message\")}</DropdownItem>\r\n                          <DropdownItem>{t(\"Forward message\")}</DropdownItem>\r\n                          <DropdownItem divider />\r\n                          <DropdownItem>{t(\"Delete\")}</DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </ul>\r\n                  </div>\r\n                </Media>\r\n              </div>\r\n            </Media>\r\n          ) : null\r\n        )}\r\n      </Card>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={currentImage}\r\n          onCloseRequest={toggleLightbox}\r\n          imageTitle=\"Image File\"\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MediaTabFiles;\r\n"]},"metadata":{},"sourceType":"module"}