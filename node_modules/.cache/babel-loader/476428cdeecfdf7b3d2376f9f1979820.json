{"ast":null,"code":"import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nimport { ArrayCreate } from '../../262';\nexport function FormatRelativeTimeToParts(rtf, value, unit, implDetails) {\n  var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n  var result = ArrayCreate(0);\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    var o = {\n      type: part.type,\n      value: part.value\n    };\n\n    if ('unit' in part) {\n      o.unit = part.unit;\n    }\n\n    result.push(o);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/RelativeTimeFormat/FormatRelativeTimeToParts.js"],"names":["PartitionRelativeTimePattern","ArrayCreate","FormatRelativeTimeToParts","rtf","value","unit","implDetails","parts","result","_i","parts_1","length","part","o","type","push"],"mappings":"AAAA,SAASA,4BAAT,QAA6C,gCAA7C;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAO,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqDC,WAArD,EAAkE;AACrE,MAAIC,KAAK,GAAGP,4BAA4B,CAACG,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAmBC,WAAnB,CAAxC;AACA,MAAIE,MAAM,GAAGP,WAAW,CAAC,CAAD,CAAxB;;AACA,OAAK,IAAIQ,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGH,KAA3B,EAAkCE,EAAE,GAAGC,OAAO,CAACC,MAA/C,EAAuDF,EAAE,EAAzD,EAA6D;AACzD,QAAIG,IAAI,GAAGF,OAAO,CAACD,EAAD,CAAlB;AACA,QAAII,CAAC,GAAG;AACJC,MAAAA,IAAI,EAAEF,IAAI,CAACE,IADP;AAEJV,MAAAA,KAAK,EAAEQ,IAAI,CAACR;AAFR,KAAR;;AAIA,QAAI,UAAUQ,IAAd,EAAoB;AAChBC,MAAAA,CAAC,CAACR,IAAF,GAASO,IAAI,CAACP,IAAd;AACH;;AACDG,IAAAA,MAAM,CAACO,IAAP,CAAYF,CAAZ;AACH;;AACD,SAAOL,MAAP;AACH","sourcesContent":["import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nimport { ArrayCreate } from '../../262';\nexport function FormatRelativeTimeToParts(rtf, value, unit, implDetails) {\n    var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        var o = {\n            type: part.type,\n            value: part.value,\n        };\n        if ('unit' in part) {\n            o.unit = part.unit;\n        }\n        result.push(o);\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}