{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalForwardMessageTo.tsx\";\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, Input, ModalFooter } from \"reactstrap\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleBar from \"simplebar-react\"; //import { useChat } from \"../contexts/ChatContext\";\n\nimport SelectContactAndGroup from \"./SelectContactAndGroup\";\n\nconst ModalForwardMessageTo = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedContactAndGroup, setSelectedContactAndGroup] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const {\n    showModalForwardMessageTo,\n    setShowModalForwardMessageTo\n  } = useModal();\n  const {\n    setForwardMessageList\n  } = useChat();\n\n  const toggle = () => {\n    if (showModalForwardMessageTo) {\n      setShowModalForwardMessageTo(undefined);\n    }\n  };\n\n  const handleCheckContactAndGroup = (selected, contactAndGroup) => {\n    if (selected) {\n      let selected = selectedContactAndGroup;\n      selected.push(contactAndGroup);\n      setSelectedContactAndGroup(selected);\n    } else {\n      setSelectedContactAndGroup(selectedContactAndGroup.filter(sel => {\n        if (sel.jid === contactAndGroup.jid) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const sendMessages = () => {\n    setForwardMessageList([...selectedContactAndGroup]);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: !!showModalForwardMessageTo,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, t(\"Forward\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-2 pb-3 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-3\",\n    id: \"addgroupname-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectContactAndGroup, {\n    handleCheckContactAndGroup: handleCheckContactAndGroup,\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: sendMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, t(\"Forward\"))))));\n};\n\nexport default ModalForwardMessageTo;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalForwardMessageTo.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","CardBody","Button","Input","ModalFooter","useModal","useTranslation","SimpleBar","SelectContactAndGroup","ModalForwardMessageTo","search","setSearch","selectedContactAndGroup","setSelectedContactAndGroup","t","showModalForwardMessageTo","setShowModalForwardMessageTo","setForwardMessageList","useChat","toggle","undefined","handleCheckContactAndGroup","selected","contactAndGroup","push","filter","sel","jid","sendMessages","e","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  Input,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\n//import { useChat } from \"../contexts/ChatContext\";\r\nimport SelectContactAndGroup from \"./SelectContactAndGroup\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\n\r\nconst ModalForwardMessageTo: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedContactAndGroup, setSelectedContactAndGroup] = useState<\r\n    (IContact | IGroup)[]\r\n  >([]);\r\n  const { t } = useTranslation();\r\n  const {\r\n    showModalForwardMessageTo,\r\n    setShowModalForwardMessageTo,\r\n  } = useModal();\r\n  const {  setForwardMessageList  } = useChat();\r\n  const toggle = () => {\r\n    if (showModalForwardMessageTo) {\r\n      setShowModalForwardMessageTo(undefined);\r\n    }\r\n  };\r\n\r\n  const handleCheckContactAndGroup = (\r\n    selected: boolean,\r\n    contactAndGroup: (IContact | IGroup)\r\n  ) => {\r\n    if (selected) {\r\n      let selected = selectedContactAndGroup;\r\n      selected.push(contactAndGroup);\r\n      setSelectedContactAndGroup(selected);\r\n    } else {\r\n      setSelectedContactAndGroup(\r\n        selectedContactAndGroup.filter((sel) => {\r\n          if (sel.jid === contactAndGroup.jid) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const sendMessages = () => {\r\n    setForwardMessageList([...selectedContactAndGroup]);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalForwardMessageTo}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Forward\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectContactAndGroup\r\n                handleCheckContactAndGroup={handleCheckContactAndGroup}\r\n                search={search}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button color=\"default\" onClick={toggle}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button color=\"primary\" onClick={sendMessages}>\r\n              {t(\"Forward\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForwardMessageTo;\r\n"]},"metadata":{},"sourceType":"module"}