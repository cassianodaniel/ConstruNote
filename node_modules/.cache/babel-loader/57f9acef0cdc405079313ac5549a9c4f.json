{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import SquadChatCommunicator from\"./SquadChatCommunicator\";import API from\"@digivox/apicommunicator\";import{getAuthorization}from\"./utils/localStorageUtils\";import SettingsBusiness from\"./business/Settings\";import ContactsBusiness from\"./business/Contacts\";import GroupsBusiness from\"./business/Groups\";import ChatsBusiness from\"./business/Chats\";import MessagesBusiness from\"./business/Messages\";import UserBusiness from\"./business/User\";import AttachmentsBusiness from\"./business/Attachments\";import SquadVoiceCommunicator from\"./SquadVoiceCommunicator\";import ConferencesBusiness from\"./business/Conferences\";export var SquadCommunicator=/*#__PURE__*/function(){function SquadCommunicator(){_classCallCheck(this,SquadCommunicator);}_createClass(SquadCommunicator,[{key:\"updateChatSubscribeFuncition\",value:function updateChatSubscribeFuncition(chatCommunicatorSubscribe){var _this$chat,_this$chat2;(_this$chat=this.chat)===null||_this$chat===void 0?void 0:_this$chat.removeAllSubscription();(_this$chat2=this.chat)===null||_this$chat2===void 0?void 0:_this$chat2.subscribe(chatCommunicatorSubscribe);}},{key:\"updateVoiceSubscribeFunction\",value:function updateVoiceSubscribeFunction(voiceCB){var _this$sip,_this$sip2;(_this$sip=this.sip)===null||_this$sip===void 0?void 0:_this$sip.removeAllSubscription();(_this$sip2=this.sip)===null||_this$sip2===void 0?void 0:_this$sip2.subscribe(voiceCB);}// -- Make Services --\n},{key:\"makeAPI\",value:function makeAPI(){var authorization=getAuthorization();if(authorization){var api=new API({token:authorization.access_token,apiUrl:authorization.baseUrl});this.api=api;this.makeBusiness();}}},{key:\"makeBusiness\",value:function makeBusiness(){if(!this.api)return;this.settings=new SettingsBusiness(this.api);this.user=new UserBusiness(this.api,this.settings);this.contacts=new ContactsBusiness(this.api,this.settings);this.groups=new GroupsBusiness(this.api,this.settings,this.contacts);this.conferences=new ConferencesBusiness(this.api,this.settings);this.chats=new ChatsBusiness(this.api,this.contacts,this.groups,this.user);this.messages=new MessagesBusiness(this.api,this.contacts,this.groups,this.user);this.attachments=new AttachmentsBusiness(this.api,this.settings);this.chat=new SquadChatCommunicator(this.settings,this.contacts,this.groups,this.user,this.interfaceChatCommunicatorSubscribe);this.sip=new SquadVoiceCommunicator(this.settings,this.interfaceVoiceCommunicatorSubscribe);}}],[{key:\"getInstance\",value:function getInstance(callbacks){if(!this.instance){this.instance=new SquadCommunicator();this.instance.makeAPI();}callbacks.chatCommunicatorSubscribe&&this.instance.updateChatSubscribeFuncition(callbacks.chatCommunicatorSubscribe);callbacks.voiceCB&&this.instance.updateVoiceSubscribeFunction(callbacks.voiceCB);return this.instance;}}]);return SquadCommunicator;}();SquadCommunicator.instance=void 0;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadCommunicatorService.ts"],"names":["SquadChatCommunicator","API","getAuthorization","SettingsBusiness","ContactsBusiness","GroupsBusiness","ChatsBusiness","MessagesBusiness","UserBusiness","AttachmentsBusiness","SquadVoiceCommunicator","ConferencesBusiness","SquadCommunicator","chatCommunicatorSubscribe","chat","removeAllSubscription","subscribe","voiceCB","sip","authorization","api","token","access_token","apiUrl","baseUrl","makeBusiness","settings","user","contacts","groups","conferences","chats","messages","attachments","interfaceChatCommunicatorSubscribe","interfaceVoiceCommunicatorSubscribe","callbacks","instance","makeAPI","updateChatSubscribeFuncition","updateVoiceSubscribeFunction"],"mappings":"8VAAA,MAAOA,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,0BAAhB,CAGA,OAASC,gBAAT,KAAiC,2BAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,CAqBA,UAAaC,CAAAA,iBAAb,+MAgBIC,yBAhBJ,CAiBI,4BACA,iBAAKC,IAAL,gDAAWC,qBAAX,GACA,kBAAKD,IAAL,kDAAWE,SAAX,CAAqBH,yBAArB,EACD,CApBH,kFAqB+BI,OArB/B,CAqBiD,0BAC7C,gBAAKC,GAAL,8CAAUH,qBAAV,GACA,iBAAKG,GAAL,gDAAUF,SAAV,CAAoBC,OAApB,EACD,CACD;AAzBF,yCA0BY,CACR,GAAME,CAAAA,aAAa,CAAGjB,gBAAgB,EAAtC,CACA,GAAIiB,aAAJ,CAAmB,CACjB,GAAMC,CAAAA,GAAG,CAAG,GAAInB,CAAAA,GAAJ,CAAQ,CAClBoB,KAAK,CAAEF,aAAa,CAACG,YADH,CAElBC,MAAM,CAAEJ,aAAa,CAACK,OAFJ,CAAR,CAAZ,CAIA,KAAKJ,GAAL,CAAWA,GAAX,CACA,KAAKK,YAAL,GACD,CACF,CApCH,mDAqCiB,CACb,GAAI,CAAC,KAAKL,GAAV,CAAe,OACf,KAAKM,QAAL,CAAgB,GAAIvB,CAAAA,gBAAJ,CAAqB,KAAKiB,GAA1B,CAAhB,CACA,KAAKO,IAAL,CAAY,GAAInB,CAAAA,YAAJ,CAAiB,KAAKY,GAAtB,CAA2B,KAAKM,QAAhC,CAAZ,CACA,KAAKE,QAAL,CAAgB,GAAIxB,CAAAA,gBAAJ,CAAqB,KAAKgB,GAA1B,CAA+B,KAAKM,QAApC,CAAhB,CACA,KAAKG,MAAL,CAAc,GAAIxB,CAAAA,cAAJ,CAAmB,KAAKe,GAAxB,CAA6B,KAAKM,QAAlC,CAA4C,KAAKE,QAAjD,CAAd,CACA,KAAKE,WAAL,CAAmB,GAAInB,CAAAA,mBAAJ,CAAwB,KAAKS,GAA7B,CAAkC,KAAKM,QAAvC,CAAnB,CACA,KAAKK,KAAL,CAAa,GAAIzB,CAAAA,aAAJ,CACX,KAAKc,GADM,CAEX,KAAKQ,QAFM,CAGX,KAAKC,MAHM,CAIX,KAAKF,IAJM,CAAb,CAMA,KAAKK,QAAL,CAAgB,GAAIzB,CAAAA,gBAAJ,CACd,KAAKa,GADS,CAEd,KAAKQ,QAFS,CAGd,KAAKC,MAHS,CAId,KAAKF,IAJS,CAAhB,CAMA,KAAKM,WAAL,CAAmB,GAAIxB,CAAAA,mBAAJ,CAAwB,KAAKW,GAA7B,CAAkC,KAAKM,QAAvC,CAAnB,CACA,KAAKZ,IAAL,CAAY,GAAId,CAAAA,qBAAJ,CACV,KAAK0B,QADK,CAEV,KAAKE,QAFK,CAGV,KAAKC,MAHK,CAIV,KAAKF,IAJK,CAKV,KAAKO,kCALK,CAAZ,CAOA,KAAKhB,GAAL,CAAW,GAAIR,CAAAA,sBAAJ,CACT,KAAKgB,QADI,CAET,KAAKS,mCAFI,CAAX,CAID,CApEH,kDAEqBC,SAFrB,CAEqD,CACjD,GAAI,CAAC,KAAKC,QAAV,CAAoB,CAClB,KAAKA,QAAL,CAAgB,GAAIzB,CAAAA,iBAAJ,EAAhB,CACA,KAAKyB,QAAL,CAAcC,OAAd,GACD,CACDF,SAAS,CAACvB,yBAAV,EACE,KAAKwB,QAAL,CAAcE,4BAAd,CACEH,SAAS,CAACvB,yBADZ,CADF,CAIAuB,SAAS,CAACnB,OAAV,EACE,KAAKoB,QAAL,CAAcG,4BAAd,CAA2CJ,SAAS,CAACnB,OAArD,CADF,CAEA,MAAO,MAAKoB,QAAZ,CACD,CAdH,iCAAazB,iB,CACIyB,Q","sourcesContent":["import SquadChatCommunicator from \"./SquadChatCommunicator\";\r\nimport API from \"@digivox/apicommunicator\";\r\nimport { SubscriptionCallBack } from \"./types\";\r\nimport { SubscriptionCallBack as VoiceCB } from \"./voice/types\";\r\nimport { getAuthorization } from \"./utils/localStorageUtils\";\r\nimport SettingsBusiness from \"./business/Settings\";\r\nimport ContactsBusiness from \"./business/Contacts\";\r\nimport GroupsBusiness from \"./business/Groups\";\r\nimport ChatsBusiness from \"./business/Chats\";\r\nimport MessagesBusiness from \"./business/Messages\";\r\nimport UserBusiness from \"./business/User\";\r\nimport AttachmentsBusiness from \"./business/Attachments\";\r\nimport SquadVoiceCommunicator from \"./SquadVoiceCommunicator\";\r\nimport ConferencesBusiness from \"./business/Conferences\";\r\ninterface CommicatorCallbacks {\r\n  chatCommunicatorSubscribe?: SubscriptionCallBack;\r\n  voiceCB?: VoiceCB;\r\n}\r\nexport interface SquadCommunicator {\r\n  interfaceChatCommunicatorSubscribe: SubscriptionCallBack;\r\n  interfaceVoiceCommunicatorSubscribe: VoiceCB;\r\n  getInstance(): SquadCommunicator;\r\n  api: API | undefined;\r\n  chat: SquadChatCommunicator | undefined;\r\n  settings: SettingsBusiness;\r\n  contacts: ContactsBusiness;\r\n  groups: GroupsBusiness;\r\n  chats: ChatsBusiness;\r\n  conferences: ConferencesBusiness;\r\n  messages: MessagesBusiness;\r\n  user: UserBusiness;\r\n  attachments: AttachmentsBusiness;\r\n  sip: SquadVoiceCommunicator;\r\n}\r\nexport class SquadCommunicator {\r\n  private static instance: SquadCommunicator | undefined;\r\n  static getInstance(callbacks: CommicatorCallbacks) {\r\n    if (!this.instance) {\r\n      this.instance = new SquadCommunicator();\r\n      this.instance.makeAPI();\r\n    }\r\n    callbacks.chatCommunicatorSubscribe &&\r\n      this.instance.updateChatSubscribeFuncition(\r\n        callbacks.chatCommunicatorSubscribe\r\n      );\r\n    callbacks.voiceCB &&\r\n      this.instance.updateVoiceSubscribeFunction(callbacks.voiceCB);\r\n    return this.instance;\r\n  }\r\n  updateChatSubscribeFuncition(\r\n    chatCommunicatorSubscribe: SubscriptionCallBack\r\n  ) {\r\n    this.chat?.removeAllSubscription();\r\n    this.chat?.subscribe(chatCommunicatorSubscribe);\r\n  }\r\n  updateVoiceSubscribeFunction(voiceCB: VoiceCB) {\r\n    this.sip?.removeAllSubscription();\r\n    this.sip?.subscribe(voiceCB);\r\n  }\r\n  // -- Make Services --\r\n  makeAPI() {\r\n    const authorization = getAuthorization();\r\n    if (authorization) {\r\n      const api = new API({\r\n        token: authorization.access_token,\r\n        apiUrl: authorization.baseUrl,\r\n      });\r\n      this.api = api;\r\n      this.makeBusiness();\r\n    }\r\n  }\r\n  makeBusiness() {\r\n    if (!this.api) return;\r\n    this.settings = new SettingsBusiness(this.api);\r\n    this.user = new UserBusiness(this.api, this.settings);\r\n    this.contacts = new ContactsBusiness(this.api, this.settings);\r\n    this.groups = new GroupsBusiness(this.api, this.settings, this.contacts);\r\n    this.conferences = new ConferencesBusiness(this.api, this.settings);\r\n    this.chats = new ChatsBusiness(\r\n      this.api,\r\n      this.contacts,\r\n      this.groups,\r\n      this.user\r\n    );\r\n    this.messages = new MessagesBusiness(\r\n      this.api,\r\n      this.contacts,\r\n      this.groups,\r\n      this.user\r\n    );\r\n    this.attachments = new AttachmentsBusiness(this.api, this.settings);\r\n    this.chat = new SquadChatCommunicator(\r\n      this.settings,\r\n      this.contacts,\r\n      this.groups,\r\n      this.user,\r\n      this.interfaceChatCommunicatorSubscribe\r\n    );\r\n    this.sip = new SquadVoiceCommunicator(\r\n      this.settings,\r\n      this.interfaceVoiceCommunicatorSubscribe\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}