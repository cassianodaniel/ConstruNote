{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\SettingTab.tsx\";\nimport React, { useRef, useState } from \"react\";\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle, Card, Button, InputGroup, InputGroupAddon, Input, Tooltip } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\"; //Import components\n\nimport CustomCollapse from \"./CustomCollapse\"; //Import Images\n\nimport avatar1 from \"./../assets/images/users/avatar-1.jpg\"; //i18n\n\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ModalChangePassword } from \"./ModalChangePassword\";\nimport { isExtensionLine } from './../services/utils/parseUtils';\nimport { useModal } from \"./../contexts/ModalContext\";\nimport ModalEditInfo from \"./ModalEditInfo\";\nimport { getUserStatusName } from \"../helpers/StatusUtils\";\nimport ModalConfigDevices from \"./ModalConfigDevices\";\nimport Swal from \"sweetalert2\";\n\nfunction SettingTab() {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const [isOpen3, setIsOpen3] = useState(false);\n  const [busy, setBusy] = useState(\"\");\n  const [noAnswer, setNoAnswer] = useState(\"\");\n  const [notRegistered, setNotRegistered] = useState(\"\");\n  const [followMeAlways, setFollowMeAlways] = useState(\"\");\n  const [lockedBusyInput, setLockedBusyInput] = useState(true);\n  const [lockedNoAnswerInput, setLockedNoAnswerInput] = useState(true);\n  const [lockedNotRegisteredInput, setLockedNotRegisteredInput] = useState(true);\n  const [lockedFollowMeAlwaysInput, setLockedFollowMeAlwaysInput] = useState(true);\n  const inputSearch = useRef(null);\n\n  const focus = () => {\n    var _inputSearch$current;\n\n    (_inputSearch$current = inputSearch.current) === null || _inputSearch$current === void 0 ? void 0 : _inputSearch$current.focus();\n  };\n\n  const [display1, setDisplay1] = useState(false);\n  const [display2, setDisplay2] = useState(false);\n  const [display3, setDisplay3] = useState(false);\n  const [display4, setDisplay4] = useState(false);\n  const {\n    user,\n    setUser\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const {\n    setShowModalEditInfo,\n    setShowModalChangePassword,\n    setShowModalDevicesConfig\n  } = useModal();\n\n  const circleColor = () => {\n    if (user.status === \"online\") return \"text-success\";else if (user.status === \"away\") return \"text-warning\";else return \"text-danger\";\n  };\n\n  const toggleCollapse1 = () => {\n    setIsOpen1(!isOpen1);\n    setIsOpen2(false);\n    setIsOpen3(false);\n  };\n\n  const toggleCollapse2 = () => {\n    setIsOpen1(false);\n    setIsOpen2(!isOpen2);\n    setIsOpen3(false);\n  };\n\n  const toggleCollapse3 = () => {\n    setIsOpen1(false);\n    setIsOpen2(false);\n    setIsOpen3(!isOpen3);\n  };\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n\n  const setUserStatus = status => {\n    setUser({ ...user,\n      status\n    });\n  };\n\n  const [tooltipOpen1, setTooltipOpen1] = useState(false);\n  const [tooltipOpen2, setTooltipOpen2] = useState(false);\n  const [tooltipOpen3, setTooltipOpen3] = useState(false);\n  const [tooltipOpen4, setTooltipOpen4] = useState(false);\n\n  const toggleTooltip1 = () => setTooltipOpen1(!tooltipOpen1);\n\n  const toggleTooltip2 = () => setTooltipOpen2(!tooltipOpen2);\n\n  const toggleTooltip3 = () => setTooltipOpen3(!tooltipOpen3);\n\n  const toggleTooltip4 = () => setTooltipOpen4(!tooltipOpen4);\n  /* const isThisStringNotEmpty = (value: string) => {\r\n    if(value !== \"\"){\r\n      return true;\r\n    }else{\r\n      return false\r\n    }\r\n  } */\n\n\n  const clearInputs = () => {\n    setBusy(\"\");\n    setNoAnswer(\"\");\n    setNotRegistered(\"\");\n    setFollowMeAlways(\"\");\n  };\n\n  const lockAllInputs = () => {\n    setLockedBusyInput(true);\n    setLockedNoAnswerInput(true);\n    setLockedNotRegisteredInput(true);\n    setLockedFollowMeAlwaysInput(true);\n  };\n\n  const isEveryInputLocked = () => {\n    if (lockedBusyInput === true && lockedNoAnswerInput === true && lockedNotRegisteredInput === true && lockedFollowMeAlwaysInput === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const isEveryDataEmpty = () => {\n    if (busy === \"\" && noAnswer === \"\" && notRegistered === \"\" && followMeAlways === \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalChangePassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4 pt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, t(\"Settings\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center border-bottom p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4 profile-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.profilePicture || avatar1,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"light\",\n    className: \"avatar-xs p-0 rounded-circle profile-photo-edit\",\n    onClick: () => setShowModalEditInfo(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-pencil-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-16 mb-1 text-truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, user.name), /*#__PURE__*/React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    className: \"d-inline-block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    tag: \"a\",\n    className: \"text-muted pb-1 d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `ri-record-circle-fill font-size-10 ${circleColor()} mr-1 d-inline-block`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), \" \", t(getUserStatusName(user.status)), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mdi mdi-chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setUserStatus(\"online\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, t(\"Online\")), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setUserStatus(\"away\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, t(\"Away\")), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setUserStatus(\"dnd\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, t(\"Do not Disturb\"))))), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"p-4 user-profile-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-setting-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-none border mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCollapse, {\n    title: \"Personal Info\",\n    isOpen: isOpen1,\n    iconClass: \"\",\n    toggleCollapse: toggleCollapse1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowModalEditInfo(true),\n    color: \"light\",\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-fill mr-1 align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }), \" \", t(\"Edit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, t(\"Name\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowModalChangePassword(true),\n    color: \"light\",\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-fill mr-1 align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }), \" \", t(\"Edit security\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, t(\"Email\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, user.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, t(\"Number\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, user.number))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-setting-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-none border mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCollapse, {\n    title: t(\"Devices Settings\"),\n    isOpen: isOpen2,\n    iconClass: \"\",\n    toggleCollapse: toggleCollapse2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    size: \"sm\",\n    type: \"button\",\n    block: true,\n    onClick: () => {\n      setShowModalDevicesConfig(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-fill mr-1 align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }), \" \", t(\"Change devices settings\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-setting-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-none border mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCollapse, {\n    title: t(\"Telephone Extension Line Settings\"),\n    isOpen: isOpen3,\n    iconClass: \"\",\n    toggleCollapse: toggleCollapse3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, t(\"Follow me\") + \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-1 mt-3 text-muted\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, t(\"On busy\") + \":\", /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TooltipExample1\",\n    className: \"ml-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"?\",\n    src: require(\"./../assets/images/doubt.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, lockedBusyInput === false ? /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#6a7fc0\",\n      border: \"none\"\n    },\n    onClick: () => {\n      setLockedBusyInput(!lockedBusyInput);\n      setBusy(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    className: \"ri-check-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#e1ecfb\",\n      border: \"none\"\n    },\n    onClick: () => {\n      setLockedBusyInput(!lockedBusyInput);\n      focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }))), lockedBusyInput ? /*#__PURE__*/React.createElement(Input, {\n    value: busy,\n    placeholder: t(\"Destination\"),\n    innerRef: inputSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    value: busy,\n    placeholder: t(\"Destination\"),\n    onChange: e => setBusy(isExtensionLine(e.target.value)),\n    onFocus: () => setDisplay1(true),\n    onBlur: () => setDisplay1(false),\n    id: 'search',\n    innerRef: inputSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  }), display1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 21\n    }\n  }, t(\"Please enter only characters between 0-9, * and #.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-1 mt-3 text-muted\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, t(\"On no answer\") + \":\", /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TooltipExample2\",\n    className: \"ml-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"?\",\n    src: require(\"./../assets/images/doubt.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  }, lockedNoAnswerInput === false ? /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#6a7fc0\",\n      border: \"none\"\n    },\n    onClick: () => {\n      setLockedNoAnswerInput(!lockedNoAnswerInput);\n      setNoAnswer(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    className: \"ri-check-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#e1ecfb\",\n      border: \"none\"\n    },\n    onClick: () => setLockedNoAnswerInput(!lockedNoAnswerInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 25\n    }\n  }))), lockedNoAnswerInput ? /*#__PURE__*/React.createElement(Input, {\n    value: noAnswer,\n    placeholder: t(\"Destination\"),\n    onClick: () => setLockedNoAnswerInput(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    value: noAnswer,\n    placeholder: t(\"Destination\"),\n    onChange: e => setNoAnswer(isExtensionLine(e.target.value)),\n    onFocus: () => setDisplay2(true),\n    onBlur: () => setDisplay2(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }), display2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 21\n    }\n  }, t(\"Please enter only characters between 0-9, * and #.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-1 mt-3 text-muted\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, t(\"When not registered\") + ':', /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TooltipExample3\",\n    className: \"ml-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"?\",\n    src: require(\"./../assets/images/doubt.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }, lockedNotRegisteredInput === false ? /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#6a7fc0\",\n      border: \"none\"\n    },\n    onClick: () => {\n      setLockedNotRegisteredInput(!lockedNotRegisteredInput);\n      setNotRegistered(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    className: \"ri-check-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#e1ecfb\",\n      border: \"none\"\n    },\n    onClick: () => setLockedNotRegisteredInput(!lockedNotRegisteredInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }))), lockedNotRegisteredInput ? /*#__PURE__*/React.createElement(Input, {\n    value: notRegistered,\n    placeholder: t(\"Destination\"),\n    onClick: () => setLockedNotRegisteredInput(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    value: notRegistered,\n    placeholder: t(\"Destination\"),\n    onChange: e => setNotRegistered(isExtensionLine(e.target.value)),\n    onFocus: () => setDisplay3(true),\n    onBlur: () => setDisplay3(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 21\n    }\n  }), display3 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 21\n    }\n  }, t(\"Please enter only characters between 0-9, * and #.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-1 mt-3 text-muted\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 19\n    }\n  }, t(\"Always\") + ':', /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TooltipExample4\",\n    className: \"ml-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"?\",\n    src: require(\"./../assets/images/doubt.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 19\n    }\n  }, lockedFollowMeAlwaysInput === false ? /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#6a7fc0\",\n      border: \"none\"\n    },\n    onClick: () => {\n      setLockedFollowMeAlwaysInput(!lockedFollowMeAlwaysInput);\n      setFollowMeAlways(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    className: \"ri-check-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"#e1ecfb\",\n      border: \"none\"\n    },\n    onClick: () => setLockedFollowMeAlwaysInput(!lockedFollowMeAlwaysInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 25\n    }\n  }))), lockedFollowMeAlwaysInput ? /*#__PURE__*/React.createElement(Input, {\n    value: followMeAlways,\n    placeholder: t(\"Destination\"),\n    onClick: () => setLockedFollowMeAlwaysInput(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    value: followMeAlways,\n    placeholder: t(\"Destination\"),\n    onChange: e => setFollowMeAlways(isExtensionLine(e.target.value)),\n    onFocus: () => setDisplay4(true),\n    onBlur: () => setDisplay4(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 21\n    }\n  }), display4 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 21\n    }\n  }, t(\"Please enter only characters between 0-9, * and #.\"))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen1,\n    target: \"TooltipExample1\",\n    toggle: toggleTooltip1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 17\n    }\n  }, t(\"When the extension is busy the call will be forwarded to the extension indicated below\")), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen2,\n    target: \"TooltipExample2\",\n    toggle: toggleTooltip2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 17\n    }\n  }, t(\"When the extension does not answer the call it will be forwarded to the extension indicated below\")), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen3,\n    target: \"TooltipExample3\",\n    toggle: toggleTooltip3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 17\n    }\n  }, t(\"When the extension is not registered with the PABX the call it will be forwarded to the extension indicated below\")), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen4,\n    target: \"TooltipExample4\",\n    toggle: toggleTooltip4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 17\n    }\n  }, t(\"When enabling follow-me always, all calls will be forwarded to the indicated number\")), isEveryDataEmpty() || isEveryInputLocked() ? /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    size: \"sm\",\n    type: \"button\",\n    block: true,\n    disabled: true,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 19\n    }\n  }, t(\"Save\")) : /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    size: \"sm\",\n    type: \"button\",\n    block: true,\n    onClick: () => {\n      Swal.fire({\n        title: \"Agora, consulta-se a API para pegar o status atual de configuração!\",\n        //Romero, para facilitar: os states utilizados foram: {busy, noAnswer, notRegistered, followMeAlways}\n        showClass: {\n          popup: \"animate__animated animate__fadeInDown\"\n        },\n        hideClass: {\n          popup: \"animate__animated animate__fadeOutUp\"\n        }\n      });\n      clearInputs();\n      lockAllInputs();\n    },\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 19\n    }\n  }, t(\"Save\"))))))), /*#__PURE__*/React.createElement(ModalEditInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalConfigDevices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SettingTab;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SettingTab.tsx"],"names":["React","useRef","useState","Dropdown","DropdownMenu","DropdownItem","DropdownToggle","Card","Button","InputGroup","InputGroupAddon","Input","Tooltip","SimpleBar","CustomCollapse","avatar1","useTranslation","useAuth","ModalChangePassword","isExtensionLine","useModal","ModalEditInfo","getUserStatusName","ModalConfigDevices","Swal","SettingTab","dropdownOpen","setDropdownOpen","isOpen1","setIsOpen1","isOpen2","setIsOpen2","isOpen3","setIsOpen3","busy","setBusy","noAnswer","setNoAnswer","notRegistered","setNotRegistered","followMeAlways","setFollowMeAlways","lockedBusyInput","setLockedBusyInput","lockedNoAnswerInput","setLockedNoAnswerInput","lockedNotRegisteredInput","setLockedNotRegisteredInput","lockedFollowMeAlwaysInput","setLockedFollowMeAlwaysInput","inputSearch","focus","current","display1","setDisplay1","display2","setDisplay2","display3","setDisplay3","display4","setDisplay4","user","setUser","t","setShowModalEditInfo","setShowModalChangePassword","setShowModalDevicesConfig","circleColor","status","toggleCollapse1","toggleCollapse2","toggleCollapse3","toggle","setUserStatus","tooltipOpen1","setTooltipOpen1","tooltipOpen2","setTooltipOpen2","tooltipOpen3","setTooltipOpen3","tooltipOpen4","setTooltipOpen4","toggleTooltip1","toggleTooltip2","toggleTooltip3","toggleTooltip4","clearInputs","lockAllInputs","isEveryInputLocked","isEveryDataEmpty","profilePicture","name","maxHeight","email","number","display","flexDirection","alignItems","require","backgroundColor","border","fontWeight","color","e","target","value","fontSize","fire","title","showClass","popup","hideClass"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//Import components\r\nimport CustomCollapse from \"./CustomCollapse\";\r\n\r\n//Import Images\r\nimport avatar1 from \"./../assets/images/users/avatar-1.jpg\";\r\n\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { ModalChangePassword } from \"./ModalChangePassword\";\r\nimport { isExtensionLine } from './../services/utils/parseUtils';\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport ModalEditInfo from \"./ModalEditInfo\";\r\nimport { getUserStatusName } from \"../helpers/StatusUtils\";\r\nimport ModalConfigDevices from \"./ModalConfigDevices\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction SettingTab() {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const [isOpen3, setIsOpen3] = useState(false);\r\n\r\n  const [busy, setBusy] = useState(\"\");\r\n  const [noAnswer, setNoAnswer] = useState(\"\");\r\n  const [notRegistered, setNotRegistered] = useState(\"\");\r\n  const [followMeAlways, setFollowMeAlways] = useState(\"\");\r\n\r\n  const [lockedBusyInput, setLockedBusyInput] = useState(true);\r\n  const [lockedNoAnswerInput, setLockedNoAnswerInput] = useState(true);\r\n  const [lockedNotRegisteredInput, setLockedNotRegisteredInput] = useState(\r\n    true\r\n  );\r\n  const [lockedFollowMeAlwaysInput, setLockedFollowMeAlwaysInput] = useState(\r\n    true\r\n  );\r\n\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  const focus = () => {\r\n    inputSearch.current?.focus();\r\n  }\r\n\r\n  const [display1, setDisplay1] = useState(false);\r\n  const [display2, setDisplay2] = useState(false);\r\n  const [display3, setDisplay3] = useState(false);\r\n  const [display4, setDisplay4] = useState(false);\r\n\r\n  const { user, setUser } = useAuth();\r\n  const { t } = useTranslation();\r\n  const {\r\n    setShowModalEditInfo,\r\n    setShowModalChangePassword,\r\n    setShowModalDevicesConfig,\r\n  } = useModal();\r\n\r\n  const circleColor = () => {\r\n    if (user.status === \"online\") return \"text-success\";\r\n    else if (user.status === \"away\") return \"text-warning\";\r\n    else return \"text-danger\";\r\n  };\r\n\r\n  const toggleCollapse1 = () => {\r\n    setIsOpen1(!isOpen1);\r\n    setIsOpen2(false);\r\n    setIsOpen3(false);\r\n  };\r\n  const toggleCollapse2 = () => {\r\n    setIsOpen1(false);\r\n    setIsOpen2(!isOpen2);\r\n    setIsOpen3(false);\r\n  };\r\n  const toggleCollapse3 = () => {\r\n    setIsOpen1(false);\r\n    setIsOpen2(false);\r\n    setIsOpen3(!isOpen3);\r\n  };\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const setUserStatus = (status: string) => {\r\n    setUser({ ...user, status });\r\n  };\r\n\r\n  const [tooltipOpen1, setTooltipOpen1] = useState(false);\r\n  const [tooltipOpen2, setTooltipOpen2] = useState(false);\r\n  const [tooltipOpen3, setTooltipOpen3] = useState(false);\r\n  const [tooltipOpen4, setTooltipOpen4] = useState(false);\r\n\r\n  const toggleTooltip1 = () => setTooltipOpen1(!tooltipOpen1);\r\n  const toggleTooltip2 = () => setTooltipOpen2(!tooltipOpen2);\r\n  const toggleTooltip3 = () => setTooltipOpen3(!tooltipOpen3);\r\n  const toggleTooltip4 = () => setTooltipOpen4(!tooltipOpen4);\r\n\r\n  /* const isThisStringNotEmpty = (value: string) => {\r\n    if(value !== \"\"){\r\n      return true;\r\n    }else{\r\n      return false\r\n    }\r\n  } */\r\n\r\n  const clearInputs = () => {\r\n    setBusy(\"\");\r\n    setNoAnswer(\"\");\r\n    setNotRegistered(\"\");\r\n    setFollowMeAlways(\"\");\r\n  };\r\n\r\n  const lockAllInputs = () => {\r\n    setLockedBusyInput(true);\r\n    setLockedNoAnswerInput(true);\r\n    setLockedNotRegisteredInput(true);\r\n    setLockedFollowMeAlwaysInput(true);\r\n  };\r\n\r\n  const isEveryInputLocked = () => {\r\n    if (\r\n      lockedBusyInput === true &&\r\n      lockedNoAnswerInput === true &&\r\n      lockedNotRegisteredInput === true &&\r\n      lockedFollowMeAlwaysInput === true\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const isEveryDataEmpty = () => {\r\n    if (\r\n      busy === \"\" &&\r\n      noAnswer === \"\" &&\r\n      notRegistered === \"\" &&\r\n      followMeAlways === \"\"\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ModalChangePassword />\r\n      <div>\r\n        <div className=\"px-4 pt-4\">\r\n          <h4 className=\"mb-0\">{t(\"Settings\")}</h4>\r\n        </div>\r\n\r\n        <div className=\"text-center border-bottom p-4\">\r\n          <div className=\"mb-4 profile-user\">\r\n            <img\r\n              src={user.profilePicture || avatar1}\r\n              className=\"rounded-circle avatar-lg img-thumbnail\"\r\n              alt=\"chatvia\"\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              color=\"light\"\r\n              className=\"avatar-xs p-0 rounded-circle profile-photo-edit\"\r\n              onClick={() => setShowModalEditInfo(true)}\r\n            >\r\n              <i className=\"ri-pencil-fill\"></i>\r\n            </Button>\r\n          </div>\r\n          <h5 className=\"font-size-16 mb-1 text-truncate\">{user.name}</h5>\r\n          <Dropdown\r\n            isOpen={dropdownOpen}\r\n            toggle={toggle}\r\n            className=\"d-inline-block mb-1\"\r\n          >\r\n            <DropdownToggle tag=\"a\" className=\"text-muted pb-1 d-block\">\r\n              <i\r\n                className={`ri-record-circle-fill font-size-10 ${circleColor()} mr-1 d-inline-block`}\r\n              ></i>{\" \"}\r\n              {t(getUserStatusName(user.status))}{\" \"}\r\n              <i className=\"mdi mdi-chevron-down\"></i>\r\n            </DropdownToggle>\r\n\r\n            <DropdownMenu>\r\n              <DropdownItem\r\n                onClick={() => {\r\n                  setUserStatus(\"online\");\r\n                }}\r\n              >\r\n                {t(\"Online\")}\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                onClick={() => {\r\n                  setUserStatus(\"away\");\r\n                }}\r\n              >\r\n                {t(\"Away\")}\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                onClick={() => {\r\n                  setUserStatus(\"dnd\");\r\n                }}\r\n              >\r\n                {t(\"Do not Disturb\")}\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </div>\r\n        {/* End profile user */}\r\n\r\n        {/* Start User profile description */}\r\n        <SimpleBar\r\n          style={{ maxHeight: \"100%\" }}\r\n          className=\"p-4 user-profile-desc\"\r\n        >\r\n          <div id=\"profile-setting-accordion\" className=\"custom-accordion\">\r\n            <Card className=\"shadow-none border mb-2\">\r\n              <CustomCollapse\r\n                title=\"Personal Info\"\r\n                isOpen={isOpen1}\r\n                iconClass=\"\"\r\n                toggleCollapse={toggleCollapse1}\r\n              >\r\n                <div className=\"float-right\">\r\n                  <Button\r\n                    onClick={() => setShowModalEditInfo(true)}\r\n                    color=\"light\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                  >\r\n                    <i className=\"ri-edit-fill mr-1 align-middle\"></i>{\" \"}\r\n                    {t(\"Edit\")}\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-muted mb-1\">{t(\"Name\")}</p>\r\n                  <h5 className=\"font-size-14\">{user.name}</h5>\r\n                </div>\r\n                <div className=\"float-right\">\r\n                  <Button\r\n                    onClick={() => setShowModalChangePassword(true)}\r\n                    color=\"light\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                  >\r\n                    <i className=\"ri-edit-fill mr-1 align-middle\"></i>{\" \"}\r\n                    {t(\"Edit security\")}\r\n                  </Button>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <p className=\"text-muted mb-1\">{t(\"Email\")}</p>\r\n                  <h5 className=\"font-size-14\">{user.email}</h5>\r\n                </div>\r\n\r\n                <div className=\"mt-4\">\r\n                  <p className=\"text-muted mb-1\">{t(\"Number\")}</p>\r\n                  <h5 className=\"font-size-14\">{user.number}</h5>\r\n                </div>\r\n                {/* \r\n                <div className=\"mt-4\">\r\n                  <p className=\"text-muted mb-1\">{t(\"Time\")}</p>\r\n                  <h5 className=\"font-size-14\">{t(\"11:40 AM\")}</h5>\r\n                </div>\r\n\r\n                <div className=\"mt-4\">\r\n                  <p className=\"text-muted mb-1\">{t(\"Location\")}</p>\r\n                  <h5 className=\"font-size-14 mb-0\">{t(\"California, USA\")}</h5>\r\n                </div> */}\r\n              </CustomCollapse>\r\n            </Card>\r\n          </div>\r\n          <div id=\"profile-setting-accordion\" className=\"custom-accordion\">\r\n            <Card className=\"shadow-none border mb-2\">\r\n              <CustomCollapse\r\n                title={t(\"Devices Settings\")}\r\n                isOpen={isOpen2}\r\n                iconClass=\"\"\r\n                toggleCollapse={toggleCollapse2}\r\n              >\r\n                <Button\r\n                  color=\"light\"\r\n                  size=\"sm\"\r\n                  type=\"button\"\r\n                  block\r\n                  onClick={() => {\r\n                    setShowModalDevicesConfig(true);\r\n                  }}\r\n                >\r\n                  <i className=\"ri-edit-fill mr-1 align-middle\"></i>{\" \"}\r\n                  {t(\"Change devices settings\")}\r\n                </Button>\r\n              </CustomCollapse>\r\n            </Card>\r\n          </div>\r\n          <div id=\"profile-setting-accordion\" className=\"custom-accordion\">\r\n            <Card className=\"shadow-none border mb-2\">\r\n              <CustomCollapse\r\n                title={t(\"Telephone Extension Line Settings\")}\r\n                isOpen={isOpen3}\r\n                iconClass=\"\"\r\n                toggleCollapse={toggleCollapse3}\r\n              >\r\n                <div className=\"mb-2 text-muted\">{t(\"Follow me\") + \":\"}</div>\r\n\r\n                <div>\r\n                  <div\r\n                    className={\"mb-1 mt-3 text-muted\"}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {t(\"On busy\") + \":\"}\r\n                    <div id=\"TooltipExample1\" className={\"ml-1 mb-1\"}>\r\n                      <img\r\n                        alt={\"?\"}\r\n                        src={require(\"./../assets/images/doubt.png\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <InputGroup className={\"mb-2\"}>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {lockedBusyInput === false ? (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#6a7fc0\", border: \"none\" }}\r\n                        onClick={() => {\r\n                          setLockedBusyInput(!lockedBusyInput);\r\n                          setBusy(\"\");\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"white\" }}\r\n                          className=\"ri-check-fill\"\r\n                        ></div>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#e1ecfb\", border: \"none\" }}\r\n                        onClick={() => {\r\n                          setLockedBusyInput(!lockedBusyInput)\r\n                          focus();\r\n                          }\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className=\"ri-close-line\"\r\n                        ></div>\r\n                      </Button>\r\n                    )}\r\n                  </InputGroupAddon>\r\n                  {lockedBusyInput ? (\r\n                    <Input\r\n                      value={busy}\r\n                      placeholder={t(\"Destination\")}\r\n                      innerRef={inputSearch}\r\n                    />\r\n                  ) : (\r\n                    <Input\r\n                      value={busy}\r\n                      placeholder={t(\"Destination\")}\r\n                      onChange={(e) => setBusy(isExtensionLine(e.target.value))}\r\n                      onFocus={() => setDisplay1(true)}\r\n                      onBlur={() => setDisplay1(false)}\r\n                      id={'search'}\r\n                      innerRef={inputSearch}\r\n                    />\r\n                  )}\r\n                  {display1 &&\r\n                    <div className={\"mt-2\"} style={{color: \"red\", fontSize: 12}}>\r\n                      {t(\"Please enter only characters between 0-9, * and #.\")}\r\n                    </div>\r\n                  }\r\n                </InputGroup>\r\n\r\n                <div>\r\n                  <div\r\n                    className={\"mb-1 mt-3 text-muted\"}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {t(\"On no answer\") + \":\"}\r\n                    <div id=\"TooltipExample2\" className={\"ml-1 mb-1\"}>\r\n                      <img\r\n                        alt={\"?\"}\r\n                        src={require(\"./../assets/images/doubt.png\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <InputGroup className={\"mb-2\"}>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {lockedNoAnswerInput === false ? (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#6a7fc0\", border: \"none\" }}\r\n                        onClick={() => {\r\n                          setLockedNoAnswerInput(!lockedNoAnswerInput);\r\n                          setNoAnswer(\"\");\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"white\" }}\r\n                          className=\"ri-check-fill\"\r\n                        ></div>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#e1ecfb\", border: \"none\" }}\r\n                        onClick={() =>\r\n                          setLockedNoAnswerInput(!lockedNoAnswerInput)\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className=\"ri-close-line\"\r\n                        ></div>\r\n                      </Button>\r\n                    )}\r\n                  </InputGroupAddon>\r\n                  {lockedNoAnswerInput ? (\r\n                    <Input\r\n                      value={noAnswer}\r\n                      placeholder={t(\"Destination\")}\r\n                      onClick={() => setLockedNoAnswerInput(false)}\r\n                    />\r\n                  ) : (\r\n                    <Input\r\n                      value={noAnswer}\r\n                      placeholder={t(\"Destination\")}\r\n                      onChange={(e) => setNoAnswer(isExtensionLine(e.target.value))}\r\n                      onFocus={() => setDisplay2(true)}\r\n                      onBlur={() => setDisplay2(false)}\r\n                    />\r\n                  )}\r\n                  {display2 &&\r\n                    <div className={\"mt-2\"} style={{color: \"red\", fontSize: 12}}>\r\n                      {t(\"Please enter only characters between 0-9, * and #.\")}\r\n                    </div>\r\n                  }\r\n                </InputGroup>\r\n\r\n                <div>\r\n                  <div\r\n                    className={\"mb-1 mt-3 text-muted\"}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {t(\"When not registered\") + ':'}\r\n                    <div id=\"TooltipExample3\" className={\"ml-1 mb-1\"}>\r\n                      <img\r\n                        alt={\"?\"}\r\n                        src={require(\"./../assets/images/doubt.png\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <InputGroup className={\"mb-2\"}>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {lockedNotRegisteredInput === false ? (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#6a7fc0\", border: \"none\" }}\r\n                        onClick={() => {\r\n                          setLockedNotRegisteredInput(\r\n                            !lockedNotRegisteredInput\r\n                          );\r\n                          setNotRegistered(\"\");\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"white\" }}\r\n                          className=\"ri-check-fill\"\r\n                        ></div>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#e1ecfb\", border: \"none\" }}\r\n                        onClick={() =>\r\n                          setLockedNotRegisteredInput(!lockedNotRegisteredInput)\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className=\"ri-close-line\"\r\n                        ></div>\r\n                      </Button>\r\n                    )}\r\n                  </InputGroupAddon>\r\n                  {lockedNotRegisteredInput ? (\r\n                    <Input\r\n                      value={notRegistered}\r\n                      placeholder={t(\"Destination\")}\r\n                      onClick={() => setLockedNotRegisteredInput(false)}\r\n                    />\r\n                  ) : (\r\n                    <Input\r\n                      value={notRegistered}\r\n                      placeholder={t(\"Destination\")}\r\n                      onChange={(e) => setNotRegistered(isExtensionLine(e.target.value))}\r\n                      onFocus={() => setDisplay3(true)}\r\n                      onBlur={() => setDisplay3(false)}\r\n                    />\r\n                  )}\r\n                  {display3 &&\r\n                    <div className={\"mt-2\"} style={{color: \"red\", fontSize: 12}}>\r\n                      {t(\"Please enter only characters between 0-9, * and #.\")}\r\n                    </div>\r\n                  }\r\n                </InputGroup>\r\n\r\n                <div>\r\n                  <div\r\n                    className={\"mb-1 mt-3 text-muted\"}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {t(\"Always\") + ':'}\r\n                    <div id=\"TooltipExample4\" className={\"ml-1 mb-1\"}>\r\n                      <img\r\n                        alt={\"?\"}\r\n                        src={require(\"./../assets/images/doubt.png\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <InputGroup className={\"mb-2\"}>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {lockedFollowMeAlwaysInput === false ? (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#6a7fc0\", border: \"none\" }}\r\n                        onClick={() => {\r\n                          setLockedFollowMeAlwaysInput(\r\n                            !lockedFollowMeAlwaysInput\r\n                          );\r\n                          setFollowMeAlways(\"\");\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"white\" }}\r\n                          className=\"ri-check-fill\"\r\n                        ></div>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        style={{ backgroundColor: \"#e1ecfb\", border: \"none\" }}\r\n                        onClick={() =>\r\n                          setLockedFollowMeAlwaysInput(\r\n                            !lockedFollowMeAlwaysInput\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className=\"ri-close-line\"\r\n                        ></div>\r\n                      </Button>\r\n                    )}\r\n                  </InputGroupAddon>\r\n                  {lockedFollowMeAlwaysInput ? (\r\n                    <Input\r\n                      value={followMeAlways}\r\n                      placeholder={t(\"Destination\")}\r\n                      onClick={() => setLockedFollowMeAlwaysInput(false)}\r\n                    />\r\n                  ) : (\r\n                    <Input\r\n                      value={followMeAlways}\r\n                      placeholder={t(\"Destination\")}\r\n                      onChange={(e) => setFollowMeAlways(isExtensionLine(e.target.value))}\r\n                      onFocus={() => setDisplay4(true)}\r\n                      onBlur={() => setDisplay4(false)}\r\n                    />\r\n                  )}\r\n                  {display4 &&\r\n                    <div className={\"mt-2\"} style={{color: \"red\", fontSize: 12}}>\r\n                      {t(\"Please enter only characters between 0-9, * and #.\")}\r\n                    </div>\r\n                  }\r\n                </InputGroup>\r\n\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpen1}\r\n                  target=\"TooltipExample1\"\r\n                  toggle={toggleTooltip1}\r\n                >\r\n                  {t(\r\n                    \"When the extension is busy the call will be forwarded to the extension indicated below\"\r\n                  )}\r\n                </Tooltip>\r\n\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpen2}\r\n                  target=\"TooltipExample2\"\r\n                  toggle={toggleTooltip2}\r\n                >\r\n                  {t(\r\n                    \"When the extension does not answer the call it will be forwarded to the extension indicated below\"\r\n                  )}\r\n                </Tooltip>\r\n\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpen3}\r\n                  target=\"TooltipExample3\"\r\n                  toggle={toggleTooltip3}\r\n                >\r\n                  {t(\r\n                    \"When the extension is not registered with the PABX the call it will be forwarded to the extension indicated below\"\r\n                  )}\r\n                </Tooltip>\r\n\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpen4}\r\n                  target=\"TooltipExample4\"\r\n                  toggle={toggleTooltip4}\r\n                >\r\n                  {t(\"When enabling follow-me always, all calls will be forwarded to the indicated number\")}\r\n                </Tooltip>\r\n\r\n                {isEveryDataEmpty() || isEveryInputLocked() ? (\r\n                  <Button\r\n                    color=\"light\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                    block\r\n                    disabled\r\n                    className={\"mt-4\"}\r\n                  >\r\n                    {t(\"Save\")}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    color=\"light\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                    block\r\n                    onClick={() => {\r\n                      Swal.fire({\r\n                        title:\r\n                          \"Agora, consulta-se a API para pegar o status atual de configuração!\",\r\n                        //Romero, para facilitar: os states utilizados foram: {busy, noAnswer, notRegistered, followMeAlways}\r\n                        showClass: {\r\n                          popup: \"animate__animated animate__fadeInDown\",\r\n                        },\r\n                        hideClass: {\r\n                          popup: \"animate__animated animate__fadeOutUp\",\r\n                        },\r\n                      });\r\n                      clearInputs();\r\n                      lockAllInputs();\r\n                    }}\r\n                    className={\"mt-4\"}\r\n                  >\r\n                    {t(\"Save\")}\r\n                  </Button>\r\n                )}\r\n              </CustomCollapse>\r\n            </Card>\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n      <ModalEditInfo />\r\n      <ModalConfigDevices />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SettingTab;\r\n"]},"metadata":{},"sourceType":"module"}