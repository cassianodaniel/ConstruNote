{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nexport function getLocaleHierarchy(locale) {\n  var results = [locale];\n  var localeParts = locale.split('-');\n\n  for (var i = localeParts.length; i > 1; i--) {\n    results.push(localeParts.slice(0, i - 1).join('-'));\n  }\n\n  return results;\n}\n\nvar MissingLocaleDataError =\n/** @class */\nfunction (_super) {\n  __extends(MissingLocaleDataError, _super);\n\n  function MissingLocaleDataError() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'MISSING_LOCALE_DATA';\n    return _this;\n  }\n\n  return MissingLocaleDataError;\n}(Error);\n\nexport function isMissingLocaleDataError(e) {\n  return e.type === 'MISSING_LOCALE_DATA';\n}\nexport function unpackData(locale, localeData,\n/** By default shallow merge the dictionaries. */\nreducer) {\n  if (reducer === void 0) {\n    reducer = function (all, d) {\n      return __assign(__assign({}, all), d);\n    };\n  }\n\n  var localeHierarchy = getLocaleHierarchy(locale);\n  var dataToMerge = localeHierarchy.map(function (l) {\n    return localeData.data[l];\n  }).filter(Boolean);\n\n  if (!dataToMerge.length) {\n    throw new MissingLocaleDataError(\"Missing locale data for \\\"\" + locale + \"\\\", lookup hierarchy: \" + localeHierarchy.join(', '));\n  }\n\n  dataToMerge.reverse();\n  return dataToMerge.reduce(reducer, {});\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@formatjs/ecma402-abstract/lib/src/data.js"],"names":["__assign","__extends","getLocaleHierarchy","locale","results","localeParts","split","i","length","push","slice","join","MissingLocaleDataError","_super","_this","apply","arguments","type","Error","isMissingLocaleDataError","e","unpackData","localeData","reducer","all","d","localeHierarchy","dataToMerge","map","l","data","filter","Boolean","reverse","reduce"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AACvC,MAAIC,OAAO,GAAG,CAACD,MAAD,CAAd;AACA,MAAIE,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAGF,WAAW,CAACG,MAAzB,EAAiCD,CAAC,GAAG,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AACzCH,IAAAA,OAAO,CAACK,IAAR,CAAaJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqBH,CAAC,GAAG,CAAzB,EAA4BI,IAA5B,CAAiC,GAAjC,CAAb;AACH;;AACD,SAAOP,OAAP;AACH;;AACD,IAAIQ,sBAAsB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC1DZ,EAAAA,SAAS,CAACW,sBAAD,EAAyBC,MAAzB,CAAT;;AACA,WAASD,sBAAT,GAAkC;AAC9B,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,qBAAb;AACA,WAAOH,KAAP;AACH;;AACD,SAAOF,sBAAP;AACH,CAR2C,CAQ1CM,KAR0C,CAA5C;;AASA,OAAO,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AACxC,SAAOA,CAAC,CAACH,IAAF,KAAW,qBAAlB;AACH;AACD,OAAO,SAASI,UAAT,CAAoBlB,MAApB,EAA4BmB,UAA5B;AACP;AACAC,OAFO,EAEE;AACL,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AAAE,aAAQzB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwB,GAAL,CAAT,EAAoBC,CAApB,CAAhB;AAA0C,KAAxE;AAA2E;;AACrG,MAAIC,eAAe,GAAGxB,kBAAkB,CAACC,MAAD,CAAxC;AACA,MAAIwB,WAAW,GAAGD,eAAe,CAC5BE,GADa,CACT,UAAUC,CAAV,EAAa;AAAE,WAAOP,UAAU,CAACQ,IAAX,CAAgBD,CAAhB,CAAP;AAA4B,GADlC,EAEbE,MAFa,CAENC,OAFM,CAAlB;;AAGA,MAAI,CAACL,WAAW,CAACnB,MAAjB,EAAyB;AACrB,UAAM,IAAII,sBAAJ,CAA2B,+BAA+BT,MAA/B,GAAwC,wBAAxC,GAAmEuB,eAAe,CAACf,IAAhB,CAAqB,IAArB,CAA9F,CAAN;AACH;;AACDgB,EAAAA,WAAW,CAACM,OAAZ;AACA,SAAON,WAAW,CAACO,MAAZ,CAAmBX,OAAnB,EAA4B,EAA5B,CAAP;AACH","sourcesContent":["import { __assign, __extends } from \"tslib\";\nexport function getLocaleHierarchy(locale) {\n    var results = [locale];\n    var localeParts = locale.split('-');\n    for (var i = localeParts.length; i > 1; i--) {\n        results.push(localeParts.slice(0, i - 1).join('-'));\n    }\n    return results;\n}\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\nexport function unpackData(locale, localeData, \n/** By default shallow merge the dictionaries. */\nreducer) {\n    if (reducer === void 0) { reducer = function (all, d) { return (__assign(__assign({}, all), d)); }; }\n    var localeHierarchy = getLocaleHierarchy(locale);\n    var dataToMerge = localeHierarchy\n        .map(function (l) { return localeData.data[l]; })\n        .filter(Boolean);\n    if (!dataToMerge.length) {\n        throw new MissingLocaleDataError(\"Missing locale data for \\\"\" + locale + \"\\\", lookup hierarchy: \" + localeHierarchy.join(', '));\n    }\n    dataToMerge.reverse();\n    return dataToMerge.reduce(reducer, {});\n}\n"]},"metadata":{},"sourceType":"module"}