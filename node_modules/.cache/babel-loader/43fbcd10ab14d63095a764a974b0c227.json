{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ImageMessage.tsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ImageMessage = ({\n  url\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"null\");\n\n  const toggleLightbox = currentImage => {\n    setIsOpen(!isOpen);\n    setCurrentImage(currentImage);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => toggleLightbox(url),\n    className: \"popup-img d-inline-block m-1\",\n    title: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"url\",\n    src: url,\n    style: {\n      maxWidth: \"220px\",\n      maxHeight: \"220px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), isOpen));\n};\n\nexport default ImageMessage;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ImageMessage.tsx"],"names":["React","useState","Link","ImageMessage","url","isOpen","setIsOpen","currentImage","setCurrentImage","toggleLightbox","maxWidth","maxHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAGA,SAASC,IAAT,QAAqB,kBAArB;;AAOA,MAAMC,YAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAElD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,cAAmB,GAAIF,YAAD,IAAuB;AACjDD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAHD;;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,IAAD;AACF,IAAA,EAAE,EAAC,GADD;AAEF,IAAA,OAAO,EAAE,MAAME,cAAc,CAACL,GAAD,CAF3B;AAGF,IAAA,SAAS,EAAC,8BAHR;AAIF,IAAA,KAAK,EAAC,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMF;AAAK,IAAA,GAAG,EAAC,KAAT;AAAe,IAAA,GAAG,EAAEA,GAApB;AAAyB,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAE,OAAX;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANE,EAODN,MAPC,CADG,CAAP;AAWD,CAnBD;;AAqBA,eAAeF,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\ninterface IProps {\r\n  url: string;\r\n}\r\n\r\nconst ImageMessage: React.FC<IProps> = ({ url }) => {\r\n  \r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n  return <div>\r\n      <Link\r\n    to=\"#\"\r\n    onClick={() => toggleLightbox(url)}\r\n    className=\"popup-img d-inline-block m-1\"\r\n    title=\"title\"\r\n  >\r\n    <img alt=\"url\" src={url} style={{maxWidth: \"220px\", maxHeight: \"220px\"}}/>\r\n    {isOpen}\r\n  </Link>\r\n</div>\r\n};\r\n\r\nexport default ImageMessage;\r\n"]},"metadata":{},"sourceType":"module"}