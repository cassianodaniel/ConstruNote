{"ast":null,"code":"'use strict';\n\nconst Socket = require('./Socket');\n\nconst Connection = require('@xmpp/connection');\n\nconst xml = require('@xmpp/xml');\n\nconst FramedParser = require('./FramedParser');\n\nconst NS_FRAMING = 'urn:ietf:params:xml:ns:xmpp-framing';\n/* References\n * WebSocket protocol https://tools.ietf.org/html/rfc6455\n * WebSocket Web API https://html.spec.whatwg.org/multipage/comms.html#network\n * XMPP over WebSocket https://tools.ietf.org/html/rfc7395\n */\n\nclass ConnectionWebSocket extends Connection {\n  send(element, ...args) {\n    if (!element.attrs.xmlns && super.isStanza(element)) {\n      element.attrs.xmlns = 'jabber:client';\n    }\n\n    return super.send(element, ...args);\n  } // https://tools.ietf.org/html/rfc7395#section-3.6\n\n\n  footerElement() {\n    return new xml.Element('close', {\n      xmlns: NS_FRAMING\n    });\n  } // https://tools.ietf.org/html/rfc7395#section-3.4\n\n\n  headerElement() {\n    const el = super.headerElement();\n    el.name = 'open';\n    el.attrs.xmlns = NS_FRAMING;\n    return el;\n  }\n\n  socketParameters(service) {\n    return service.match(/^wss?:\\/\\//) ? service : undefined;\n  }\n\n}\n\nConnectionWebSocket.prototype.Socket = Socket;\nConnectionWebSocket.prototype.NS = 'jabber:client';\nConnectionWebSocket.prototype.Parser = FramedParser;\nmodule.exports = ConnectionWebSocket;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/websocket/lib/Connection.js"],"names":["Socket","require","Connection","xml","FramedParser","NS_FRAMING","ConnectionWebSocket","send","element","args","attrs","xmlns","isStanza","footerElement","Element","headerElement","el","name","socketParameters","service","match","undefined","prototype","NS","Parser","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMI,UAAU,GAAG,qCAAnB;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAN,SAAkCJ,UAAlC,CAA6C;AAC3CK,EAAAA,IAAI,CAACC,OAAD,EAAU,GAAGC,IAAb,EAAmB;AACrB,QAAI,CAACD,OAAO,CAACE,KAAR,CAAcC,KAAf,IAAwB,MAAMC,QAAN,CAAeJ,OAAf,CAA5B,EAAqD;AACnDA,MAAAA,OAAO,CAACE,KAAR,CAAcC,KAAd,GAAsB,eAAtB;AACD;;AAED,WAAO,MAAMJ,IAAN,CAAWC,OAAX,EAAoB,GAAGC,IAAvB,CAAP;AACD,GAP0C,CAS3C;;;AACAI,EAAAA,aAAa,GAAG;AACd,WAAO,IAAIV,GAAG,CAACW,OAAR,CAAgB,OAAhB,EAAyB;AAC9BH,MAAAA,KAAK,EAAEN;AADuB,KAAzB,CAAP;AAGD,GAd0C,CAgB3C;;;AACAU,EAAAA,aAAa,GAAG;AACd,UAAMC,EAAE,GAAG,MAAMD,aAAN,EAAX;AACAC,IAAAA,EAAE,CAACC,IAAH,GAAU,MAAV;AACAD,IAAAA,EAAE,CAACN,KAAH,CAASC,KAAT,GAAiBN,UAAjB;AACA,WAAOW,EAAP;AACD;;AAEDE,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,WAAOA,OAAO,CAACC,KAAR,CAAc,YAAd,IAA8BD,OAA9B,GAAwCE,SAA/C;AACD;;AA1B0C;;AA6B7Cf,mBAAmB,CAACgB,SAApB,CAA8BtB,MAA9B,GAAuCA,MAAvC;AACAM,mBAAmB,CAACgB,SAApB,CAA8BC,EAA9B,GAAmC,eAAnC;AACAjB,mBAAmB,CAACgB,SAApB,CAA8BE,MAA9B,GAAuCpB,YAAvC;AAEAqB,MAAM,CAACC,OAAP,GAAiBpB,mBAAjB","sourcesContent":["'use strict'\n\nconst Socket = require('./Socket')\nconst Connection = require('@xmpp/connection')\nconst xml = require('@xmpp/xml')\nconst FramedParser = require('./FramedParser')\n\nconst NS_FRAMING = 'urn:ietf:params:xml:ns:xmpp-framing'\n\n/* References\n * WebSocket protocol https://tools.ietf.org/html/rfc6455\n * WebSocket Web API https://html.spec.whatwg.org/multipage/comms.html#network\n * XMPP over WebSocket https://tools.ietf.org/html/rfc7395\n */\n\nclass ConnectionWebSocket extends Connection {\n  send(element, ...args) {\n    if (!element.attrs.xmlns && super.isStanza(element)) {\n      element.attrs.xmlns = 'jabber:client'\n    }\n\n    return super.send(element, ...args)\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.6\n  footerElement() {\n    return new xml.Element('close', {\n      xmlns: NS_FRAMING,\n    })\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.4\n  headerElement() {\n    const el = super.headerElement()\n    el.name = 'open'\n    el.attrs.xmlns = NS_FRAMING\n    return el\n  }\n\n  socketParameters(service) {\n    return service.match(/^wss?:\\/\\//) ? service : undefined\n  }\n}\n\nConnectionWebSocket.prototype.Socket = Socket\nConnectionWebSocket.prototype.NS = 'jabber:client'\nConnectionWebSocket.prototype.Parser = FramedParser\n\nmodule.exports = ConnectionWebSocket\n"]},"metadata":{},"sourceType":"script"}