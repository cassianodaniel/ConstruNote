{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalAddParticipant.tsx\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormGroup, Input, Modal, ModalHeader } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport SelectContact from \"./SelectContact\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nexport let ConferenceRoomParticipantType;\n\n(function (ConferenceRoomParticipantType) {\n  ConferenceRoomParticipantType[\"PARTICIPANT\"] = \"PARTICIPANT\";\n  ConferenceRoomParticipantType[\"PARTICIPANT_EXTERNAL\"] = \"PARTICIPANT_EXTERNAL\";\n  ConferenceRoomParticipantType[\"MODERATOR\"] = \"MODERATOR\";\n})(ConferenceRoomParticipantType || (ConferenceRoomParticipantType = {}));\n\nconst ModalAddParticipant = () => {\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      setSelectedContact([...selectedContact, contact]);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.id === contact.id) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    contacts\n  } = useContact();\n  const [search, setSearch] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState([]);\n  const {\n    setAddingParticipantsPayload\n  } = useConference();\n  const {\n    activeChat\n  } = useChat();\n  const {\n    showModalAddParticipant,\n    setShowModalAddParticipant\n  } = useModal();\n\n  const toggle = () => {\n    setShowModalAddParticipant(!showModalAddParticipant);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: !!showModalAddParticipant,\n    centered: true,\n    toggle: toggle,\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, t(\"Add Participants\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mt-2\",\n    id: \"search-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"320px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectContact, {\n    handleCheckContact: handleCheckContact,\n    contacts: contacts,\n    search: search,\n    checkedContacts: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block\",\n    onClick: () => {\n      console.log(activeChat.id);\n      setAddingParticipantsPayload({\n        //conferenceId: '81b72362-eaca-4ac6-b951-697ddd925417',\n        conferenceId: activeChat.id,\n        data: selectedContact.map(selected => {\n          return {\n            description: '',\n            email: selected.email,\n            name: selected.name,\n            type: ConferenceRoomParticipantType.PARTICIPANT,\n            userModerator: false,\n            userUuid: selected.id\n          };\n        })\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-add-line mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), t(\"Add participants\"))))));\n};\n\nexport default ModalAddParticipant;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddParticipant.tsx"],"names":["useModal","React","useState","useTranslation","FormGroup","Input","Modal","ModalHeader","SimpleBar","useContact","SelectContact","useConference","useChat","ConferenceRoomParticipantType","ModalAddParticipant","handleCheckContact","selected","contact","setSelectedContact","selectedContact","filter","sel","id","t","contacts","search","setSearch","setAddingParticipantsPayload","activeChat","showModalAddParticipant","setShowModalAddParticipant","toggle","e","target","value","height","console","log","conferenceId","data","map","description","email","name","type","PARTICIPANT","userModerator","userUuid","display","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import { useModal } from \"./../contexts/ModalContext\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport SelectContact from \"./SelectContact\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\n\r\nexport interface ConferenceRoomParticipant {\r\n  name: string\r\n  email: string\r\n  description: string | null\r\n  userModerator: boolean\r\n  userUuid: string | null\r\n  type:\r\n    | ConferenceRoomParticipantType.PARTICIPANT\r\n    | ConferenceRoomParticipantType.PARTICIPANT_EXTERNAL\r\n    | ConferenceRoomParticipantType.MODERATOR\r\n}\r\nexport enum ConferenceRoomParticipantType {\r\n  PARTICIPANT = 'PARTICIPANT',\r\n  PARTICIPANT_EXTERNAL = 'PARTICIPANT_EXTERNAL',\r\n  MODERATOR = 'MODERATOR'\r\n}\r\n\r\nexport interface IAddingParticipantsPayload{\r\n  conferenceId: string,\r\n  data: ConferenceRoomParticipant[],\r\n}\r\n\r\nconst ModalAddParticipant = () => {\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setSelectedContact([...selectedContact, contact]);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.id === contact.id) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const { t } = useTranslation();\r\n  const { contacts } = useContact();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n  const { setAddingParticipantsPayload } = useConference();\r\n  const { activeChat } = useChat();\r\n  const { showModalAddParticipant, setShowModalAddParticipant} = useModal();\r\n  const toggle = () => {\r\n    setShowModalAddParticipant(!showModalAddParticipant);\r\n  }\r\n  return(\r\n    <Modal\r\n      isOpen={!!showModalAddParticipant}\r\n      centered\r\n      toggle={toggle}\r\n      size=\"md\"\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Add Participants\")}</ModalHeader>\r\n      <div className=\"col\">\r\n        <FormGroup className=\"mb-4\">\r\n          <Input\r\n            type=\"text\"\r\n            className=\"form-control mt-2\"\r\n            id=\"search-input\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            placeholder={t(\"Search users..\")}\r\n          />\r\n          <div className=\"border mt-3\">\r\n            <SimpleBar style={{ height: \"320px\" }}>\r\n              <div id=\"addContacts\">\r\n                <SelectContact\r\n                  handleCheckContact={handleCheckContact}\r\n                  contacts={contacts}\r\n                  search={search}\r\n                  checkedContacts={selectedContact}\r\n                />\r\n              </div>\r\n            </SimpleBar>\r\n          </div>\r\n        </FormGroup>\r\n        <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n          <button\r\n            className=\"btn btn-success btn-block\"\r\n            onClick={() => {\r\n              console.log(activeChat.id);\r\n              setAddingParticipantsPayload(\r\n                {\r\n                  //conferenceId: '81b72362-eaca-4ac6-b951-697ddd925417',\r\n                  conferenceId: activeChat.id,\r\n                  data: selectedContact.map((selected) => {\r\n                    return(\r\n                      {\r\n                        description: '',\r\n                        email: selected.email,\r\n                        name: selected.name,\r\n                        type: ConferenceRoomParticipantType.PARTICIPANT,\r\n                        userModerator: false,\r\n                        userUuid: selected.id\r\n                      }\r\n                    )\r\n                  }) as ConferenceRoomParticipant[]\r\n                } as IAddingParticipantsPayload\r\n              ) \r\n            }\r\n            }\r\n          > \r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center', alignItems: 'center'}}>\r\n              <i className=\"ri-add-line mr-1\"/>\r\n              {t(\"Add participants\")}\r\n            </div>\r\n          </button>\r\n        </div>\r\n    </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalAddParticipant;"]},"metadata":{},"sourceType":"module"}