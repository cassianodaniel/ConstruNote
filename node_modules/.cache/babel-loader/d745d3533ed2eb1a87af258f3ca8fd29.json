{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from\"react\";import{useChat}from\"./ChatContext\";//alias\nimport ChatType from\"../enuns/ChatType\";export var ContactContext=createContext({});export var ContactProvider=function ContactProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),contactsOutsideUserContacts=_useState4[0],setContactsOutsideUserContacts=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),contactsOutsideGroup=_useState6[0],setContactsOutsideGroup=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),removedContact=_useState8[0],setRemovedContact=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),checkedContacts=_useState10[0],setCheckedContacts=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),toggleAddingContacts=_useState12[0],setToggleAddingContacts=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),checkedMembers=_useState14[0],setCheckedMembers=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),toggleAddingMembers=_useState16[0],setToggleAddingMembers=_useState16[1];var _useState17=useState(undefined),_useState18=_slicedToArray(_useState17,2),groupToInsertMember=_useState18[0],setGroupToInsertMember=_useState18[1];var _useChat=useChat(),activeChat=_useChat.activeChat,chats=_useChat.chats,setChats=_useChat.setChats,setActiveChat=_useChat.setActiveChat,setShowChat=_useChat.setShowChat;var _useState19=useState(undefined),_useState20=_slicedToArray(_useState19,2),clickedContact=_useState20[0],setClickedContact=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),newFavorite=_useState22[0],setNewFavorite=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),contactsSearch=_useState24[0],setContactsSearch=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),contactsSearched=_useState26[0],setContactsSearched=_useState26[1];var openContact=function openContact(obj){if((activeChat===null||activeChat===void 0?void 0:activeChat.jid)===obj.jid)return;var find=false;setChats(chats.map(function(item){if(item.jid===obj.jid){item.unRead=0;item.mencioned=0;item.messageLoaded=item.messages.length>=20?false:true;setShowChat(true);setActiveChat(item);find=true;}return item;}));if(!find){var newChat={id:obj.id,jid:obj.jid,name:obj.name,email:obj.email,department:obj.department,profilePicture:obj.profilePicture,status:obj.status,messageLoaded:true,unRead:1,chatType:ChatType.USER,inputMessage:\"\",isTyping:false,messages:[],favorite:obj.favorite,added:obj.added,mencioned:0};setShowChat(true);setActiveChat(newChat);}};return/*#__PURE__*/React.createElement(ContactContext.Provider,{value:{openContact:openContact,contacts:contacts,setContacts:setContacts,newFavorite:newFavorite,setNewFavorite:setNewFavorite,contactsSearch:contactsSearch,setContactsSearch:setContactsSearch,contactsSearched:contactsSearched,setContactsSearched:setContactsSearched,contactsOutsideUserContacts:contactsOutsideUserContacts,setContactsOutsideUserContacts:setContactsOutsideUserContacts,toggleAddingContacts:toggleAddingContacts,setToggleAddingContacts:setToggleAddingContacts,checkedContacts:checkedContacts,setCheckedContacts:setCheckedContacts,removedContact:removedContact,setRemovedContact:setRemovedContact,toggleAddingMembers:toggleAddingMembers,setToggleAddingMembers:setToggleAddingMembers,checkedMembers:checkedMembers,setCheckedMembers:setCheckedMembers,contactsOutsideGroup:contactsOutsideGroup,setContactsOutsideGroup:setContactsOutsideGroup,groupToInsertMember:groupToInsertMember,setGroupToInsertMember:setGroupToInsertMember,clickedContact:clickedContact,setClickedContact:setClickedContact}},children);};export function useContact(){return useContext(ContactContext);}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/contexts/ContactContext.tsx"],"names":["React","createContext","useContext","useState","useChat","ChatType","ContactContext","ContactProvider","children","contacts","setContacts","contactsOutsideUserContacts","setContactsOutsideUserContacts","contactsOutsideGroup","setContactsOutsideGroup","undefined","removedContact","setRemovedContact","checkedContacts","setCheckedContacts","toggleAddingContacts","setToggleAddingContacts","checkedMembers","setCheckedMembers","toggleAddingMembers","setToggleAddingMembers","groupToInsertMember","setGroupToInsertMember","activeChat","chats","setChats","setActiveChat","setShowChat","clickedContact","setClickedContact","newFavorite","setNewFavorite","contactsSearch","setContactsSearch","contactsSearched","setContactsSearched","openContact","obj","jid","find","map","item","unRead","mencioned","messageLoaded","messages","length","newChat","id","name","email","department","profilePicture","status","chatType","USER","inputMessage","isTyping","favorite","added","useContact"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\n//alias\r\nimport IChat from \"../alias/IChat\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport IContact from \"./../alias/IContact\";\r\nimport ChatType from \"../enuns/ChatType\";\r\n\r\ninterface IContactContextData {\r\n  openContact(value: IContact): void;\r\n  contacts: IContact[];\r\n  setContacts(value: IContact[]): void;\r\n  newFavorite: IChat | IGroup | IContact | undefined;\r\n  setNewFavorite(favorited: IChat | IGroup | IContact | undefined): void;\r\n  contactsSearch: string;\r\n  setContactsSearch(value: string): void;\r\n  contactsSearched: IContact[] | undefined;\r\n  setContactsSearched(val: IContact[] | undefined): void;\r\n  contactsOutsideUserContacts: IContact[];\r\n  setContactsOutsideUserContacts(value: IContact[]): void;\r\n  toggleAddingContacts: boolean;\r\n  setToggleAddingContacts(value: boolean): void;\r\n  toggleAddingMembers: boolean;\r\n  setToggleAddingMembers(value: boolean): void;\r\n  checkedContacts: IContact[];\r\n  setCheckedContacts(value: IContact[]): void;\r\n  removedContact: IContact | undefined;\r\n  setRemovedContact(value: IContact | undefined): void;\r\n  checkedMembers: IContact[];\r\n  setCheckedMembers(value: IContact[]): void;\r\n  contactsOutsideGroup: IContact[];\r\n  setContactsOutsideGroup(value: IContact[]): void;\r\n  groupToInsertMember: IGroup | undefined;\r\n  setGroupToInsertMember(value: IGroup | undefined): void;\r\n  setClickedContact(value: IContact | undefined): void, \r\n  clickedContact: IContact | undefined\r\n}\r\n\r\nexport const ContactContext = createContext<IContactContextData>(\r\n  {} as IContactContextData\r\n);\r\n\r\nexport const ContactProvider: React.FC = ({ children }) => {\r\n  const [contacts, setContacts] = useState<IContact[]>([]);\r\n  const [\r\n    contactsOutsideUserContacts,\r\n    setContactsOutsideUserContacts,\r\n  ] = useState<IContact[]>([]);\r\n  const [contactsOutsideGroup, setContactsOutsideGroup] = useState<IContact[]>(\r\n    []\r\n  );\r\n  const [removedContact, setRemovedContact] = useState<IContact | undefined>(\r\n    undefined\r\n  );\r\n  const [checkedContacts, setCheckedContacts] = useState<IContact[]>([]);\r\n  const [toggleAddingContacts, setToggleAddingContacts] = useState(false);\r\n  const [checkedMembers, setCheckedMembers] = useState<IContact[]>([]);\r\n  const [toggleAddingMembers, setToggleAddingMembers] = useState(false);\r\n  const [groupToInsertMember, setGroupToInsertMember] = useState<\r\n    IGroup | undefined\r\n  >(undefined);\r\n  const { activeChat, chats, setChats, setActiveChat, setShowChat } = useChat();\r\n  const [clickedContact, setClickedContact] = useState<IContact| undefined>(undefined);\r\n  const [newFavorite, setNewFavorite] = useState<\r\n    IChat | IGroup | IContact | undefined\r\n  >();\r\n  const [contactsSearch, setContactsSearch] = useState<string>(\"\");\r\n  const [contactsSearched, setContactsSearched] = useState<\r\n    IContact[] | undefined\r\n  >();\r\n\r\n  const openContact = (obj: IContact) => {\r\n    if (activeChat?.jid === obj.jid) return;\r\n    let find = false;\r\n\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (item.jid === obj.jid) {\r\n          \r\n          item.unRead = 0;\r\n          item.mencioned = 0;\r\n          item.messageLoaded = item.messages.length >= 20 ? false : true;\r\n          setShowChat(true);\r\n          setActiveChat(item);\r\n          find = true;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n\r\n    if (!find) {\r\n      let newChat: IChat = {\r\n        id: obj.id,\r\n        jid: obj.jid,\r\n        name: obj.name,\r\n        email: obj.email,\r\n        department: obj.department,\r\n        profilePicture: obj.profilePicture,\r\n        status: obj.status,\r\n        messageLoaded: true,\r\n        unRead: 1,\r\n        chatType: ChatType.USER,\r\n        inputMessage: \"\",\r\n        isTyping: false,\r\n        messages: [],\r\n        favorite: obj.favorite,\r\n        added: obj.added,\r\n        mencioned: 0\r\n      };\r\n      setShowChat(true);\r\n      setActiveChat(newChat);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        openContact,\r\n        contacts,\r\n        setContacts,\r\n        newFavorite,\r\n        setNewFavorite,\r\n        contactsSearch,\r\n        setContactsSearch,\r\n        contactsSearched,\r\n        setContactsSearched,\r\n        contactsOutsideUserContacts,\r\n        setContactsOutsideUserContacts,\r\n        toggleAddingContacts,\r\n        setToggleAddingContacts,\r\n        checkedContacts,\r\n        setCheckedContacts,\r\n        removedContact,\r\n        setRemovedContact,\r\n        toggleAddingMembers,\r\n        setToggleAddingMembers,\r\n        checkedMembers,\r\n        setCheckedMembers,\r\n        contactsOutsideGroup,\r\n        setContactsOutsideGroup,\r\n        groupToInsertMember,\r\n        setGroupToInsertMember,\r\n        clickedContact, \r\n        setClickedContact\r\n      }}\r\n    >\r\n      {children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useContact() {\r\n  return useContext(ContactContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}