{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\VideoBox.tsx\";\nimport React, { useState } from \"react\";\nimport { useCall } from \"../contexts/CallContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport { tagsRange } from \"../services/voice/voicecommunicator\";\nimport { motion } from \"framer-motion\";\nimport { height, width } from \"../helpers/windowSize\";\n\nconst VideoBox = () => {\n  const [fullScreen, setFullScreen] = useState(false);\n  const [pictureInPictureEnabled, setPictureInPictureEnabled] = useState(false);\n  const [pictureInPictureTag, setPictureInPictureTag] = useState(undefined);\n  const {\n    activeChat\n  } = useChat();\n  const {\n    currentCalls\n  } = useCall();\n  const currentCall = Array.from(currentCalls.values()).find(call => {\n    var _call$callerObject;\n\n    return ((_call$callerObject = call.callerObject) === null || _call$callerObject === void 0 ? void 0 : _call$callerObject.jid) === activeChat.jid;\n  });\n\n  const togglePictureInPicture = tagId => {\n    if (!document.pictureInPictureElement) {\n      const video = document.querySelector(`#remote-stream-${tagId}`);\n      video === null || video === void 0 ? void 0 : video.requestPictureInPicture().catch(error => {});\n    } else {\n      document.exitPictureInPicture().catch(error => {});\n    }\n  };\n\n  const listenPictureInPictureChanges = () => {\n    tagsRange.forEach(tagId => {\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\n\n      if (videoEl) {\n        videoEl.addEventListener(\"enterpictureinpicture\", () => {\n          // Video entered Picture-in-Picture mode.\n          setPictureInPictureEnabled(true);\n          setPictureInPictureTag(tagId);\n        });\n        videoEl.addEventListener(\"leavepictureinpicture\", () => {\n          // Video left Picture-in-Picture mode.\n          setPictureInPictureEnabled(false);\n          setPictureInPictureTag(undefined);\n        });\n      }\n    });\n  };\n\n  const removeListeners = () => {\n    tagsRange.forEach(tagId => {\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\n\n      if (videoEl) {\n        videoEl.removeEventListener(\"enterpictureinpicture\", () => {});\n        videoEl.removeEventListener(\"leavepictureinpicture\", () => {});\n      }\n    });\n  };\n\n  const isVisible = tagId => (currentCall === null || currentCall === void 0 ? void 0 : currentCall.tagId) === `remote-stream-${tagId}` && (currentCall.receivingVideo || currentCall.sendingVideo) && pictureInPictureTag !== tagId;\n\n  const boxVideo = {\n    position: \"fixed\",\n    right: \"50px\",\n    bottom: \"50px\",\n    zIndex: 10,\n    maxWidth: \"400px\",\n    borderRadius: \"2px\",\n    backgroundColor: \"#000000\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n  const video = {\n    position: \"relative\",\n    maxWidth: \"400px\"\n  };\n  const optionBox = {\n    position: \"absolute\",\n    zIndex: 10,\n    top: \"2%\",\n    right: \"2%\",\n    color: \"#ffffff\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n  const option = {\n    cursor: \"pointer\",\n    marginLeft: \"5px\",\n    fontSize: \"18px\",\n    padding: \"5px\"\n  };\n  removeListeners();\n  listenPictureInPictureChanges();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, tagsRange.map(tagId => /*#__PURE__*/React.createElement(motion.div, {\n    drag: !fullScreen,\n    dragConstraints: {\n      top: (height() - 300) * -1,\n      bottom: 0,\n      left: (width() - 400) * -1,\n      right: 0\n    },\n    style: { ...boxVideo,\n      display: isVisible(tagId) ? boxVideo.display : \"none\"\n    },\n    key: `remote-stream-${tagId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: optionBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...option,\n      fontSize: \"14px\"\n    },\n    onClick: () => setFullScreen(!fullScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...option,\n      fontSize: \"14px\"\n    },\n    onClick: () => setFullScreen(!fullScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-subtract-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), !pictureInPictureEnabled && /*#__PURE__*/React.createElement(\"div\", {\n    style: option,\n    onClick: () => togglePictureInPicture(tagId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-picture-in-picture-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), pictureInPictureTag === tagId && /*#__PURE__*/React.createElement(\"div\", {\n    style: option,\n    onClick: () => togglePictureInPicture(tagId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-picture-in-picture-exit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...option,\n      fontSize: \"14px\"\n    },\n    onClick: () => setFullScreen(!fullScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-fullscreen-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: option,\n    onClick: () => (currentCall === null || currentCall === void 0 ? void 0 : currentCall.endCall) && currentCall.endCall(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"video\", {\n    style: video,\n    id: `remote-stream-${tagId}`,\n    hidden: !isVisible(tagId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default VideoBox;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/VideoBox.tsx"],"names":["React","useState","useCall","useChat","tagsRange","motion","height","width","VideoBox","fullScreen","setFullScreen","pictureInPictureEnabled","setPictureInPictureEnabled","pictureInPictureTag","setPictureInPictureTag","undefined","activeChat","currentCalls","currentCall","Array","from","values","find","call","callerObject","jid","togglePictureInPicture","tagId","document","pictureInPictureElement","video","querySelector","requestPictureInPicture","catch","error","exitPictureInPicture","listenPictureInPictureChanges","forEach","videoEl","addEventListener","removeListeners","removeEventListener","isVisible","receivingVideo","sendingVideo","boxVideo","position","right","bottom","zIndex","maxWidth","borderRadius","backgroundColor","display","justifyContent","alignItems","optionBox","top","color","option","cursor","marginLeft","fontSize","padding","map","left","endCall"],"mappings":"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","sourcesContent":["import React, { CSSProperties, useState } from \"react\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { tagsRange } from \"../services/voice/voicecommunicator\";\r\nimport { motion } from \"framer-motion\";\r\nimport { height, width } from \"../helpers/windowSize\";\r\ninterface DocumentPictureInPicture extends Document {\r\n  pictureInPictureElement: HTMLVideoElementPictureInPicture;\r\n  exitPictureInPicture(): Promise<any>;\r\n}\r\ninterface HTMLVideoElementPictureInPicture extends HTMLVideoElement {\r\n  requestPictureInPicture(): Promise<any>;\r\n}\r\nconst VideoBox: React.FC = () => {\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  const [\r\n    pictureInPictureEnabled,\r\n    setPictureInPictureEnabled,\r\n  ] = useState<boolean>(false);\r\n  const [pictureInPictureTag, setPictureInPictureTag] = useState<\r\n    number | undefined\r\n  >(undefined);\r\n  const { activeChat } = useChat();\r\n  const { currentCalls } = useCall();\r\n  const currentCall = Array.from(currentCalls.values()).find(\r\n    (call) => call.callerObject?.jid === activeChat.jid\r\n  );\r\n  const togglePictureInPicture = (tagId: number) => {\r\n    if (!(document as DocumentPictureInPicture).pictureInPictureElement) {\r\n      const video = document.querySelector(\r\n        `#remote-stream-${tagId}`\r\n      ) as HTMLVideoElementPictureInPicture;\r\n      video?.requestPictureInPicture().catch((error) => {});\r\n    } else {\r\n      (document as DocumentPictureInPicture)\r\n        .exitPictureInPicture()\r\n        .catch((error) => {});\r\n    }\r\n  };\r\n  const listenPictureInPictureChanges = () => {\r\n    tagsRange.forEach((tagId) => {\r\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\r\n      if (videoEl) {\r\n        videoEl.addEventListener(\"enterpictureinpicture\", () => {\r\n          // Video entered Picture-in-Picture mode.\r\n          setPictureInPictureEnabled(true);\r\n          setPictureInPictureTag(tagId);\r\n        });\r\n        videoEl.addEventListener(\"leavepictureinpicture\", () => {\r\n          // Video left Picture-in-Picture mode.\r\n          setPictureInPictureEnabled(false);\r\n          setPictureInPictureTag(undefined);\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const removeListeners = () => {\r\n    tagsRange.forEach((tagId) => {\r\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\r\n      if (videoEl) {\r\n        videoEl.removeEventListener(\"enterpictureinpicture\", () => {});\r\n        videoEl.removeEventListener(\"leavepictureinpicture\", () => {});\r\n      }\r\n    });\r\n  };\r\n  const isVisible = (tagId: number) =>\r\n    currentCall?.tagId === `remote-stream-${tagId}` &&\r\n    (currentCall.receivingVideo || currentCall.sendingVideo) &&\r\n    pictureInPictureTag !== tagId;\r\n\r\n  const boxVideo: CSSProperties = {\r\n    position: \"fixed\",\r\n    right: \"50px\",\r\n    bottom: \"50px\",\r\n    zIndex: 10,\r\n    maxWidth: \"400px\",\r\n    borderRadius: \"2px\",\r\n    backgroundColor: \"#000000\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  const video: CSSProperties = {\r\n    position: \"relative\",\r\n    maxWidth: \"400px\",\r\n  };\r\n\r\n  const optionBox: CSSProperties = {\r\n    position: \"absolute\",\r\n    zIndex: 10,\r\n    top: \"2%\",\r\n    right: \"2%\",\r\n    color: \"#ffffff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  const option: CSSProperties = {\r\n    cursor: \"pointer\",\r\n    marginLeft: \"5px\",\r\n    fontSize: \"18px\",\r\n    padding: \"5px\",\r\n  };\r\n  removeListeners();\r\n  listenPictureInPictureChanges();\r\n  return (\r\n    <>\r\n      {tagsRange.map((tagId) => (\r\n        <motion.div\r\n          drag={!fullScreen}\r\n          dragConstraints={{\r\n            top: (height() - 300) * -1,\r\n            bottom: 0,\r\n            left: (width() - 400) * -1,\r\n            right: 0,\r\n          }}\r\n          style={{\r\n            ...boxVideo,\r\n            display: isVisible(tagId) ? boxVideo.display : \"none\",\r\n          }}\r\n          key={`remote-stream-${tagId}`}\r\n        >\r\n          <div style={optionBox}>\r\n            <div\r\n              style={{ ...option, fontSize: \"14px\" }}\r\n              onClick={() => setFullScreen(!fullScreen)}\r\n            >\r\n              <i className=\"ri-add-line\"></i>\r\n            </div>\r\n            <div\r\n              style={{ ...option, fontSize: \"14px\" }}\r\n              onClick={() => setFullScreen(!fullScreen)}\r\n            >\r\n              <i className=\"ri-subtract-line\"></i>\r\n            </div>\r\n            {!pictureInPictureEnabled && (\r\n              <div style={option} onClick={() => togglePictureInPicture(tagId)}>\r\n                <i className=\"ri-picture-in-picture-2-line\"></i>\r\n              </div>\r\n            )}\r\n            {pictureInPictureTag === tagId && (\r\n              <div style={option} onClick={() => togglePictureInPicture(tagId)}>\r\n                <i className=\"ri-picture-in-picture-exit-line\"></i>\r\n              </div>\r\n            )}\r\n            <div\r\n              style={{ ...option, fontSize: \"14px\" }}\r\n              onClick={() => setFullScreen(!fullScreen)}\r\n            >\r\n              <i className=\"ri-fullscreen-line\"></i>\r\n            </div>\r\n            <div\r\n              style={option}\r\n              onClick={() => currentCall?.endCall && currentCall.endCall()}\r\n            >\r\n              <i className=\"ri-close-line\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          <video\r\n            style={video}\r\n            id={`remote-stream-${tagId}`}\r\n            hidden={!isVisible(tagId)}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoBox;\r\n"]},"metadata":{},"sourceType":"module"}