{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupMember.tsx\";\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Media, Badge } from 'reactstrap';\nimport ReactImageFallback from \"react-image-fallback\";\nimport { Link } from \"react-router-dom\";\nimport { useContact } from '../contexts/ContactContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport Swal from 'sweetalert2';\n\nconst ChangeGroupNameButton = ({\n  isAdmin,\n  defaultAvatar,\n  member\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    setClickedContact,\n    contacts,\n    contactsOutsideUserContacts,\n    openContact\n  } = useContact();\n  const {\n    setToggleMemberRole,\n    setRemovedMember,\n    setGroupToRemoveContact\n  } = useGroup();\n  const {\n    user\n  } = useAuth();\n  const {\n    activeChat,\n    chats,\n    openChat,\n    setShowChat\n  } = useChat();\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setShowChat(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    key: member.userId,\n    className: \"p-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: member.profilePicture,\n    className: \"rounded-circle avatar-xs mr-2\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      chats.forEach(cht => {\n        if (cht.id === member.userId) {\n          openChatAction(cht);\n          contacts.forEach(ctc => {\n            if (ctc.id === member.userId) {\n              setClickedContact(ctc);\n            }\n          });\n        } else {\n          contactsOutsideUserContacts.forEach(ctcOut => {\n            if (ctcOut.id === member.userId) {\n              openContact(ctcOut);\n              setClickedContact(ctcOut);\n            }\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, member.name), isAdmin && user.id !== member.userId && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => Swal.fire({\n      title: t(\"Remove\") + \" \" + member.name + \"?\",\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-small-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"has been removed!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-small-popup\"\n          }\n        });\n        setRemovedMember(member);\n        setGroupToRemoveContact(activeChat.groupId);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), member.role === \"admin\" ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"danger\",\n    className: \"badge-soft-danger float-right\",\n    onClick: () => isAdmin && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"a member?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-alert-small\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire(member.name + \" \" + t(\"is now a member!\"), \"\", \"success\");\n      }\n\n      setToggleMemberRole({\n        mbId: member.userId,\n        gpId: activeChat.groupId ? activeChat.groupId : \"\",\n        mbRole: member.role,\n        mb: member\n      });\n    }),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, t(\"Admin\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    className: \"badge-soft-success float-right\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => isAdmin && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-alert-small\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"is now an administrator!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-alert-small\"\n          }\n        });\n        setToggleMemberRole({\n          mbId: member.userId,\n          gpId: activeChat.groupId ? activeChat.groupId : \"\",\n          mbRole: member.role,\n          mb: member\n        });\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, t(\"Member\")))))));\n};\n\nexport default ChangeGroupNameButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupMember.tsx"],"names":["React","useTranslation","Card","Media","Badge","ReactImageFallback","Link","useContact","useAuth","useChat","useGroup","Swal","ChangeGroupNameButton","isAdmin","defaultAvatar","member","t","setClickedContact","contacts","contactsOutsideUserContacts","openContact","setToggleMemberRole","setRemovedMember","setGroupToRemoveContact","user","activeChat","chats","openChat","setShowChat","openChatAction","chat","userId","profilePicture","forEach","cht","id","ctc","ctcOut","name","cursor","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","customClass","popup","then","result","isConfirmed","position","showConfirmButton","timer","groupId","role","mbId","gpId","mbRole","mb"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, Media, Badge } from 'reactstrap';\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContact } from '../contexts/ContactContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport Swal from 'sweetalert2'\r\nimport IChat from '../alias/IChat';\r\n\r\ninterface IProps{\r\n    member: any;\r\n    defaultAvatar: any;\r\n    isAdmin: any;\r\n}\r\n\r\nconst ChangeGroupNameButton : React.FC<IProps> = ({ isAdmin, defaultAvatar, member, }) => {\r\n    const { t } = useTranslation();\r\n    const { setClickedContact, contacts, contactsOutsideUserContacts, openContact } = useContact();\r\n    const { setToggleMemberRole, setRemovedMember, setGroupToRemoveContact } = useGroup();\r\n    const { user } = useAuth();\r\n    const { activeChat, chats, openChat, setShowChat } = useChat();\r\n    const openChatAction = (chat: IChat) => {\r\n        openChat(chat);\r\n        setShowChat(true);\r\n    };\r\n\r\n    return <Card key={member.userId} className=\"p-2 mb-2\">\r\n    <Media className=\"align-items-center\">\r\n      <ReactImageFallback\r\n        src={member.profilePicture}\r\n        className=\"rounded-circle avatar-xs mr-2\"\r\n        alt=\"chatvia\"\r\n        fallbackImage={defaultAvatar}\r\n      />\r\n      <Media body>\r\n        <div className=\"text-left\">\r\n          <h5 className=\"font-size-14 mb-1\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => {\r\n                chats.forEach((cht: any) => {\r\n                  if (cht.id === member.userId) {\r\n                    openChatAction(cht);\r\n                    contacts.forEach((ctc: any) => {\r\n                      if (ctc.id === member.userId) {\r\n                        setClickedContact(ctc);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    contactsOutsideUserContacts.forEach(\r\n                      (ctcOut) => {\r\n                        if (ctcOut.id === member.userId) {\r\n                          openContact(ctcOut);\r\n                          setClickedContact(ctcOut);\r\n                        }\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              {member.name}\r\n            </Link>\r\n\r\n            {isAdmin && user.id !== member.userId && (\r\n              <span\r\n                className=\"float-right ml-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Remove\") + \" \" + member.name + \"?\",\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-small-popup\"\r\n                    }\r\n                  }\r\n                  ).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"has been removed!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-small-popup\"\r\n                        }\r\n                      })\r\n                      setRemovedMember(member);\r\n                      setGroupToRemoveContact(\r\n                        activeChat.groupId\r\n                      );\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"ri-close-fill\"></i>\r\n              </span>\r\n            )}\r\n            {member.role === \"admin\" ? (\r\n              <Badge\r\n                color=\"danger\"\r\n                className=\"badge-soft-danger float-right\"\r\n                onClick={() =>\r\n                  isAdmin &&\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Turn\") +\r\n                      \" \" +\r\n                      member.name +\r\n                      \" \" +\r\n                      t(\"a member?\"),\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-alert-small\"\r\n                    }\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire(\r\n                        member.name +\r\n                          \" \" +\r\n                          t(\"is now a member!\"),\r\n                        \"\",\r\n                        \"success\"\r\n                      );\r\n                    }\r\n                    setToggleMemberRole({\r\n                      mbId: member.userId,\r\n                      gpId: activeChat.groupId\r\n                        ? activeChat.groupId\r\n                        : \"\",\r\n                      mbRole: member.role,\r\n                      mb: member,\r\n                    });\r\n                  })\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {t(\"Admin\")}\r\n              </Badge>\r\n            ) : (\r\n              <Badge\r\n                color=\"success\"\r\n                className=\"badge-soft-success float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  isAdmin &&\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Turn\") +\r\n                      \" \" +\r\n                      member.name +\r\n                      \" \" +\r\n                      t(\"an administrator?\"),\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-alert-small\"\r\n                    }\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"is now an administrator!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-alert-small\"\r\n                        }\r\n                      })\r\n                      setToggleMemberRole({\r\n                        mbId: member.userId,\r\n                        gpId: activeChat.groupId\r\n                          ? activeChat.groupId\r\n                          : \"\",\r\n                        mbRole: member.role,\r\n                        mb: member,\r\n                      });\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                {t(\"Member\")}\r\n              </Badge>\r\n            )}\r\n          </h5>\r\n        </div>\r\n      </Media>\r\n    </Media>\r\n  </Card>\r\n}\r\n\r\nexport default ChangeGroupNameButton; "]},"metadata":{},"sourceType":"module"}