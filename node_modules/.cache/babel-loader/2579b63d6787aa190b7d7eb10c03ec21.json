{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessage.tsx\";\nimport React from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChatMessagePhoto from \"./ChatMessagePhoto\";\nimport ChatMessageFooter from \"./ChatMessageFooter\";\nimport ChatMessageText from \"./ChatMessageText\";\nimport ChatMessageMenuOption from \"./ChatMessageMenuOption\";\nimport ReplyMessageWrapper from \"./ReplyMessageWrapper\";\n\nconst ChatMessage = ({\n  activeChat,\n  message,\n  key\n}) => {\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    className: user.id === message.fromUser ? \"right\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatMessagePhoto, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-content \" + (user.id === message.fromUser ? \"message-chat-left\" : \"message-chat-right\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReplyMessageWrapper, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ChatMessageText, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ChatMessageFooter, {\n    message: message,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ChatMessageMenuOption, {\n    activeChat: activeChat,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, message.userName))));\n};\n\nexport default ChatMessage;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessage.tsx"],"names":["React","useAuth","ChatMessagePhoto","ChatMessageFooter","ChatMessageText","ChatMessageMenuOption","ReplyMessageWrapper","ChatMessage","activeChat","message","key","user","id","fromUser","userName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAQA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAkC;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAWV,OAAO,EAAxB;AAEA,sBACE;AAAI,IAAA,GAAG,EAAES,GAAT;AAAc,IAAA,SAAS,EAAEC,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACI,QAApB,GAA+B,OAA/B,GAAyC,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AACE,IAAA,SAAS,EACP,wBACCE,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACI,QAApB,GACG,mBADH,GAEG,oBAHJ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEJ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEA,OAA5B;AAAqC,IAAA,IAAI,EAAEE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eAME,oBAAC,qBAAD;AAAuB,IAAA,UAAU,EAAEH,UAAnC;AAA+C,IAAA,OAAO,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,eAgBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCA,OAAO,CAACK,QAA5C,CAhBF,CALF,CADF,CADF;AA4BD,CA/BD;;AAiCA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nimport ChatMessagePhoto from \"./ChatMessagePhoto\";\r\nimport ChatMessageFooter from \"./ChatMessageFooter\";\r\nimport ChatMessageText from \"./ChatMessageText\";\r\nimport ChatMessageMenuOption from \"./ChatMessageMenuOption\";\r\nimport ReplyMessageWrapper from \"./ReplyMessageWrapper\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n  key: any;\r\n}\r\n\r\nconst ChatMessage: React.FC<IProps> = ({ activeChat, message, key }) => {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <li key={key} className={user.id === message.fromUser ? \"right\" : \"\"}>\r\n      <div className=\"conversation-list\">\r\n        <div className=\"chat-avatar\">\r\n          <ChatMessagePhoto message={message} />\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            \"user-chat-content \" +\r\n            (user.id === message.fromUser\r\n              ? \"message-chat-left\"\r\n              : \"message-chat-right\")\r\n          }\r\n        >\r\n          <div className=\"ctext-wrap\">\r\n            <div className=\"ctext-wrap-content\">\r\n              <ReplyMessageWrapper message={message} />\r\n              <ChatMessageText message={message} />\r\n              <ChatMessageFooter message={message} user={user} />\r\n            </div>\r\n            <ChatMessageMenuOption activeChat={activeChat} message={message} />\r\n          </div>\r\n          <div className=\"conversation-name\">{message.userName}</div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n"]},"metadata":{},"sourceType":"module"}