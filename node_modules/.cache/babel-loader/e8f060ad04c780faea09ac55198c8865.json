{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { Parameters } from \"./parameters\";\n/**\n * Name Address SIP header.\n * @public\n */\n\nexport var NameAddrHeader = /*#__PURE__*/function (_Parameters) {\n  _inherits(NameAddrHeader, _Parameters);\n\n  var _super = _createSuper(NameAddrHeader);\n\n  /**\n   * Constructor\n   * @param uri -\n   * @param displayName -\n   * @param parameters -\n   */\n  function NameAddrHeader(uri, displayName, parameters) {\n    var _this;\n\n    _classCallCheck(this, NameAddrHeader);\n\n    _this = _super.call(this, parameters);\n    _this.uri = uri;\n    _this._displayName = displayName;\n    return _this;\n  }\n\n  _createClass(NameAddrHeader, [{\n    key: \"clone\",\n    value: function clone() {\n      return new NameAddrHeader(this.uri.clone(), this._displayName, JSON.parse(JSON.stringify(this.parameters)));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var body = this.displayName || this.displayName === \"0\" ? '\"' + this.displayName + '\" ' : \"\";\n      body += \"<\" + this.uri.toString() + \">\";\n\n      for (var parameter in this.parameters) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (this.parameters.hasOwnProperty(parameter)) {\n          body += \";\" + parameter;\n\n          if (this.parameters[parameter] !== null) {\n            body += \"=\" + this.parameters[parameter];\n          }\n        }\n      }\n\n      return body;\n    }\n  }, {\n    key: \"friendlyName\",\n    get: function get() {\n      return this.displayName || this.uri.aor;\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._displayName;\n    },\n    set: function set(value) {\n      this._displayName = value;\n    }\n  }]);\n\n  return NameAddrHeader;\n}(Parameters);","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/sip.js/lib/grammar/name-addr-header.js"],"names":["Parameters","NameAddrHeader","uri","displayName","parameters","_displayName","clone","JSON","parse","stringify","body","toString","parameter","hasOwnProperty","aor","value"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA;AACA;AACA;AACA;;AACA,WAAaC,cAAb;AAAA;;AAAA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACI,0BAAYC,GAAZ,EAAiBC,WAAjB,EAA8BC,UAA9B,EAA0C;AAAA;;AAAA;;AACtC,8BAAMA,UAAN;AACA,UAAKF,GAAL,GAAWA,GAAX;AACA,UAAKG,YAAL,GAAoBF,WAApB;AAHsC;AAIzC;;AAXL;AAAA;AAAA,4BAmBY;AACJ,aAAO,IAAIF,cAAJ,CAAmB,KAAKC,GAAL,CAASI,KAAT,EAAnB,EAAqC,KAAKD,YAA1C,EAAwDE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKL,UAApB,CAAX,CAAxD,CAAP;AACH;AArBL;AAAA;AAAA,+BAsBe;AACP,UAAIM,IAAI,GAAI,KAAKP,WAAL,IAAoB,KAAKA,WAAL,KAAqB,GAA1C,GAAiD,MAAM,KAAKA,WAAX,GAAyB,IAA1E,GAAiF,EAA5F;AACAO,MAAAA,IAAI,IAAI,MAAM,KAAKR,GAAL,CAASS,QAAT,EAAN,GAA4B,GAApC;;AACA,WAAK,IAAMC,SAAX,IAAwB,KAAKR,UAA7B,EAAyC;AACrC;AACA,YAAI,KAAKA,UAAL,CAAgBS,cAAhB,CAA+BD,SAA/B,CAAJ,EAA+C;AAC3CF,UAAAA,IAAI,IAAI,MAAME,SAAd;;AACA,cAAI,KAAKR,UAAL,CAAgBQ,SAAhB,MAA+B,IAAnC,EAAyC;AACrCF,YAAAA,IAAI,IAAI,MAAM,KAAKN,UAAL,CAAgBQ,SAAhB,CAAd;AACH;AACJ;AACJ;;AACD,aAAOF,IAAP;AACH;AAnCL;AAAA;AAAA,wBAYuB;AACf,aAAO,KAAKP,WAAL,IAAoB,KAAKD,GAAL,CAASY,GAApC;AACH;AAdL;AAAA;AAAA,wBAesB;AAAE,aAAO,KAAKT,YAAZ;AAA2B,KAfnD;AAAA,sBAgBoBU,KAhBpB,EAgB2B;AACnB,WAAKV,YAAL,GAAoBU,KAApB;AACH;AAlBL;;AAAA;AAAA,EAAoCf,UAApC","sourcesContent":["import { Parameters } from \"./parameters\";\n/**\n * Name Address SIP header.\n * @public\n */\nexport class NameAddrHeader extends Parameters {\n    /**\n     * Constructor\n     * @param uri -\n     * @param displayName -\n     * @param parameters -\n     */\n    constructor(uri, displayName, parameters) {\n        super(parameters);\n        this.uri = uri;\n        this._displayName = displayName;\n    }\n    get friendlyName() {\n        return this.displayName || this.uri.aor;\n    }\n    get displayName() { return this._displayName; }\n    set displayName(value) {\n        this._displayName = value;\n    }\n    clone() {\n        return new NameAddrHeader(this.uri.clone(), this._displayName, JSON.parse(JSON.stringify(this.parameters)));\n    }\n    toString() {\n        let body = (this.displayName || this.displayName === \"0\") ? '\"' + this.displayName + '\" ' : \"\";\n        body += \"<\" + this.uri.toString() + \">\";\n        for (const parameter in this.parameters) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (this.parameters.hasOwnProperty(parameter)) {\n                body += \";\" + parameter;\n                if (this.parameters[parameter] !== null) {\n                    body += \"=\" + this.parameters[parameter];\n                }\n            }\n        }\n        return body;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}