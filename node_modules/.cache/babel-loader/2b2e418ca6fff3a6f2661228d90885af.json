{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatInputAttachFileButton.tsx\";\nimport React, { useState } from \"react\";\nimport { Input, UncontrolledTooltip, Label, Button } from \"reactstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport DeliverStatus from \"../enuns/DeliverStatus\";\nimport ReadStatus from \"../enuns/ReadStatus\";\nimport { useTranslation } from \"react-i18next\";\nimport Lightbox from \"react-image-lightbox\";\n\nconst ChatInputAttachedFileButton = () => {\n  const {\n    chats,\n    setChats,\n    activeChat\n  } = useChat();\n  const {\n    user\n  } = useAuth();\n  const [fileStorage, setFileStorage] = useState();\n  const editButtons = [/*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"ril__toolbarItemChild\",\n    style: {\n      paddingTop: 6\n    },\n    onClick: () => {\n      onAddMessage(fileStorage);\n      setIsOpen(!isOpen);\n      setFileStorage(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Send\")];\n\n  const previewFileSending = e => {\n    let files = e.target.files;\n    if ((files === null || files === void 0 ? void 0 : files.length) === 0) return;\n    let file = files === null || files === void 0 ? void 0 : files.item(0);\n\n    if (file && file.size > 15728640) {\n      alert(\"Tamanho de arquivo \" + file.name + \" não suportado. Por favor, envie um arquivo menor do que 15mb\"); //Sweetalert\n\n      return;\n    } else {\n      toggleLightbox(file);\n      setFileStorage(file);\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n\n  const onAddMessage = file => {\n    setChats(chats.map(item => {\n      if (activeChat) if (item.id === (activeChat === null || activeChat === void 0 ? void 0 : activeChat.id)) {\n        item.messages.push({\n          id: `${item.messages.length + 1}`,\n          userName: user.name,\n          message: \"Carregando...\",\n          time: \"\",\n          isImageMessage: false,\n          isFileMessage: false,\n          isVideoMessage: false,\n          isAudioMessage: false,\n          fileUrl: \"\",\n          sendFile: file,\n          toUser: activeChat.id,\n          fromUser: user.id,\n          deliverStatus: DeliverStatus.SENDING,\n          readStatus: ReadStatus.UNREAD,\n          deliverTimestamp: \"\",\n          readTimestamp: \"\",\n          content: \"metadata\",\n          contentType: \"type\",\n          isReplyMessage: false,\n          isForwardMessage: false\n        });\n      }\n      return item;\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"null\");\n\n  const toggleLightbox = currentImage => {\n    setIsOpen(!isOpen);\n    setCurrentImage(currentImage);\n  }; //chamar a mesma lightbox no ctrl+v também\n\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    id: \"files\",\n    className: \"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-attachment-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: previewFileSending,\n    type: \"file\",\n    name: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"files\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, t(\"Attach File\")), isOpen && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: fileStorage.url,\n    onCloseRequest: toggleLightbox,\n    imageTitle: \"Image File\",\n    enableZoom: true,\n    toolbarButtons: [editButtons],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChatInputAttachedFileButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatInputAttachFileButton.tsx"],"names":["React","useState","Input","UncontrolledTooltip","Label","Button","useAuth","useChat","DeliverStatus","ReadStatus","useTranslation","Lightbox","ChatInputAttachedFileButton","chats","setChats","activeChat","user","fileStorage","setFileStorage","editButtons","paddingTop","onAddMessage","setIsOpen","isOpen","undefined","previewFileSending","e","files","target","length","file","item","size","alert","name","toggleLightbox","t","map","id","messages","push","userName","message","time","isImageMessage","isFileMessage","isVideoMessage","isAudioMessage","fileUrl","sendFile","toUser","fromUser","deliverStatus","SENDING","readStatus","UNREAD","deliverTimestamp","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","currentImage","setCurrentImage","url"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, UncontrolledTooltip, Label, Button } from \"reactstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport CheckOutlined from '@ant-design/icons';\r\n\r\nconst ChatInputAttachedFileButton: React.FC = () => {\r\n  const { chats, setChats, activeChat } = useChat();\r\n  const { user } = useAuth();\r\n  const [fileStorage, setFileStorage] = useState<any>();\r\n\r\n  const editButtons = [\r\n    (\r\n      <Button\r\n        type=\"button\"\r\n        className=\"ril__toolbarItemChild\"\r\n        style={{\r\n          paddingTop: 6,\r\n        }}\r\n        \r\n        onClick={() => {\r\n            onAddMessage(fileStorage);\r\n            setIsOpen(!isOpen);\r\n            setFileStorage(undefined);\r\n        }}\r\n        >Send</Button>\r\n    ),\r\n  ];\r\n  \r\n  const previewFileSending = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    if(files?.length === 0) return;\r\n    let file = files?.item(0);\r\n    if (file && file.size > 15728640) {\r\n      alert(\r\n        \"Tamanho de arquivo \" +\r\n          file.name +\r\n          \" não suportado. Por favor, envie um arquivo menor do que 15mb\"\r\n      ); //Sweetalert\r\n      return;\r\n    }else{\r\n      toggleLightbox(file);\r\n      setFileStorage(file);\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onAddMessage = (file: File) => {\r\n    setChats(\r\n      chats.map((item) => {\r\n        if (activeChat)\r\n          if (item.id === activeChat?.id) {\r\n            item.messages.push({\r\n              id: `${item.messages.length + 1}`,\r\n              userName: user.name,\r\n              message: \"Carregando...\",\r\n              time: \"\",\r\n              isImageMessage: false,\r\n              isFileMessage: false,\r\n              isVideoMessage: false,\r\n              isAudioMessage: false,\r\n              fileUrl: \"\",\r\n              sendFile: file,\r\n              toUser: activeChat.id,\r\n              fromUser: user.id,\r\n              deliverStatus: DeliverStatus.SENDING,\r\n              readStatus: ReadStatus.UNREAD,\r\n              deliverTimestamp: \"\",\r\n              readTimestamp: \"\",\r\n              content: \"metadata\",\r\n              contentType: \"type\",\r\n              isReplyMessage: false,\r\n              isForwardMessage: false,\r\n            });\r\n          }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n\r\n  //chamar a mesma lightbox no ctrl+v também\r\n\r\n  return (\r\n    <li className=\"list-inline-item input-file\">\r\n      <Label\r\n        id=\"files\"\r\n        className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"\r\n      >\r\n        <i className=\"ri-attachment-line\"></i>\r\n        <Input onChange={previewFileSending} type=\"file\" name=\"fileInput\" />\r\n      </Label>\r\n      <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n        {t(\"Attach File\")}\r\n      </UncontrolledTooltip>\r\n      {isOpen && (\r\n        <>\r\n        <Lightbox\r\n          mainSrc={fileStorage.url}\r\n          onCloseRequest={toggleLightbox}\r\n          imageTitle=\"Image File\"\r\n          enableZoom={true}\r\n          toolbarButtons={[\r\n            editButtons\r\n          ]}\r\n        />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatInputAttachedFileButton;\r\n"]},"metadata":{},"sourceType":"module"}