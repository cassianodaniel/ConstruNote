{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { SquadCommunicator as SquadService } from \"./SquadCommunicatorService\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { Events as VoiceEvents } from \"./voice/types\";\nimport { useCall } from \"../contexts/CallContext\";\nimport CallStatus from \"../enuns/CallStatus\"; //import { callbackify } from \"util\";\n// import IContact from \"../alias/IContact\";\n// Comentado para Evitar Warnings no console\n// interface CreateGroupCallback {\n//   (groupCreated: boolean): void;\n// }\n\nlet squadService;\n\nconst SquadSipCommunicator = () => {\n  const {\n    contacts\n  } = useContact();\n  const {\n    currentCall,\n    setCurrentCall,\n    callNumber,\n    setCallNumber,\n    endCall,\n    setEndCall\n  } = useCall();\n  const {\n    groups\n  } = useGroup();\n\n  const init = () => {\n    squadService = SquadService.getInstance({\n      voiceCB: voiceCommuncatorSubscribe\n    });\n  };\n\n  const onMakeCall = () => {\n    if (callNumber === null || callNumber === void 0 ? void 0 : callNumber.number) {\n      var _squadService, _squadService$sip;\n\n      const constraints = {\n        useAudio: callNumber === null || callNumber === void 0 ? void 0 : callNumber.useAudio,\n        useVideo: callNumber === null || callNumber === void 0 ? void 0 : callNumber.useVideo\n      };\n      (_squadService = squadService) === null || _squadService === void 0 ? void 0 : (_squadService$sip = _squadService.sip) === null || _squadService$sip === void 0 ? void 0 : _squadService$sip.makeCall(callNumber === null || callNumber === void 0 ? void 0 : callNumber.number, constraints);\n      setCallNumber(undefined);\n    }\n  };\n\n  const onEndCall = () => {\n    if (currentCall && currentCall.callId && endCall) {\n      var _squadService2, _squadService2$sip, _squadService2$sip$si;\n\n      if ((_squadService2 = squadService) === null || _squadService2 === void 0 ? void 0 : (_squadService2$sip = _squadService2.sip) === null || _squadService2$sip === void 0 ? void 0 : (_squadService2$sip$si = _squadService2$sip.sip) === null || _squadService2$sip$si === void 0 ? void 0 : _squadService2$sip$si.currentCall) {\n        var _squadService3, _squadService4, _squadService4$sip, _squadService4$sip$si;\n\n        (_squadService3 = squadService) === null || _squadService3 === void 0 ? void 0 : _squadService3.sip.sip.endCall((_squadService4 = squadService) === null || _squadService4 === void 0 ? void 0 : (_squadService4$sip = _squadService4.sip) === null || _squadService4$sip === void 0 ? void 0 : (_squadService4$sip$si = _squadService4$sip.sip) === null || _squadService4$sip$si === void 0 ? void 0 : _squadService4$sip$si.currentCall);\n      }\n\n      setEndCall(undefined);\n    }\n  };\n\n  function voiceCommuncatorSubscribe(event, data) {\n    var _invitation$remoteIde, _invitation$remoteIde2, _ref, _ref2, _ref3, _inviter$sessionDescr, _inviter$remoteIdenti, _inviter$remoteIdenti2, _ref4, _ref5, _ref6;\n\n    let endCall;\n\n    switch (event) {\n      case VoiceEvents.CONNECTED:\n        // squadService?.sip.sip.invite(\"2045\");\n        console.log(\"connected\");\n        break;\n\n      case VoiceEvents.RECEIVED_CALL:\n        const invitation = data;\n        const invitation_caller_id_number = (_invitation$remoteIde = invitation.remoteIdentity.uri.aor) === null || _invitation$remoteIde === void 0 ? void 0 : (_invitation$remoteIde2 = _invitation$remoteIde.split(\"@\")[0]) === null || _invitation$remoteIde2 === void 0 ? void 0 : _invitation$remoteIde2.replace(\"sip:\", \"\");\n        const invitation_ctct_of_number = contacts.find(ctc => ctc.number === invitation_caller_id_number) || groups.find(grp => grp.groupId === inviter_caller_id_number);\n\n        const acceptCall = (useVideo = false) => {\n          var _squadService5, _squadService6;\n\n          (_squadService5 = squadService) === null || _squadService5 === void 0 ? void 0 : _squadService5.sip.updateConstraintsParams({\n            useVideo\n          });\n          invitation.accept({\n            sessionDescriptionHandlerOptions: {\n              constraints: (_squadService6 = squadService) === null || _squadService6 === void 0 ? void 0 : _squadService6.sip.getConstraints()\n            }\n          });\n          if (currentCall) setCurrentCall({ ...currentCall,\n            callStatus: CallStatus.CONNECTING,\n            sendingVideo: useVideo\n          });\n        };\n\n        endCall = () => {\n          var _squadService7;\n\n          (_squadService7 = squadService) === null || _squadService7 === void 0 ? void 0 : _squadService7.sip.sip.endCall(invitation);\n        };\n\n        const receivedCall = {\n          callId: invitation.id,\n          callStatus: CallStatus.RINGING,\n          callerNumber: invitation_caller_id_number,\n          callerObject: invitation_ctct_of_number,\n          callerId: ((_ref = invitation_ctct_of_number) === null || _ref === void 0 ? void 0 : _ref.id) || ((_ref2 = invitation_ctct_of_number) === null || _ref2 === void 0 ? void 0 : _ref2.groupId),\n          callerName: invitation_ctct_of_number === null || invitation_ctct_of_number === void 0 ? void 0 : invitation_ctct_of_number.name,\n          callerProfilePicture: invitation_ctct_of_number === null || invitation_ctct_of_number === void 0 ? void 0 : invitation_ctct_of_number.profilePicture,\n          session: invitation,\n          isGroup: !!((_ref3 = invitation_ctct_of_number) === null || _ref3 === void 0 ? void 0 : _ref3.groupId),\n          accept: acceptCall,\n          endCall\n        };\n        setCurrentCall(receivedCall);\n        break;\n\n      case VoiceEvents.MAKE_CALL:\n        const inviter = data;\n        const localConstraints = inviter === null || inviter === void 0 ? void 0 : (_inviter$sessionDescr = inviter.sessionDescriptionHandlerOptions) === null || _inviter$sessionDescr === void 0 ? void 0 : _inviter$sessionDescr.constraints;\n        const inviter_caller_id_number = (_inviter$remoteIdenti = inviter.remoteIdentity.uri.aor) === null || _inviter$remoteIdenti === void 0 ? void 0 : (_inviter$remoteIdenti2 = _inviter$remoteIdenti.split(\"@\")[0]) === null || _inviter$remoteIdenti2 === void 0 ? void 0 : _inviter$remoteIdenti2.replace(\"sip:\", \"\");\n        const inviter_ctct_of_number = contacts.find(ctc => ctc.number === inviter_caller_id_number) || groups.find(grp => grp.groupId === inviter_caller_id_number);\n\n        endCall = () => {\n          var _squadService8;\n\n          (_squadService8 = squadService) === null || _squadService8 === void 0 ? void 0 : _squadService8.sip.sip.endCall(inviter);\n        };\n\n        const sendCall = {\n          callId: inviter.id,\n          callStatus: CallStatus.CALLING,\n          callerNumber: inviter_caller_id_number,\n          callerObject: inviter_ctct_of_number,\n          callerId: ((_ref4 = inviter_ctct_of_number) === null || _ref4 === void 0 ? void 0 : _ref4.id) || ((_ref5 = inviter_ctct_of_number) === null || _ref5 === void 0 ? void 0 : _ref5.groupId),\n          callerName: inviter_ctct_of_number === null || inviter_ctct_of_number === void 0 ? void 0 : inviter_ctct_of_number.name,\n          callerProfilePicture: inviter_ctct_of_number === null || inviter_ctct_of_number === void 0 ? void 0 : inviter_ctct_of_number.profilePicture,\n          session: inviter,\n          isGroup: !!((_ref6 = inviter_ctct_of_number) === null || _ref6 === void 0 ? void 0 : _ref6.groupId),\n          sendingVideo: (localConstraints === null || localConstraints === void 0 ? void 0 : localConstraints.video) !== false,\n          endCall\n        };\n        setCurrentCall(sendCall);\n        console.log(\"make_call\");\n        break;\n\n      case VoiceEvents.CALL_ON_GOING:\n        const callOnGoing = currentCall;\n\n        if (callOnGoing) {\n          callOnGoing.callStatus = CallStatus.ON_GOING;\n          callOnGoing.receivingVideo = data.receivingVideo;\n          console.log(callOnGoing);\n          setCurrentCall(callOnGoing);\n        }\n\n        console.log(\"call_on_going\");\n        break;\n\n      case VoiceEvents.CALL_HANGUP:\n        if (currentCall) {\n          setCurrentCall(undefined);\n        }\n\n        break;\n\n      default:\n        console.log(event);\n        break;\n    }\n  }\n\n  const updateFunction = () => {\n    var _squadService9;\n\n    (_squadService9 = squadService) === null || _squadService9 === void 0 ? void 0 : _squadService9.updateVoiceSubscribeFunction(voiceCommuncatorSubscribe);\n  };\n\n  useEffect(init, []);\n  useEffect(updateFunction, [contacts, groups, currentCall, callNumber]);\n  useEffect(onMakeCall, [callNumber]);\n  useEffect(onEndCall, [endCall]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default SquadSipCommunicator;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadSipCommunicator.tsx"],"names":["React","useEffect","SquadCommunicator","SquadService","useGroup","useContact","Events","VoiceEvents","useCall","CallStatus","squadService","SquadSipCommunicator","contacts","currentCall","setCurrentCall","callNumber","setCallNumber","endCall","setEndCall","groups","init","getInstance","voiceCB","voiceCommuncatorSubscribe","onMakeCall","number","constraints","useAudio","useVideo","sip","makeCall","undefined","onEndCall","callId","event","data","CONNECTED","console","log","RECEIVED_CALL","invitation","invitation_caller_id_number","remoteIdentity","uri","aor","split","replace","invitation_ctct_of_number","find","ctc","grp","groupId","inviter_caller_id_number","acceptCall","updateConstraintsParams","accept","sessionDescriptionHandlerOptions","getConstraints","callStatus","CONNECTING","sendingVideo","receivedCall","id","RINGING","callerNumber","callerObject","callerId","callerName","name","callerProfilePicture","profilePicture","session","isGroup","MAKE_CALL","inviter","localConstraints","inviter_ctct_of_number","sendCall","CALLING","video","CALL_ON_GOING","callOnGoing","ON_GOING","receivingVideo","CALL_HANGUP","updateFunction","updateVoiceSubscribeFunction"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { SquadCommunicator as SquadService } from \"./SquadCommunicatorService\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport { Events as VoiceEvents } from \"./voice/types\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport ICall from \"../alias/ICall\";\r\nimport { Invitation, Inviter } from \"sip.js\";\r\nimport CallStatus from \"../enuns/CallStatus\";\r\n//import { callbackify } from \"util\";\r\n\r\n// import IContact from \"../alias/IContact\";\r\n// Comentado para Evitar Warnings no console\r\n// interface CreateGroupCallback {\r\n//   (groupCreated: boolean): void;\r\n// }\r\n\r\nlet squadService: SquadService | undefined;\r\n\r\nconst SquadSipCommunicator: React.FC = () => {\r\n  const { contacts } = useContact();\r\n  const {\r\n    currentCall,\r\n    setCurrentCall,\r\n    callNumber,\r\n    setCallNumber,\r\n    endCall,\r\n    setEndCall,\r\n  } = useCall();\r\n  const { groups } = useGroup();\r\n\r\n  const init = () => {\r\n    squadService = SquadService.getInstance({\r\n      voiceCB: voiceCommuncatorSubscribe,\r\n    });\r\n  };\r\n\r\n  const onMakeCall = () => {\r\n    if (callNumber?.number) {\r\n      const constraints = {\r\n        useAudio: callNumber?.useAudio,\r\n        useVideo: callNumber?.useVideo,\r\n      };\r\n      squadService?.sip?.makeCall(callNumber?.number, constraints);\r\n      setCallNumber(undefined);\r\n    }\r\n  };\r\n\r\n  const onEndCall = () => {\r\n    if (currentCall && currentCall.callId && endCall) {\r\n      if (squadService?.sip?.sip?.currentCall) {\r\n        squadService?.sip.sip.endCall(squadService?.sip?.sip?.currentCall);\r\n      }\r\n      setEndCall(undefined);\r\n    }\r\n  };\r\n\r\n  function voiceCommuncatorSubscribe(event: VoiceEvents, data: any) {\r\n    let endCall;\r\n    switch (event) {\r\n      case VoiceEvents.CONNECTED:\r\n        // squadService?.sip.sip.invite(\"2045\");\r\n        console.log(\"connected\");\r\n        break;\r\n      case VoiceEvents.RECEIVED_CALL:\r\n        const invitation = data as Invitation;\r\n        const invitation_caller_id_number = invitation.remoteIdentity.uri.aor\r\n          ?.split(\"@\")[0]\r\n          ?.replace(\"sip:\", \"\");\r\n        const invitation_ctct_of_number =\r\n          contacts.find((ctc) => ctc.number === invitation_caller_id_number) ||\r\n          groups.find((grp) => grp.groupId === inviter_caller_id_number);\r\n        const acceptCall = (useVideo: boolean = false) => {\r\n          squadService?.sip.updateConstraintsParams({ useVideo });\r\n          invitation.accept({\r\n            sessionDescriptionHandlerOptions: {\r\n              constraints: squadService?.sip.getConstraints(),\r\n            },\r\n          });\r\n          if (currentCall)\r\n            setCurrentCall({\r\n              ...currentCall,\r\n              callStatus: CallStatus.CONNECTING,\r\n              sendingVideo: useVideo,\r\n            });\r\n        };\r\n        endCall = () => {\r\n          squadService?.sip.sip.endCall(invitation);\r\n        };\r\n        const receivedCall: ICall = {\r\n          callId: invitation.id,\r\n          callStatus: CallStatus.RINGING,\r\n          callerNumber: invitation_caller_id_number,\r\n          callerObject: invitation_ctct_of_number,\r\n          callerId:\r\n            (invitation_ctct_of_number as IContact)?.id ||\r\n            (invitation_ctct_of_number as IGroup)?.groupId,\r\n          callerName: invitation_ctct_of_number?.name,\r\n          callerProfilePicture: invitation_ctct_of_number?.profilePicture,\r\n          session: invitation,\r\n          isGroup: !!(invitation_ctct_of_number as IGroup)?.groupId,\r\n          accept: acceptCall,\r\n          endCall,\r\n        };\r\n        setCurrentCall(receivedCall);\r\n        break;\r\n      case VoiceEvents.MAKE_CALL:\r\n        const inviter = data as Inviter;\r\n        const localConstraints = inviter?.sessionDescriptionHandlerOptions\r\n          ?.constraints as MediaStreamConstraints;\r\n        const inviter_caller_id_number = inviter.remoteIdentity.uri.aor\r\n          ?.split(\"@\")[0]\r\n          ?.replace(\"sip:\", \"\");\r\n        const inviter_ctct_of_number =\r\n          contacts.find((ctc) => ctc.number === inviter_caller_id_number) ||\r\n          groups.find((grp) => grp.groupId === inviter_caller_id_number);\r\n\r\n        endCall = () => {\r\n          squadService?.sip.sip.endCall(inviter);\r\n        };\r\n        const sendCall: ICall = {\r\n          callId: inviter.id,\r\n          callStatus: CallStatus.CALLING,\r\n          callerNumber: inviter_caller_id_number,\r\n          callerObject: inviter_ctct_of_number,\r\n          callerId:\r\n            (inviter_ctct_of_number as IContact)?.id ||\r\n            (inviter_ctct_of_number as IGroup)?.groupId,\r\n          callerName: inviter_ctct_of_number?.name,\r\n          callerProfilePicture: inviter_ctct_of_number?.profilePicture,\r\n          session: inviter,\r\n          isGroup: !!(inviter_ctct_of_number as IGroup)?.groupId,\r\n          sendingVideo: localConstraints?.video !== false,\r\n          endCall,\r\n        };\r\n        setCurrentCall(sendCall);\r\n        console.log(\"make_call\");\r\n        break;\r\n      case VoiceEvents.CALL_ON_GOING:\r\n        const callOnGoing = currentCall;\r\n        if (callOnGoing) {\r\n          callOnGoing.callStatus = CallStatus.ON_GOING;\r\n          callOnGoing.receivingVideo = data.receivingVideo;\r\n          console.log(callOnGoing);\r\n          setCurrentCall(callOnGoing);\r\n        }\r\n        console.log(\"call_on_going\");\r\n        break;\r\n      case VoiceEvents.CALL_HANGUP:\r\n        if (currentCall) {\r\n          setCurrentCall(undefined);\r\n        }\r\n        break;\r\n      default:\r\n        console.log(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const updateFunction = () => {\r\n    squadService?.updateVoiceSubscribeFunction(voiceCommuncatorSubscribe);\r\n  };\r\n\r\n  useEffect(init, []);\r\n  useEffect(updateFunction, [contacts, groups, currentCall, callNumber]);\r\n  useEffect(onMakeCall, [callNumber]);\r\n  useEffect(onEndCall, [endCall]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default SquadSipCommunicator;\r\n"]},"metadata":{},"sourceType":"module"}