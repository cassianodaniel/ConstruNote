{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatHead.tsx\";\nimport React from \"react\";\nimport { Media, Button, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useCall } from \"../contexts/CallContext\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport ModalAddParticipant from \"./ModalAddParticipant\";\nimport ScreenType from \"../enuns/ScreenType\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CopyParticipantLinkButton from \"./CopyParticipantLinkButton\";\nimport CopyModeratorLinkButton from './CopyModeratorLinkButton';\n\nconst ChatHead = ({\n  chatProfileSidebarOpen,\n  setChatProfileSidebarOpen\n}) => {\n  var _activeChat$members, _activeChat$members$f;\n\n  const {\n    user\n  } = useAuth();\n  const {\n    chats,\n    activeChat,\n    setChats\n  } = useChat();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    conferenceList\n  } = useConference();\n  const {\n    setShowModalAddMember,\n    setShowModalAddParticipant\n  } = useModal();\n  const {\n    setCallNumber\n  } = useCall();\n  const {\n    setScreen\n  } = useMainBox();\n\n  const ChatProfileSidebar = () => {\n    setChatProfileSidebarOpen(!chatProfileSidebarOpen);\n  };\n\n  const {\n    activeConference\n  } = useConference();\n\n  const makeCall = useVideo => {\n    let contact = contacts.find(item => item.jid === activeChat.jid);\n    let group = groups.find(gr => gr.jid === activeChat.jid);\n    let conference = conferenceList.find(conf => conf.jid === activeChat.jid);\n    let number;\n    if (contact) number = contact === null || contact === void 0 ? void 0 : contact.number;else if (group) number = `citrus-conference-authenticated-${group === null || group === void 0 ? void 0 : group.groupId}`;else if (conference) {\n      var _conference$conferenc;\n\n      if ((_conference$conferenc = conference.conferenceRoomParticipants.find(part => part.userUuid === user.id)) === null || _conference$conferenc === void 0 ? void 0 : _conference$conferenc.userModerator) number = `citrus-conference_${conference.id}_${conference.moderatorPin}`;else number = `citrus-conference_${conference.id}_${conference.participantPin}`;\n    }\n\n    if (number) {\n      setCallNumber({\n        number,\n        useAudio: true,\n        useVideo\n      });\n    }\n  };\n\n  function closeUserChat() {\n    setScreen(ScreenType.CHAT);\n  }\n\n  const isAdmin = ((_activeChat$members = activeChat.members) === null || _activeChat$members === void 0 ? void 0 : (_activeChat$members$f = _activeChat$members.find(member => member.userId === user.id)) === null || _activeChat$members$f === void 0 ? void 0 : _activeChat$members$f.role) === \"admin\";\n  const subtitleGroupMembers = activeChat.members;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalAddParticipant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"top-center\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    pauseOnHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 p-lg-4 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-block d-lg-none mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => closeUserChat(),\n    className: \"user-chat-remove text-muted font-size-16 p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-arrow-left-s-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }))), activeChat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: activeChat.profilePicture,\n    onError: () => {\n      if (activeChat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, activeChat);\n    },\n    style: {\n      maxHeight: \"40px\",\n      maxWidth: \"40px\"\n    },\n    fallbackImage: defaultAvatar,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, activeChat.name.trim().charAt(0)))), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-16 mb-2 text-truncate\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => ChatProfileSidebar(),\n    className: \"text-reset user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, activeChat.name, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-truncate\",\n    style: {\n      fontWeight: \"lighter\",\n      color: \"gray\",\n      fontSize: 12,\n      marginTop: 5,\n      marginLeft: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, subtitleGroupMembers === null || subtitleGroupMembers === void 0 ? void 0 : subtitleGroupMembers.map(gpmbr => {\n    return gpmbr.name.split(' ')[0] + '; ';\n  }))), (() => {\n    switch (activeChat.status) {\n      case \"online\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"ri-record-circle-fill font-size-10 text-success d-inline-block ml-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }\n        }));\n\n      case \"away\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"ri-record-circle-fill font-size-10 text-warning d-inline-block ml-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }\n        }));\n\n      case \"offline\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"ri-record-circle-fill font-size-10 text-secondary d-inline-block ml-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }\n        }));\n\n      default:\n        return;\n    }\n  })())))), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline user-chat-nav text-right mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, activeChat.jid.includes(\"@conference.\") && isAdmin && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => setShowModalAddMember(true),\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }))), activeChat.conferenceRoomParticipants && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CopyParticipantLinkButton, {\n    participantLink: activeConference === null || activeConference === void 0 ? void 0 : activeConference.anonymousParticipantUrl,\n    buttonIcon: \"ri-links-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CopyModeratorLinkButton, {\n    moderatorLink: activeConference === null || activeConference === void 0 ? void 0 : activeConference.anonymousModeratorUrl,\n    buttonIcon: \"ri-link-unlink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      setShowModalAddParticipant(true);\n    },\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      makeCall(false);\n    },\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-phone-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      makeCall(true);\n    },\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-vidicon-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-none d-lg-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => ChatProfileSidebar(),\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-menu-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default ChatHead;\n/*\r\n\r\n  <li className=\"list-inline-item\">\r\n    // SEARCH\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n    <DropdownToggle\r\n        color=\"none\"\r\n        className=\"btn nav-btn \"\r\n        type=\"button\"\r\n    >\r\n        <i className=\"ri-search-line\"></i>\r\n    </DropdownToggle>\r\n    \r\n    <DropdownMenu right className=\"p-0  dropdown-menu-md\">\r\n        <div className=\"search-box p-2\">\r\n        <Input\r\n            type=\"text\"\r\n            className=\"form-control bg-light border-0\"\r\n            placeholder=\"Search..\"\r\n        />\r\n        </div>\r\n    </DropdownMenu>\r\n    </Dropdown>\r\n  </li>\r\n\r\n  <li className=\"list-inline-item\">\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle\r\n        className=\"btn nav-btn \"\r\n        color=\"none\"\r\n        type=\"button\"\r\n      >\r\n        <i className=\"ri-more-fill\"></i>\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem\r\n          className=\"d-block d-lg-none user-profile-show\"\r\n          onClick={() => ChatProfileSidebar()}\r\n        >\r\n          View profile{\" \"}\r\n          <i className=\"ri-user-2-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem>\r\n          Archive{\" \"}\r\n          <i className=\"ri-archive-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem>\r\n          Muted{\" \"}\r\n          <i className=\"ri-volume-mute-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => deleteMessage(e)}>\r\n          Delete{\" \"}\r\n          <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  </li>\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatHead.tsx"],"names":["React","Media","Button","Row","Col","Link","useChat","ReactImageFallback","onImgError","useGroup","defaultAvatar","useContact","useModal","useAuth","useCall","useConference","ModalAddParticipant","ScreenType","useMainBox","ToastContainer","CopyParticipantLinkButton","CopyModeratorLinkButton","ChatHead","chatProfileSidebarOpen","setChatProfileSidebarOpen","user","chats","activeChat","setChats","groups","setGroups","contacts","setContacts","conferenceList","setShowModalAddMember","setShowModalAddParticipant","setCallNumber","setScreen","ChatProfileSidebar","activeConference","makeCall","useVideo","contact","find","item","jid","group","gr","conference","conf","number","groupId","conferenceRoomParticipants","part","userUuid","id","userModerator","moderatorPin","participantPin","useAudio","closeUserChat","CHAT","isAdmin","members","member","userId","role","subtitleGroupMembers","profilePicture","includes","maxHeight","maxWidth","name","trim","charAt","display","flexDirection","alignItems","fontWeight","color","fontSize","marginTop","marginLeft","map","gpmbr","split","status","anonymousParticipantUrl","anonymousModeratorUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Media, Button, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport ModalAddParticipant from \"./ModalAddParticipant\";\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CopyParticipantLinkButton from \"./CopyParticipantLinkButton\";\r\nimport CopyModeratorLinkButton from './CopyModeratorLinkButton';\r\n\r\ninterface IProps {\r\n  chatProfileSidebarOpen: boolean;\r\n  setChatProfileSidebarOpen(value: boolean): void;\r\n}\r\n\r\nconst ChatHead: React.FC<IProps> = ({\r\n  chatProfileSidebarOpen,\r\n  setChatProfileSidebarOpen,\r\n}) => {\r\n  const { user } = useAuth();\r\n  const { chats, activeChat, setChats } = useChat();\r\n  const { groups, setGroups } = useGroup();\r\n  const { contacts, setContacts } = useContact();\r\n  const { conferenceList } = useConference();\r\n  const { setShowModalAddMember, setShowModalAddParticipant } = useModal();\r\n  const { setCallNumber } = useCall();\r\n  const { setScreen } = useMainBox();\r\n  const ChatProfileSidebar = () => {\r\n    setChatProfileSidebarOpen(!chatProfileSidebarOpen);\r\n  };\r\n\r\n  const { activeConference } = useConference();\r\n\r\n  const makeCall = (useVideo: boolean) => {\r\n    let contact = contacts.find((item) => item.jid === activeChat.jid);\r\n    let group = groups.find((gr) => gr.jid === activeChat.jid);\r\n    let conference = conferenceList.find((conf) => conf.jid === activeChat.jid);\r\n    let number;\r\n    if (contact) number = contact?.number;\r\n    else if (group)\r\n      number = `citrus-conference-authenticated-${group?.groupId}`;\r\n    else if (conference) {\r\n      if (\r\n        conference.conferenceRoomParticipants.find(\r\n          (part) => part.userUuid === user.id\r\n        )?.userModerator\r\n      )\r\n        number = `citrus-conference_${conference.id}_${conference.moderatorPin}`;\r\n      else\r\n        number = `citrus-conference_${conference.id}_${conference.participantPin}`;\r\n    }\r\n    if (number) {\r\n      setCallNumber({\r\n        number,\r\n        useAudio: true,\r\n        useVideo,\r\n      });\r\n    }\r\n  };\r\n  function closeUserChat() {\r\n    setScreen(ScreenType.CHAT);\r\n  }\r\n  const isAdmin =\r\n    activeChat.members?.find((member) => member.userId === user.id)?.role ===\r\n    \"admin\";\r\n    \r\n  const subtitleGroupMembers = activeChat.members;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ModalAddParticipant />\r\n      <ToastContainer \r\n      position=\"top-center\"\r\n      \r\n      autoClose={2000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      pauseOnHover/>\r\n      <div className=\"p-3 p-lg-4 border-bottom\">\r\n        <Row className=\"align-items-center\">\r\n          <Col sm={4} xs={8}>\r\n            <Media className=\"align-items-center\">\r\n              <div className=\"d-block d-lg-none mr-2\">\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={() => closeUserChat()}\r\n                  className=\"user-chat-remove text-muted font-size-16 p-2\"\r\n                >\r\n                  <i className=\"ri-arrow-left-s-line\"></i>\r\n                </Link>\r\n              </div>\r\n              {activeChat.profilePicture ? (\r\n                <div className=\"mr-3\">\r\n                  <ReactImageFallback\r\n                    src={activeChat.profilePicture}\r\n                    onError={() => {\r\n                      if (activeChat.jid.includes(\"@conference.\"))\r\n                        onImgError(\r\n                          chats,\r\n                          groups,\r\n                          contacts,\r\n                          setChats,\r\n                          setGroups,\r\n                          setContacts,\r\n                          activeChat\r\n                        );\r\n                    }}\r\n                    style={{ maxHeight: \"40px\", maxWidth: \"40px\" }}\r\n                    fallbackImage={defaultAvatar}\r\n                    className=\"rounded-circle avatar-lg img-thumbnail\"\r\n                    alt=\"chatvia\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"chat-user-img align-self-center mr-3\">\r\n                  <div className=\"avatar-xs\">\r\n                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                      {activeChat.name.trim().charAt(0)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <Media body className=\"overflow-hidden\">\r\n                <h5 className=\"font-size-16 mb-2 text-truncate\" style={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n                  <Link\r\n                    to=\"#\"\r\n                    onClick={() => ChatProfileSidebar()}\r\n                    className=\"text-reset user-profile-show\"\r\n                  >\r\n                    {activeChat.name}\r\n                    <div className={\"text-truncate\"} \r\n                    style={{\r\n                      fontWeight: \"lighter\",\r\n                      color: \"gray\",\r\n                      fontSize: 12,\r\n                      marginTop: 5,\r\n                      marginLeft: 1,\r\n                    }}>\r\n                      {subtitleGroupMembers?.map((gpmbr) => {\r\n                        return(\r\n                          gpmbr.name.split(' ')[0] + '; '\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </Link>\r\n                  {(() => {\r\n                    switch (activeChat.status) {\r\n                      case \"online\":\r\n                        return (\r\n                          <>\r\n                            <i className=\"ri-record-circle-fill font-size-10 text-success d-inline-block ml-1\"></i>\r\n                          </>\r\n                        );\r\n\r\n                      case \"away\":\r\n                        return (\r\n                          <>\r\n                            <i className=\"ri-record-circle-fill font-size-10 text-warning d-inline-block ml-1\"></i>\r\n                          </>\r\n                        );\r\n\r\n                      case \"offline\":\r\n                        return (\r\n                          <>\r\n                            <i className=\"ri-record-circle-fill font-size-10 text-secondary d-inline-block ml-1\"></i>\r\n                          </>\r\n                        );\r\n\r\n                      default:\r\n                        return;\r\n                    }\r\n                  })()}\r\n                </h5>\r\n              </Media>\r\n            </Media>\r\n          </Col>\r\n          <Col sm={8} xs={4}>\r\n            <ul className=\"list-inline user-chat-nav text-right mb-0\">\r\n              {activeChat.jid.includes(\"@conference.\") && isAdmin && (\r\n                <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"none\"\r\n                    onClick={() => setShowModalAddMember(true)}\r\n                    className=\"nav-btn user-profile-show\"\r\n                  >\r\n                    <i className=\"ri-user-add-line\"></i>\r\n                  </Button>\r\n                </li>\r\n              )}\r\n              {activeChat.conferenceRoomParticipants && (\r\n                <>\r\n                  <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                    <CopyParticipantLinkButton participantLink={activeConference?.anonymousParticipantUrl as string} buttonIcon={\"ri-links-line\"} />\r\n                  </li>\r\n                  <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                    <CopyModeratorLinkButton moderatorLink={activeConference?.anonymousModeratorUrl as string} buttonIcon={\"ri-link-unlink\"} />\r\n                  </li>\r\n                  <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      color=\"none\"\r\n                      onClick={() => {\r\n                        setShowModalAddParticipant(true);\r\n                      }}\r\n                      className=\"nav-btn user-profile-show\"\r\n                    >\r\n                      <i className=\"ri-user-add-line\"></i>\r\n                    </Button>\r\n                  </li>\r\n                </>\r\n              )}\r\n              <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                <Button\r\n                  type=\"button\"\r\n                  color=\"none\"\r\n                  onClick={() => {\r\n                    makeCall(false);\r\n                  }}\r\n                  className=\"nav-btn user-profile-show\"\r\n                >\r\n                  <i className=\"ri-phone-line\"></i>\r\n                </Button>\r\n              </li>\r\n              <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                <Button\r\n                  type=\"button\"\r\n                  color=\"none\"\r\n                  onClick={() => {\r\n                    makeCall(true);\r\n                  }}\r\n                  className=\"nav-btn user-profile-show\"\r\n                >\r\n                  <i className=\"ri-vidicon-line\"></i>\r\n                </Button>\r\n              </li>\r\n              <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                <Button\r\n                  type=\"button\"\r\n                  color=\"none\"\r\n                  onClick={() => ChatProfileSidebar()}\r\n                  className=\"nav-btn user-profile-show\"\r\n                >\r\n                  <i className=\"ri-menu-line\"></i>\r\n                </Button>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatHead;\r\n\r\n/*\r\n\r\n  <li className=\"list-inline-item\">\r\n    // SEARCH\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n    <DropdownToggle\r\n        color=\"none\"\r\n        className=\"btn nav-btn \"\r\n        type=\"button\"\r\n    >\r\n        <i className=\"ri-search-line\"></i>\r\n    </DropdownToggle>\r\n    \r\n    <DropdownMenu right className=\"p-0  dropdown-menu-md\">\r\n        <div className=\"search-box p-2\">\r\n        <Input\r\n            type=\"text\"\r\n            className=\"form-control bg-light border-0\"\r\n            placeholder=\"Search..\"\r\n        />\r\n        </div>\r\n    </DropdownMenu>\r\n    </Dropdown>\r\n  </li>\r\n\r\n  <li className=\"list-inline-item\">\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle\r\n        className=\"btn nav-btn \"\r\n        color=\"none\"\r\n        type=\"button\"\r\n      >\r\n        <i className=\"ri-more-fill\"></i>\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem\r\n          className=\"d-block d-lg-none user-profile-show\"\r\n          onClick={() => ChatProfileSidebar()}\r\n        >\r\n          View profile{\" \"}\r\n          <i className=\"ri-user-2-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem>\r\n          Archive{\" \"}\r\n          <i className=\"ri-archive-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem>\r\n          Muted{\" \"}\r\n          <i className=\"ri-volume-mute-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n        <DropdownItem onClick={(e) => deleteMessage(e)}>\r\n          Delete{\" \"}\r\n          <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  </li>\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}