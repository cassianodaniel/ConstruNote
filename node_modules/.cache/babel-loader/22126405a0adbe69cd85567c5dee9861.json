{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { SquadCommunicator as SquadService } from \"./SquadCommunicatorService\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { Events as VoiceEvents } from \"./voice/types\";\nimport { useCall } from \"../contexts/CallContext\";\nimport CallStatus from \"../enuns/CallStatus\"; //import { callbackify } from \"util\";\n// import IContact from \"../alias/IContact\";\n// Comentado para Evitar Warnings no console\n// interface CreateGroupCallback {\n//   (groupCreated: boolean): void;\n// }\n\nlet squadService;\n\nconst SquadSipCommunicator = () => {\n  const {\n    contacts\n  } = useContact();\n  const {\n    currentCalls,\n    setCurrentCalls,\n    callNumber,\n    setCallNumber,\n    updateConstraints,\n    setUpdateConstraints\n  } = useCall();\n  const {\n    groups\n  } = useGroup();\n\n  const init = () => {\n    squadService = SquadService.getInstance({\n      voiceCB: voiceCommuncatorSubscribe\n    });\n  };\n\n  const setNewCall = call => {\n    const cc = new Map(currentCalls);\n    cc.set(call.callId, call);\n    setCurrentCalls(cc);\n  };\n\n  const removeCall = call => {\n    if (call.interval) clearTimeout(call.interval);\n    const cc = new Map(currentCalls);\n    cc.delete(call.callId);\n    setCurrentCalls(cc);\n  };\n\n  const onMakeCall = () => {\n    if (callNumber === null || callNumber === void 0 ? void 0 : callNumber.number) {\n      var _squadService, _squadService$sip;\n\n      const constraints = {\n        useAudio: callNumber === null || callNumber === void 0 ? void 0 : callNumber.useAudio,\n        useVideo: callNumber === null || callNumber === void 0 ? void 0 : callNumber.useVideo\n      };\n      (_squadService = squadService) === null || _squadService === void 0 ? void 0 : (_squadService$sip = _squadService.sip) === null || _squadService$sip === void 0 ? void 0 : _squadService$sip.makeCall(callNumber === null || callNumber === void 0 ? void 0 : callNumber.number, constraints);\n      setCallNumber(undefined);\n    }\n  };\n\n  const onUpdateConstraints = () => {\n    if (updateConstraints) {\n      var _squadService2;\n\n      (_squadService2 = squadService) === null || _squadService2 === void 0 ? void 0 : _squadService2.sip.updateConstraintsParams(updateConstraints);\n      setUpdateConstraints(undefined);\n    }\n  };\n\n  function voiceCommuncatorSubscribe(event, data) {\n    var _invitation$remoteIde, _invitation$remoteIde2, _ref, _ref2, _ref3, _inviter$sessionDescr, _inviter$remoteIdenti, _inviter$remoteIdenti2, _ref4, _ref5, _ref6, _data$invitation, _data$inviter;\n\n    let endCall;\n\n    switch (event) {\n      case VoiceEvents.CONNECTED:\n        // squadService?.sip.sip.invite(\"2045\");\n        console.log(\"connected\");\n        break;\n\n      case VoiceEvents.RECEIVED_CALL:\n        const invitation = data;\n        const invitation_caller_id_number = (_invitation$remoteIde = invitation.remoteIdentity.uri.aor) === null || _invitation$remoteIde === void 0 ? void 0 : (_invitation$remoteIde2 = _invitation$remoteIde.split(\"@\")[0]) === null || _invitation$remoteIde2 === void 0 ? void 0 : _invitation$remoteIde2.replace(\"sip:\", \"\").replace(\"citrus-conference-authenticated-\", \"\");\n        const invitation_ctct_of_number = contacts.find(ctc => ctc.number === invitation_caller_id_number) || groups.find(grp => grp.groupId === inviter_caller_id_number);\n        let receivedCall;\n\n        const acceptCall = (useVideo = false) => {\n          var _squadService3, _squadService4;\n\n          (_squadService3 = squadService) === null || _squadService3 === void 0 ? void 0 : _squadService3.sip.updateConstraintsParams({\n            useVideo\n          });\n          invitation.accept({\n            sessionDescriptionHandlerOptions: {\n              constraints: (_squadService4 = squadService) === null || _squadService4 === void 0 ? void 0 : _squadService4.sip.getConstraints()\n            }\n          });\n\n          if (receivedCall) {\n            setNewCall({ ...receivedCall,\n              callStatus: CallStatus.CONNECTING,\n              sendingVideo: useVideo\n            });\n          }\n        };\n\n        endCall = () => {\n          var _squadService5;\n\n          (_squadService5 = squadService) === null || _squadService5 === void 0 ? void 0 : _squadService5.sip.sip.endCall(invitation);\n        };\n\n        receivedCall = {\n          callId: invitation.id,\n          callStatus: CallStatus.RINGING,\n          callerNumber: invitation_caller_id_number,\n          callerObject: invitation_ctct_of_number,\n          callerId: ((_ref = invitation_ctct_of_number) === null || _ref === void 0 ? void 0 : _ref.id) || ((_ref2 = invitation_ctct_of_number) === null || _ref2 === void 0 ? void 0 : _ref2.groupId),\n          callerName: invitation_ctct_of_number === null || invitation_ctct_of_number === void 0 ? void 0 : invitation_ctct_of_number.name,\n          callerProfilePicture: invitation_ctct_of_number === null || invitation_ctct_of_number === void 0 ? void 0 : invitation_ctct_of_number.profilePicture,\n          session: invitation,\n          isGroup: !!((_ref3 = invitation_ctct_of_number) === null || _ref3 === void 0 ? void 0 : _ref3.groupId),\n          accept: acceptCall,\n          endCall,\n          micMuted: false,\n          videoMuted: false,\n          muteMic: () => {\n            var _squadService6;\n\n            return (_squadService6 = squadService) === null || _squadService6 === void 0 ? void 0 : _squadService6.sip.muteMic(invitation.id);\n          },\n          unMuteMic: () => {\n            var _squadService7;\n\n            return (_squadService7 = squadService) === null || _squadService7 === void 0 ? void 0 : _squadService7.sip.unMuteMic(invitation.id);\n          },\n          disableCam: () => {\n            var _squadService8;\n\n            return (_squadService8 = squadService) === null || _squadService8 === void 0 ? void 0 : _squadService8.sip.disableCam(invitation.id);\n          },\n          enableCam: () => {\n            var _squadService9;\n\n            return (_squadService9 = squadService) === null || _squadService9 === void 0 ? void 0 : _squadService9.sip.enableCam(invitation.id);\n          }\n        };\n        setNewCall(receivedCall);\n        break;\n\n      case VoiceEvents.MAKE_CALL:\n        const inviter = data;\n        const localConstraints = inviter === null || inviter === void 0 ? void 0 : (_inviter$sessionDescr = inviter.sessionDescriptionHandlerOptions) === null || _inviter$sessionDescr === void 0 ? void 0 : _inviter$sessionDescr.constraints;\n        const inviter_caller_id_number = (_inviter$remoteIdenti = inviter.remoteIdentity.uri.aor) === null || _inviter$remoteIdenti === void 0 ? void 0 : (_inviter$remoteIdenti2 = _inviter$remoteIdenti.split(\"@\")[0]) === null || _inviter$remoteIdenti2 === void 0 ? void 0 : _inviter$remoteIdenti2.replace(\"sip:\", \"\").replace(\"citrus-conference-authenticated-\", \"\");\n        const inviter_ctct_of_number = contacts.find(ctc => ctc.number === inviter_caller_id_number) || groups.find(grp => grp.groupId === inviter_caller_id_number);\n\n        endCall = () => {\n          var _squadService10;\n\n          (_squadService10 = squadService) === null || _squadService10 === void 0 ? void 0 : _squadService10.sip.sip.endCall(inviter);\n        };\n\n        const sendCall = {\n          callId: inviter.id,\n          callStatus: CallStatus.CALLING,\n          callerNumber: inviter_caller_id_number,\n          callerObject: inviter_ctct_of_number,\n          callerId: ((_ref4 = inviter_ctct_of_number) === null || _ref4 === void 0 ? void 0 : _ref4.id) || ((_ref5 = inviter_ctct_of_number) === null || _ref5 === void 0 ? void 0 : _ref5.groupId),\n          callerName: inviter_ctct_of_number === null || inviter_ctct_of_number === void 0 ? void 0 : inviter_ctct_of_number.name,\n          callerProfilePicture: inviter_ctct_of_number === null || inviter_ctct_of_number === void 0 ? void 0 : inviter_ctct_of_number.profilePicture,\n          session: inviter,\n          isGroup: !!((_ref6 = inviter_ctct_of_number) === null || _ref6 === void 0 ? void 0 : _ref6.groupId),\n          sendingVideo: (localConstraints === null || localConstraints === void 0 ? void 0 : localConstraints.video) !== false,\n          endCall,\n          muteMic: () => {\n            var _squadService11;\n\n            return (_squadService11 = squadService) === null || _squadService11 === void 0 ? void 0 : _squadService11.sip.muteMic(inviter.id);\n          },\n          unMuteMic: () => {\n            var _squadService12;\n\n            return (_squadService12 = squadService) === null || _squadService12 === void 0 ? void 0 : _squadService12.sip.unMuteMic(inviter.id);\n          },\n          disableCam: () => {\n            var _squadService13;\n\n            return (_squadService13 = squadService) === null || _squadService13 === void 0 ? void 0 : _squadService13.sip.disableCam(inviter.id);\n          },\n          enableCam: () => {\n            var _squadService14;\n\n            return (_squadService14 = squadService) === null || _squadService14 === void 0 ? void 0 : _squadService14.sip.enableCam(inviter.id);\n          }\n        };\n        setNewCall(sendCall);\n        console.log(\"make_call\");\n        break;\n\n      case VoiceEvents.CALL_ON_GOING:\n        const callOnGoing = currentCalls.get(data === null || data === void 0 ? void 0 : (_data$invitation = data.invitation) === null || _data$invitation === void 0 ? void 0 : _data$invitation.id) || currentCalls.get(data === null || data === void 0 ? void 0 : (_data$inviter = data.inviter) === null || _data$inviter === void 0 ? void 0 : _data$inviter.id);\n\n        if (callOnGoing) {\n          const cc = { ...callOnGoing\n          };\n          cc.callStatus = CallStatus.ON_GOING;\n          cc.receivingVideo = data.receivingVideo;\n          cc.tagId = data.tagId;\n          setNewCall(cc);\n        }\n\n        break;\n\n      case VoiceEvents.CALL_HANGUP:\n        const hangupCall = currentCalls.get(data.id);\n\n        if (hangupCall) {\n          removeCall(hangupCall);\n        }\n\n        break;\n\n      default:\n        console.log(event);\n        break;\n    }\n  }\n\n  const updateFunction = () => {\n    var _squadService15;\n\n    (_squadService15 = squadService) === null || _squadService15 === void 0 ? void 0 : _squadService15.updateVoiceSubscribeFunction(voiceCommuncatorSubscribe);\n  };\n\n  useEffect(init, []);\n  useEffect(updateFunction, [contacts, groups, currentCalls, callNumber]);\n  useEffect(onMakeCall, [callNumber]);\n  useEffect(onUpdateConstraints, [updateConstraints]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default SquadSipCommunicator;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadSipCommunicator.tsx"],"names":["React","useEffect","SquadCommunicator","SquadService","useGroup","useContact","Events","VoiceEvents","useCall","CallStatus","squadService","SquadSipCommunicator","contacts","currentCalls","setCurrentCalls","callNumber","setCallNumber","updateConstraints","setUpdateConstraints","groups","init","getInstance","voiceCB","voiceCommuncatorSubscribe","setNewCall","call","cc","Map","set","callId","removeCall","interval","clearTimeout","delete","onMakeCall","number","constraints","useAudio","useVideo","sip","makeCall","undefined","onUpdateConstraints","updateConstraintsParams","event","data","endCall","CONNECTED","console","log","RECEIVED_CALL","invitation","invitation_caller_id_number","remoteIdentity","uri","aor","split","replace","invitation_ctct_of_number","find","ctc","grp","groupId","inviter_caller_id_number","receivedCall","acceptCall","accept","sessionDescriptionHandlerOptions","getConstraints","callStatus","CONNECTING","sendingVideo","id","RINGING","callerNumber","callerObject","callerId","callerName","name","callerProfilePicture","profilePicture","session","isGroup","micMuted","videoMuted","muteMic","unMuteMic","disableCam","enableCam","MAKE_CALL","inviter","localConstraints","inviter_ctct_of_number","sendCall","CALLING","video","CALL_ON_GOING","callOnGoing","get","ON_GOING","receivingVideo","tagId","CALL_HANGUP","hangupCall","updateFunction","updateVoiceSubscribeFunction"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { SquadCommunicator as SquadService } from \"./SquadCommunicatorService\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport IContact from \"../alias/IContact\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport { Events as VoiceEvents } from \"./voice/types\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport ICall from \"../alias/ICall\";\r\nimport { Invitation, Inviter } from \"sip.js\";\r\nimport CallStatus from \"../enuns/CallStatus\";\r\n//import { callbackify } from \"util\";\r\n\r\n// import IContact from \"../alias/IContact\";\r\n// Comentado para Evitar Warnings no console\r\n// interface CreateGroupCallback {\r\n//   (groupCreated: boolean): void;\r\n// }\r\n\r\nlet squadService: SquadService | undefined;\r\n\r\nconst SquadSipCommunicator: React.FC = () => {\r\n  const { contacts } = useContact();\r\n  const {\r\n    currentCalls,\r\n    setCurrentCalls,\r\n    callNumber,\r\n    setCallNumber,\r\n    updateConstraints,\r\n    setUpdateConstraints,\r\n  } = useCall();\r\n  const { groups } = useGroup();\r\n\r\n  const init = () => {\r\n    squadService = SquadService.getInstance({\r\n      voiceCB: voiceCommuncatorSubscribe,\r\n    });\r\n  };\r\n  const setNewCall = (call: ICall) => {\r\n    const cc = new Map<string, ICall>(currentCalls);\r\n    cc.set(call.callId, call);\r\n    setCurrentCalls(cc);\r\n  };\r\n  const removeCall = (call: ICall) => {\r\n    if (call.interval) clearTimeout(call.interval);\r\n    const cc = new Map<string, ICall>(currentCalls);\r\n    cc.delete(call.callId);\r\n    setCurrentCalls(cc);\r\n  };\r\n  const onMakeCall = () => {\r\n    if (callNumber?.number) {\r\n      const constraints = {\r\n        useAudio: callNumber?.useAudio,\r\n        useVideo: callNumber?.useVideo,\r\n      };\r\n      squadService?.sip?.makeCall(callNumber?.number, constraints);\r\n      setCallNumber(undefined);\r\n    }\r\n  };\r\n  const onUpdateConstraints = () => {\r\n    if (updateConstraints) {\r\n      squadService?.sip.updateConstraintsParams(updateConstraints);\r\n      setUpdateConstraints(undefined);\r\n    }\r\n  };\r\n  function voiceCommuncatorSubscribe(event: VoiceEvents, data: any) {\r\n    let endCall;\r\n    switch (event) {\r\n      case VoiceEvents.CONNECTED:\r\n        // squadService?.sip.sip.invite(\"2045\");\r\n        console.log(\"connected\");\r\n        break;\r\n      case VoiceEvents.RECEIVED_CALL:\r\n        const invitation = data as Invitation;\r\n        const invitation_caller_id_number = invitation.remoteIdentity.uri.aor\r\n          ?.split(\"@\")[0]\r\n          ?.replace(\"sip:\", \"\")\r\n          .replace(\"citrus-conference-authenticated-\", \"\");\r\n        const invitation_ctct_of_number =\r\n          contacts.find((ctc) => ctc.number === invitation_caller_id_number) ||\r\n          groups.find((grp) => grp.groupId === inviter_caller_id_number);\r\n        let receivedCall: ICall;\r\n        const acceptCall = (useVideo: boolean = false) => {\r\n          squadService?.sip.updateConstraintsParams({ useVideo });\r\n          invitation.accept({\r\n            sessionDescriptionHandlerOptions: {\r\n              constraints: squadService?.sip.getConstraints(),\r\n            },\r\n          });\r\n          if (receivedCall) {\r\n            setNewCall({\r\n              ...receivedCall,\r\n              callStatus: CallStatus.CONNECTING,\r\n              sendingVideo: useVideo,\r\n            });\r\n          }\r\n        };\r\n        endCall = () => {\r\n          squadService?.sip.sip.endCall(invitation);\r\n        };\r\n        receivedCall = {\r\n          callId: invitation.id,\r\n          callStatus: CallStatus.RINGING,\r\n          callerNumber: invitation_caller_id_number,\r\n          callerObject: invitation_ctct_of_number,\r\n          callerId:\r\n            (invitation_ctct_of_number as IContact)?.id ||\r\n            (invitation_ctct_of_number as IGroup)?.groupId,\r\n          callerName: invitation_ctct_of_number?.name,\r\n          callerProfilePicture: invitation_ctct_of_number?.profilePicture,\r\n          session: invitation,\r\n          isGroup: !!(invitation_ctct_of_number as IGroup)?.groupId,\r\n          accept: acceptCall,\r\n          endCall,\r\n          micMuted: false,\r\n          videoMuted: false,\r\n          muteMic: () => squadService?.sip.muteMic(invitation.id),\r\n          unMuteMic: () => squadService?.sip.unMuteMic(invitation.id),\r\n          disableCam: () => squadService?.sip.disableCam(invitation.id),\r\n          enableCam: () => squadService?.sip.enableCam(invitation.id),\r\n        };\r\n        setNewCall(receivedCall);\r\n        break;\r\n      case VoiceEvents.MAKE_CALL:\r\n        const inviter = data as Inviter;\r\n        const localConstraints = inviter?.sessionDescriptionHandlerOptions\r\n          ?.constraints as MediaStreamConstraints;\r\n        const inviter_caller_id_number = inviter.remoteIdentity.uri.aor\r\n          ?.split(\"@\")[0]\r\n          ?.replace(\"sip:\", \"\")\r\n          .replace(\"citrus-conference-authenticated-\", \"\");\r\n        const inviter_ctct_of_number =\r\n          contacts.find((ctc) => ctc.number === inviter_caller_id_number) ||\r\n          groups.find((grp) => grp.groupId === inviter_caller_id_number);\r\n\r\n        endCall = () => {\r\n          squadService?.sip.sip.endCall(inviter);\r\n        };\r\n        const sendCall: ICall = {\r\n          callId: inviter.id,\r\n          callStatus: CallStatus.CALLING,\r\n          callerNumber: inviter_caller_id_number,\r\n          callerObject: inviter_ctct_of_number,\r\n          callerId:\r\n            (inviter_ctct_of_number as IContact)?.id ||\r\n            (inviter_ctct_of_number as IGroup)?.groupId,\r\n          callerName: inviter_ctct_of_number?.name,\r\n          callerProfilePicture: inviter_ctct_of_number?.profilePicture,\r\n          session: inviter,\r\n          isGroup: !!(inviter_ctct_of_number as IGroup)?.groupId,\r\n          sendingVideo: localConstraints?.video !== false,\r\n          endCall,\r\n          muteMic: () => squadService?.sip.muteMic(inviter.id),\r\n          unMuteMic: () => squadService?.sip.unMuteMic(inviter.id),\r\n          disableCam: () => squadService?.sip.disableCam(inviter.id),\r\n          enableCam: () => squadService?.sip.enableCam(inviter.id),\r\n        };\r\n        setNewCall(sendCall);\r\n        console.log(\"make_call\");\r\n        break;\r\n      case VoiceEvents.CALL_ON_GOING:\r\n        const callOnGoing =\r\n          currentCalls.get(data?.invitation?.id) ||\r\n          currentCalls.get(data?.inviter?.id);\r\n        if (callOnGoing) {\r\n          const cc = { ...callOnGoing };\r\n          cc.callStatus = CallStatus.ON_GOING;\r\n          cc.receivingVideo = data.receivingVideo;\r\n          cc.tagId = data.tagId;\r\n          setNewCall(cc);\r\n        }\r\n        break;\r\n      case VoiceEvents.CALL_HANGUP:\r\n        const hangupCall = currentCalls.get(data.id);\r\n        if (hangupCall) {\r\n          removeCall(hangupCall);\r\n        }\r\n        break;\r\n      default:\r\n        console.log(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const updateFunction = () => {\r\n    squadService?.updateVoiceSubscribeFunction(voiceCommuncatorSubscribe);\r\n  };\r\n\r\n  useEffect(init, []);\r\n  useEffect(updateFunction, [contacts, groups, currentCalls, callNumber]);\r\n  useEffect(onMakeCall, [callNumber]);\r\n  useEffect(onUpdateConstraints, [updateConstraints]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default SquadSipCommunicator;\r\n"]},"metadata":{},"sourceType":"module"}