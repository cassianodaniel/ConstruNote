{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalEditConference.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport EmailList from \"./EmailList\";\nimport { zeroLeft } from \"./../helpers/zeroLeft\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport { DateTime } from \"luxon\";\nimport { toastSuccess } from \"../helpers/toastCaller\";\n\nconst today = () => {\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1; //January is 0!\n\n  var yyyy = today.getFullYear();\n  var hh = zeroLeft(today.getHours(), 2);\n  var min = zeroLeft(today.getMinutes(), 2);\n  return {\n    date: `${yyyy}-${mm}-${dd}`,\n    time: `${hh}:${min}`\n  };\n};\n\nexport const ModalEditConference = ({\n  show,\n  toggle\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    activeChat\n  } = useChat();\n  const {\n    setConferenceToUpdate,\n    conferenceList\n  } = useConference(); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  const [conference, setConference] = useState();\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startDate, setStartDate] = useState(today().date);\n  const [startTime, setStartTime] = useState(today().time);\n  const [duration, setDuration] = useState(\"01:00\");\n  const [mdCheck, setMdCheck] = useState(false);\n  const [emailList, setEmailList] = useState([]);\n  const [parsedDate, setParsedDate] = useState(new Date().toISOString());\n  const [flagWrongStartTime, setFlagWrongStartTime] = useState(false);\n\n  var DatePicker = require(\"reactstrap-date-picker\");\n\n  const refreshTime = () => {\n    setTime(today().time);\n  };\n\n  useEffect(refreshTime, [show]);\n\n  const handleEditConference = () => {\n    const conferenceData = conferenceList.find(conference => conference.jid === activeChat.jid);\n\n    if (conferenceData) {\n      conferenceData.name = name;\n      conferenceData.waitMod = mdCheck;\n      conferenceData.startDatetime = startDate + \" \" + startTime + \":00\";\n      conferenceData.stopDatetime = startDate + \" \" + String(parseInt(startTime.split(\":\")[0]) + parseInt(duration) + \":\" + startTime.split(\":\")[1] + \":00\");\n      setConferenceToUpdate(conferenceData);\n    }\n\n    setMessage(t(\"Editing conference..\"));\n    setIsOpenAlert(true);\n    setTimeout(() => {\n      setIsOpenAlert(false);\n      setMessage(\"\");\n      setName(\"\");\n      setDescription(\"\");\n      setStartDate(today().date);\n      setStartTime(today().time);\n      setDuration(\"01:00\");\n      setMdCheck(false);\n      setEmailList([]);\n      toastSuccess(t(\"Success!\"));\n    }, 2000);\n  };\n\n  const updatedTime = () => {\n    setTime(startTime);\n  };\n\n  useEffect(updatedTime, [startDate]);\n\n  const setTime = value => {\n    /*  toastError(t('The time has to be longer than the current one!')); */\n    let time = value.split(\":\");\n    let currentTime = today().time.split(\":\");\n\n    if (startDate === today().date) {\n      if (parseInt(time[0]) < parseInt(currentTime[0])) {\n        setFlagWrongStartTime(true);\n        return;\n      } else {\n        setFlagWrongStartTime(false);\n        setStartTime(value);\n      }\n\n      if (parseInt(time[0]) === parseInt(currentTime[0]) && parseInt(time[1]) < parseInt(currentTime[1])) {\n        setFlagWrongStartTime(true);\n        return;\n      } else {\n        setFlagWrongStartTime(false);\n        setStartTime(value);\n      }\n    }\n\n    ;\n  };\n\n  const inputName = useRef(null);\n\n  const handleCalendarChange = e => {\n    if (e) {\n      let year = e.split('-')[0];\n      let month = e.split('-')[1];\n      let day = e.split('-')[2].slice(0, 2);\n      setParsedDate(year + '-' + month + '-' + day + 'T12:00:00.000Z');\n      setStartDate(year + '-' + month + '-' + day);\n      console.log('parsedDate', parsedDate);\n      console.log('startDate', startDate);\n    }\n  };\n\n  function init() {\n    const conferenceData = conferenceList.find(conference => conference.jid === activeChat.jid);\n\n    if (conferenceData) {\n      setConference(conferenceData);\n      setName(conferenceData.name);\n      setDescription(conferenceData.description ? conferenceData.description : \"\");\n      const startDateData = DateTime.fromString(conferenceData.startDatetimeStr, \"yyyy-MM-dd hh:mm:ss\");\n      const stopDateData = DateTime.fromString(conferenceData.stopDatetimeStr, \"yyyy-MM-dd hh:mm:ss\");\n      setStartDate(startDateData.toFormat(\"yyyy-MM-dd\"));\n      setStartTime(startDateData.toFormat(\"HH:mm:ss\")); //conferenceData.startDatetime\n      //conferenceData.stopDatetime\n\n      const ms = stopDateData.toMillis() - startDateData.toMillis();\n      const seconds = Math.floor(ms / 1000 % 60);\n      const minutes = Math.floor(ms / (1000 * 60) % 60);\n      const hours = Math.floor(ms / (1000 * 60 * 60) % 24);\n      setDuration(`${zeroLeft(hours, 2)}:${zeroLeft(minutes, 2)}:${zeroLeft(seconds, 2)}`);\n    }\n\n    setTimeout(() => {\n      var _inputName$current;\n\n      return (_inputName$current = inputName.current) === null || _inputName$current === void 0 ? void 0 : _inputName$current.focus();\n    }, 500);\n  }\n\n  useEffect(init, [show]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: show,\n    size: \"md\",\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    tag: \"h5\",\n    className: \"modal-title font-size-16\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, t(\"Edit conference\")), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, t(\"Room name\")), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputName,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name-input\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: t(\"Room name\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, t(\"Room description\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description-input\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: t(\"Room description\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"date-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, t(\"Starting date\")), /*#__PURE__*/React.createElement(DatePicker, {\n    id: \"example-datepicker\",\n    onChange: e => handleCalendarChange(e),\n    minDate: new Date().toISOString(),\n    value: parsedDate,\n    showClearButton: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"time-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, t(\"Starting time\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    className: \"form-control\",\n    id: \"time-start-input\",\n    value: startTime,\n    onChange: e => setTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }), flagWrongStartTime === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, t(\"Invalid time\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"duration-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, t(\"Duration\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    className: \"form-control\",\n    id: \"date-end-input\",\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => {\n      setMdCheck(e.target.checked);\n    },\n    id: \"mdCheck\",\n    value: mdCheck ? 1 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label\",\n    htmlFor: \"mdCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, t(\"Wait for call administrator to start\"))))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, t(\"External participants\")), /*#__PURE__*/React.createElement(EmailList, {\n    emailList: emailList,\n    setEmailList: setEmailList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Alert, {\n    isOpen: isOpenAlert,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, message)), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"link\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: handleEditConference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, t(\"Save\"))));\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalEditConference.tsx"],"names":["React","useState","useEffect","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","Alert","useTranslation","EmailList","zeroLeft","useConference","useChat","DateTime","toastSuccess","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","min","getMinutes","date","time","ModalEditConference","show","toggle","t","activeChat","setConferenceToUpdate","conferenceList","conference","setConference","isOpenAlert","setIsOpenAlert","message","setMessage","name","setName","description","setDescription","startDate","setStartDate","startTime","setStartTime","duration","setDuration","mdCheck","setMdCheck","emailList","setEmailList","parsedDate","setParsedDate","toISOString","flagWrongStartTime","setFlagWrongStartTime","DatePicker","require","refreshTime","setTime","handleEditConference","conferenceData","find","jid","waitMod","startDatetime","stopDatetime","String","parseInt","split","setTimeout","updatedTime","value","currentTime","inputName","handleCalendarChange","e","year","month","day","slice","console","log","init","startDateData","fromString","startDatetimeStr","stopDateData","stopDatetimeStr","toFormat","ms","toMillis","seconds","Math","floor","minutes","hours","current","focus","target","color","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport EmailList from \"./EmailList\";\r\nimport IEmailList from \"../alias/IEmailList\";\r\nimport { zeroLeft } from \"./../helpers/zeroLeft\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { IConference } from \"../alias/IConference\";\r\nimport { DateTime } from \"luxon\";\r\nimport { toastSuccess } from \"../helpers/toastCaller\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nconst today = () => {\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  var hh = zeroLeft(today.getHours(), 2);\r\n  var min = zeroLeft(today.getMinutes(), 2);\r\n\r\n  return {\r\n    date: `${yyyy}-${mm}-${dd}`,\r\n    time: `${hh}:${min}`,\r\n  };\r\n};\r\n\r\nexport const ModalEditConference: React.FC<IProps> = ({ show, toggle }) => {\r\n  const { t } = useTranslation();\r\n  const { activeChat } = useChat();\r\n  const { setConferenceToUpdate, conferenceList } = useConference();\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [conference, setConference] = useState<IConference>();\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [startDate, setStartDate] = useState<string>(today().date);\r\n  const [startTime, setStartTime] = useState<string>(today().time);\r\n  const [duration, setDuration] = useState<string>(\"01:00\");\r\n  const [mdCheck, setMdCheck] = useState<boolean>(false);\r\n  const [emailList, setEmailList] = useState<IEmailList[]>([]);\r\n  const [parsedDate, setParsedDate] = useState(new Date().toISOString());\r\n  const [flagWrongStartTime, setFlagWrongStartTime] = useState<boolean>(false);\r\n  var DatePicker = require(\"reactstrap-date-picker\");\r\n\r\n  const refreshTime = () => {\r\n    setTime(today().time);\r\n  }\r\n\r\n  useEffect(refreshTime, [show]);\r\n\r\n  const handleEditConference = () => {\r\n    const conferenceData = conferenceList.find(\r\n      (conference) => conference.jid === activeChat.jid\r\n    );\r\n\r\n    if (conferenceData) {\r\n      conferenceData.name = name;\r\n      conferenceData.waitMod = mdCheck;\r\n      conferenceData.startDatetime = startDate + \" \" + startTime + \":00\";\r\n      conferenceData.stopDatetime =\r\n        startDate +\r\n        \" \" +\r\n        String(\r\n          parseInt(startTime.split(\":\")[0]) +\r\n            parseInt(duration) +\r\n            \":\" +\r\n            startTime.split(\":\")[1] +\r\n            \":00\"\r\n        );\r\n      setConferenceToUpdate(conferenceData);\r\n    }\r\n\r\n    setMessage(t(\"Editing conference..\"));\r\n    setIsOpenAlert(true);\r\n    setTimeout(() => {\r\n      setIsOpenAlert(false);\r\n      setMessage(\"\");\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      setStartDate(today().date);\r\n      setStartTime(today().time);\r\n      setDuration(\"01:00\");\r\n      setMdCheck(false);\r\n      setEmailList([]);\r\n      toastSuccess(t(\"Success!\"));\r\n    }, 2000);\r\n  };\r\n\r\n  const updatedTime = () => {\r\n    setTime(startTime);\r\n  };\r\n\r\n  useEffect(updatedTime, [startDate]);\r\n\r\n  const setTime = (value: string) => {\r\n  /*  toastError(t('The time has to be longer than the current one!')); */\r\n      let time = value.split(\":\");\r\n      let currentTime = today().time.split(\":\");\r\n  \r\n      if (startDate === today().date) {\r\n        if(parseInt(time[0]) < parseInt(currentTime[0])) {\r\n          setFlagWrongStartTime(true);\r\n          return;\r\n        }else{\r\n          setFlagWrongStartTime(false);\r\n          setStartTime(value);\r\n        }\r\n  \r\n        if(\r\n          parseInt(time[0]) === parseInt(currentTime[0]) &&\r\n          parseInt(time[1]) < parseInt(currentTime[1])\r\n        ){\r\n          setFlagWrongStartTime(true);\r\n          return;\r\n        }else{\r\n          setFlagWrongStartTime(false);\r\n          setStartTime(value);\r\n        }\r\n      };\r\n  \r\n  }\r\n\r\n  const inputName = useRef<HTMLInputElement>(null);\r\n\r\n  \r\n  const handleCalendarChange = (e: string) => {\r\n    if(e){\r\n      let year = e.split('-')[0];\r\n      let month = e.split('-')[1];\r\n      let day = e.split('-')[2].slice(0,2);\r\n      setParsedDate(year+'-'+month+'-'+day+'T12:00:00.000Z');\r\n      setStartDate(year+'-'+month+'-'+day);\r\n      console.log('parsedDate', parsedDate);\r\n      console.log('startDate', startDate);\r\n    }\r\n  }\r\n\r\n\r\n  function init() {\r\n    const conferenceData = conferenceList.find(\r\n      (conference) => conference.jid === activeChat.jid\r\n    );\r\n\r\n    if (conferenceData) {\r\n      setConference(conferenceData);\r\n      setName(conferenceData.name);\r\n      setDescription(\r\n        conferenceData.description ? conferenceData.description : \"\"\r\n      );\r\n\r\n      const startDateData = DateTime.fromString(\r\n        conferenceData.startDatetimeStr,\r\n        \"yyyy-MM-dd hh:mm:ss\"\r\n      );\r\n      const stopDateData = DateTime.fromString(\r\n        conferenceData.stopDatetimeStr,\r\n        \"yyyy-MM-dd hh:mm:ss\"\r\n      );\r\n\r\n      setStartDate(startDateData.toFormat(\"yyyy-MM-dd\"));\r\n      setStartTime(startDateData.toFormat(\"HH:mm:ss\"));\r\n      //conferenceData.startDatetime\r\n      //conferenceData.stopDatetime\r\n\r\n      const ms = stopDateData.toMillis() - startDateData.toMillis();\r\n\r\n      const seconds = Math.floor((ms / 1000) % 60);\r\n      const minutes = Math.floor((ms / (1000 * 60)) % 60);\r\n      const hours = Math.floor((ms / (1000 * 60 * 60)) % 24);\r\n\r\n      setDuration(\r\n        `${zeroLeft(hours, 2)}:${zeroLeft(minutes, 2)}:${zeroLeft(seconds, 2)}`\r\n      );\r\n    }\r\n\r\n    setTimeout(() => inputName.current?.focus(), 500);\r\n  }\r\n\r\n  useEffect(init, [show]);\r\n\r\n  return (\r\n    <Modal isOpen={show} size=\"md\" centered toggle={toggle}>\r\n      <ModalHeader\r\n        tag=\"h5\"\r\n        className=\"modal-title font-size-16\"\r\n        toggle={toggle}\r\n      >\r\n        {t(\"Edit conference\")}\r\n      </ModalHeader>\r\n      <ModalBody className=\"p-4\">\r\n        <Form>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"name-input\">{t(\"Room name\")}</Label>\r\n                <input\r\n                  ref={inputName}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name-input\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder={t(\"Room name\") + \"...\"}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"description-input\">\r\n                  {t(\"Room description\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description-input\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  placeholder={t(\"Room description\") + \"...\"}\r\n                />\r\n              </FormGroup>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"date-start-input\">{t(\"Starting date\")}</Label>\r\n                  <DatePicker\r\n                    id=\"example-datepicker\" \r\n                    onChange={(e: any) => handleCalendarChange(e)}\r\n                    minDate={new Date().toISOString()}\r\n                    value={parsedDate}\r\n                    showClearButton={false}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"time-start-input\">{t(\"Starting time\")}</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"time-start-input\"\r\n                    value={startTime}\r\n                    onChange={(e) => setTime(e.target.value)}\r\n                  />\r\n                  {flagWrongStartTime === true &&\r\n                  <div className={\"mt-2\"} style={{\r\n                    color: \"red\",\r\n                  }}>{t(\"Invalid time\")}</div>}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"duration-input\">{t(\"Duration\")}</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"date-end-input\"\r\n                    value={duration}\r\n                    onChange={(e) => setDuration(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-4 col-12\">\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) => {\r\n                        setMdCheck(e.target.checked);\r\n                      }}\r\n                      id={\"mdCheck\"}\r\n                      value={mdCheck ? 1 : 0}\r\n                    />\r\n                    <Label className=\"custom-control-label\" htmlFor={\"mdCheck\"}>\r\n                      {t(\"Wait for call administrator to start\")}\r\n                    </Label>\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <h5 className=\"mb-3\">{t(\"External participants\")}</h5>\r\n          <EmailList emailList={emailList} setEmailList={setEmailList} />\r\n        </Form>\r\n        <Alert isOpen={isOpenAlert} color=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button type=\"button\" color=\"link\" onClick={toggle}>\r\n          {t(\"Close\")}\r\n        </Button>\r\n        <Button type=\"button\" color=\"primary\" onClick={handleEditConference}>\r\n          {t(\"Save\")}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}