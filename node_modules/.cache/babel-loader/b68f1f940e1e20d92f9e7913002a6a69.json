{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessage.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\nimport ImageList from \"./ImageList\";\nimport FileList from \"./FileList\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport DeliverStatus from \"./../enuns/DeliverStatus\";\nimport ReadStatus from \"./../enuns/ReadStatus\";\n\nconst ChatMessage = ({\n  activeChat,\n  message\n}) => {\n  var {\n    DateTime\n  } = require(\"luxon\");\n\n  DateTime.local().toString();\n  const [show, setShow] = useState(false);\n\n  const toggle = () => setShow(!show);\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth(); //ao sair do chat atual, esconda o texto de +165 caracteres aberto\n\n  useEffect(() => {\n    setShow(false);\n  }, [activeChat]);\n\n  const deleteMessage = id => {};\n\n  var labelToReadALongerText = \".. Ler mais\";\n  var smallerMessage = \"\";\n  var biggerMessage = \"\";\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\n  console.log(\"usuario\", user);\n  console.log(\"msg\", message);\n  console.log(\"chat\", activeChat);\n\n  const messageText = () => {\n    if (message.message) {\n      if (message.message.length > MAXNUMBERTODISPLAYMESSAGE) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0\",\n          style: {\n            wordBreak: \"break-word\",\n            textAlign: \"justify\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, !show ? (smallerMessage = message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE)) && smallerMessage : null, show ? (biggerMessage = message.message.slice(MAXNUMBERTODISPLAYMESSAGE, MAXNUMBEROFCHARACTERSONAMESSAGE)) && message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) + biggerMessage : null, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"hover\",\n          style: {\n            border: 0,\n            background: 0,\n            color: \"rgb(217, 237, 250)\"\n          },\n          onClick: toggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, !show ? labelToReadALongerText : null));\n      }\n\n      if (message.message.length <= 164) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0\",\n          style: {\n            wordBreak: \"break-word\",\n            textAlign: \"justify\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, message.message);\n      }\n    }\n  }; //clock: <i className=\"ri-time-line align-middle\"></i>\n\n\n  const messageFooter = () => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat-time mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        position: \"relative\",\n        right: 8,\n        top: 1,\n        color: \"rgb(114, 105, 239)\"\n      },\n      className: message.deliverStatus === DeliverStatus.QUEUED && user.id === message.fromUser ? \"ri-check-line align-middle\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        position: \"relative\",\n        right: 8,\n        top: 1,\n        color: \"rgb(114, 105, 239)\"\n      },\n      className: message.deliverStatus === DeliverStatus.DELIVERED && message.readStatus === ReadStatus.UNREAD && user.id === message.fromUser ? \"ri-check-double-line align-middle\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        position: \"relative\",\n        right: 8,\n        top: 1,\n        color: \"rgb(114, 105, 239)\" //rgb(35, 198, 10) verde para visualização <- A cor \"rgb(114, 105, 239)\" está aqui porque o backend original não possui mensagens de outros tipos para apresentação\n\n      },\n      className: message.readStatus === ReadStatus.READ && user.id === message.fromUser ? \"ri-check-double-line align-middle\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"align-middle\",\n      style: {\n        position: \"relative\",\n        right: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, DateTime.TIME_24_SIMPLE));\n  };\n\n  const option = () => {\n    if (!activeChat.isTyping) {\n      return /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"align-self-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        tag: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-more-2-fill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, t(\"Copy\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-file-copy-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, t(\"Save\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-save-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, \"Forward\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-chat-forward-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: () => deleteMessage(message.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, \"Delete\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-delete-bin-line float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }))));\n    }\n  };\n\n  const photo = () => {\n    if (activeChat.profilePicture) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: activeChat.profilePicture,\n        alt: \"chatvia\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-user-img align-self-center mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, message.userName && message.userName.trim().charAt(0))));\n    }\n  };\n\n  const isTyping = () => {\n    if (activeChat.isTyping) return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, \"typing\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"animate-typing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dot ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const image = () => {\n    if (message.isImageMessage && false) return /*#__PURE__*/React.createElement(ImageList, {\n      image: message.fileUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 14\n      }\n    });\n  };\n\n  const file = () => {\n    if (message.isFileMessage && false) return /*#__PURE__*/React.createElement(FileList, {\n      fileName: message.fileUrl,\n      fileSize: message.fileUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 14\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: user.id === message.fromUser ? \"right\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, photo()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-content \" + (user.id === message.fromUser ? \"message-chat-left\" : \"message-chat-right\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, messageText(), image(), file(), messageFooter(), isTyping()), option()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, message.userName))));\n};\n\nexport default ChatMessage;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessage.tsx"],"names":["React","useState","useEffect","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","ImageList","FileList","useTranslation","useAuth","DeliverStatus","ReadStatus","ChatMessage","activeChat","message","DateTime","require","local","toString","show","setShow","toggle","t","user","deleteMessage","id","labelToReadALongerText","smallerMessage","biggerMessage","MAXNUMBEROFCHARACTERSONAMESSAGE","MAXNUMBERTODISPLAYMESSAGE","console","log","messageText","length","wordBreak","textAlign","slice","border","background","color","messageFooter","position","right","top","deliverStatus","QUEUED","fromUser","DELIVERED","readStatus","UNREAD","READ","TIME_24_SIMPLE","option","isTyping","photo","profilePicture","userName","trim","charAt","image","isImageMessage","fileUrl","file","isFileMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\n\r\nimport ImageList from \"./ImageList\";\r\nimport FileList from \"./FileList\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nimport DeliverStatus from \"./../enuns/DeliverStatus\";\r\nimport ReadStatus from \"./../enuns/ReadStatus\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n}\r\n\r\nconst ChatMessage: React.FC<IProps> = ({ activeChat, message }) => {\r\n  var { DateTime } = require(\"luxon\");\r\n  DateTime.local().toString();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggle = () => setShow(!show);\r\n\r\n  const { t } = useTranslation();\r\n  const { user } = useAuth();\r\n\r\n  //ao sair do chat atual, esconda o texto de +165 caracteres aberto\r\n  useEffect(() => {\r\n    setShow(false);\r\n  }, [activeChat]);\r\n\r\n  const deleteMessage = (id: string) => {};\r\n\r\n  var labelToReadALongerText = \".. Ler mais\";\r\n  var smallerMessage = \"\";\r\n  var biggerMessage = \"\";\r\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\r\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\r\n\r\n  console.log(\"usuario\", user);\r\n  console.log(\"msg\", message);\r\n  console.log(\"chat\", activeChat);\r\n\r\n  const messageText = () => {\r\n    if (message.message) {\r\n      if (message.message.length > MAXNUMBERTODISPLAYMESSAGE) {\r\n        return (\r\n          <p\r\n            className=\"mb-0\"\r\n            style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n          >\r\n            {!show\r\n              ? (smallerMessage = message.message.slice(\r\n                  0,\r\n                  MAXNUMBERTODISPLAYMESSAGE\r\n                )) && smallerMessage\r\n              : null}\r\n            {show\r\n              ? (biggerMessage = message.message.slice(\r\n                  MAXNUMBERTODISPLAYMESSAGE,\r\n                  MAXNUMBEROFCHARACTERSONAMESSAGE\r\n                )) &&\r\n                message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) +\r\n                  biggerMessage\r\n              : null}\r\n\r\n            <button\r\n              className=\"hover\"\r\n              style={{\r\n                border: 0,\r\n                background: 0,\r\n                color: \"rgb(217, 237, 250)\",\r\n              }}\r\n              onClick={toggle}\r\n            >\r\n              {!show ? labelToReadALongerText : null}\r\n            </button>\r\n          </p>\r\n        );\r\n      }\r\n      if (message.message.length <= 164) {\r\n        return (\r\n          <p\r\n            className=\"mb-0\"\r\n            style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n          >\r\n            {message.message}\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //clock: <i className=\"ri-time-line align-middle\"></i>\r\n\r\n  const messageFooter = () => {\r\n    return (\r\n      <p className=\"chat-time mb-0\">\r\n        <i\r\n          style={{\r\n            position: \"relative\",\r\n            right: 8,\r\n            top: 1,\r\n            color: \"rgb(114, 105, 239)\",\r\n          }}\r\n          className={\r\n            message.deliverStatus === DeliverStatus.QUEUED &&\r\n            user.id === message.fromUser\r\n              ? \"ri-check-line align-middle\"\r\n              : \"\"\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{\r\n            position: \"relative\",\r\n            right: 8,\r\n            top: 1,\r\n            color: \"rgb(114, 105, 239)\",\r\n          }}\r\n          className={\r\n            message.deliverStatus === DeliverStatus.DELIVERED &&\r\n            message.readStatus === ReadStatus.UNREAD &&\r\n            user.id === message.fromUser\r\n              ? \"ri-check-double-line align-middle\"\r\n              : \"\"\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{\r\n            position: \"relative\",\r\n            right: 8,\r\n            top: 1,\r\n            color: \"rgb(114, 105, 239)\",\r\n            //rgb(35, 198, 10) verde para visualização <- A cor \"rgb(114, 105, 239)\" está aqui porque o backend original não possui mensagens de outros tipos para apresentação\r\n          }}\r\n          className={\r\n            message.readStatus === ReadStatus.READ &&\r\n            user.id === message.fromUser\r\n              ? \"ri-check-double-line align-middle\"\r\n              : \"\"\r\n          }\r\n        ></i>\r\n        <span\r\n          className=\"align-middle\"\r\n          style={{ position: \"relative\", right: 4 }}\r\n        >\r\n          {/* {moment(message.time).format(\"HH:mm\")} */}\r\n          {DateTime.TIME_24_SIMPLE}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const option = () => {\r\n    if (!activeChat.isTyping) {\r\n      return (\r\n        <UncontrolledDropdown className=\"align-self-start\">\r\n          <DropdownToggle tag=\"a\">\r\n            <i className=\"ri-more-2-fill\"></i>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>\r\n              {t(\"Copy\")}\r\n              <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              {t(\"Save\")}{\" \"}\r\n              <i className=\"ri-save-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem onClick={toggle}>\r\n              Forward{\" \"}\r\n              <i className=\"ri-chat-forward-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n            <DropdownItem onClick={() => deleteMessage(message.id)}>\r\n              Delete{\" \"}\r\n              <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  const photo = () => {\r\n    if (activeChat.profilePicture) {\r\n      return <img src={activeChat.profilePicture} alt=\"chatvia\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"chat-user-img align-self-center mr-3\">\r\n          <div className=\"avatar-xs\">\r\n            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n              {message.userName && message.userName.trim().charAt(0)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const isTyping = () => {\r\n    if (activeChat.isTyping)\r\n      return (\r\n        <p className=\"mb-0\">\r\n          typing\r\n          <span className=\"animate-typing\">\r\n            <span className=\"dot ml-1\"></span>\r\n            <span className=\"dot ml-1\"></span>\r\n            <span className=\"dot ml-1\"></span>\r\n          </span>\r\n        </p>\r\n      );\r\n  };\r\n\r\n  const image = () => {\r\n    if (message.isImageMessage && false)\r\n      return <ImageList image={message.fileUrl} />;\r\n  };\r\n\r\n  const file = () => {\r\n    if (message.isFileMessage && false)\r\n      return <FileList fileName={message.fileUrl} fileSize={message.fileUrl} />;\r\n  };\r\n\r\n  return (\r\n    <li className={user.id === message.fromUser ? \"right\" : \"\"}>\r\n      <div className=\"conversation-list\">\r\n        <div className=\"chat-avatar\">{photo()}</div>\r\n\r\n        <div\r\n          className={\r\n            \"user-chat-content \" +\r\n            (user.id === message.fromUser\r\n              ? \"message-chat-left\"\r\n              : \"message-chat-right\")\r\n          }\r\n        >\r\n          <div className=\"ctext-wrap\">\r\n            <div className=\"ctext-wrap-content\">\r\n              {messageText()}\r\n              {image()}\r\n              {file()}\r\n              {messageFooter()}\r\n              {isTyping()}\r\n            </div>\r\n            {option()}\r\n          </div>\r\n          <div className=\"conversation-name\">{message.userName}</div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n"]},"metadata":{},"sourceType":"module"}