{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalAddContacts.tsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, ModalFooter } from \"reactstrap\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleBar from \"simplebar-react\";\nimport SelectContact from \"./SelectContact\";\nimport { useContact } from \"./../contexts/ContactContext\";\n\nconst ModalAddContacts = () => {\n  const [search, setSearch] = useState(\"\");\n  const {\n    t\n  } = useTranslation();\n  const {\n    setToggleAddingContacts,\n\n    /* toggleAddingContacts, */\n    contactsOutsideUserContacts,\n    checkedContacts,\n    setCheckedContacts\n  } = useContact();\n  const {\n    showModalAddContact,\n    setShowModalAddContact\n  } = useModal();\n\n  const toggle = () => {\n    if (showModalAddContact) {\n      setShowModalAddContact(!showModalAddContact);\n    }\n  };\n\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      setCheckedContacts([...checkedContacts, contact]);\n    } else {\n      setCheckedContacts(checkedContacts.filter(sel => {\n        if (sel.jid === contact.jid) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const inputSearch = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      var _inputSearch$current;\n\n      return (_inputSearch$current = inputSearch.current) === null || _inputSearch$current === void 0 ? void 0 : _inputSearch$current.focus();\n    }, 500);\n  }, [showModalAddContact]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: !!showModalAddContact,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, t(\"MODIFICAMOS AQUI\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-2 pb-3 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputSearch,\n    type: \"text\",\n    className: \"form-control mb-3\",\n    id: \"addgroupname-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectContact, {\n    contacts: contactsOutsideUserContacts,\n    handleCheckContact: handleCheckContact,\n    search: search,\n    checkedContacts: checkedContacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    onClick: () => {\n      setCheckedContacts([]);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      toggle();\n      setToggleAddingContacts(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, t(\"Add Contacts\"))))));\n};\n\nexport default ModalAddContacts;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalAddContacts.tsx"],"names":["React","useState","useRef","useEffect","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","useModal","useTranslation","SimpleBar","SelectContact","useContact","ModalAddContacts","search","setSearch","t","setToggleAddingContacts","contactsOutsideUserContacts","checkedContacts","setCheckedContacts","showModalAddContact","setShowModalAddContact","toggle","handleCheckContact","selected","contact","filter","sel","jid","inputSearch","setTimeout","current","focus","e","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport SelectContact from \"./SelectContact\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\n\r\nconst ModalAddContacts: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { t } = useTranslation();\r\n  const {\r\n    setToggleAddingContacts,\r\n    /* toggleAddingContacts, */\r\n    contactsOutsideUserContacts,\r\n    checkedContacts,\r\n    setCheckedContacts\r\n  } = useContact();\r\n\r\n  const { showModalAddContact, setShowModalAddContact } = useModal();\r\n\r\n  const toggle = () => {\r\n    if (showModalAddContact) {\r\n      setShowModalAddContact(!showModalAddContact);\r\n    }\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setCheckedContacts([...checkedContacts, contact]);\r\n    } else {\r\n      setCheckedContacts(\r\n        checkedContacts.filter((sel) => {\r\n          if (sel.jid === contact.jid) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputSearch.current?.focus(), 500);\r\n  }, [showModalAddContact]);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalAddContact}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"MODIFICAMOS AQUI\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <input\r\n              ref={inputSearch}\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectContact\r\n                contacts={contactsOutsideUserContacts}\r\n                handleCheckContact={handleCheckContact}\r\n                search={search}\r\n                checkedContacts={checkedContacts}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button\r\n              color=\"default\"\r\n              onClick={() => {\r\n                setCheckedContacts([]);\r\n                toggle();\r\n              }}\r\n            >\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                toggle();\r\n                setToggleAddingContacts(true);\r\n              }}\r\n            >\r\n              {t(\"Add Contacts\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalAddContacts;\r\n"]},"metadata":{},"sourceType":"module"}