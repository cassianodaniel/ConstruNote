{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { Transaction } from \"./transaction\";\n/**\n * Server Transaction.\n * @remarks\n * The server transaction is responsible for the delivery of requests to\n * the TU and the reliable transmission of responses.  It accomplishes\n * this through a state machine.  Server transactions are created by the\n * core when a request is received, and transaction handling is desired\n * for that request (this is not always the case).\n * https://tools.ietf.org/html/rfc3261#section-17.2\n * @public\n */\n\nexport var ServerTransaction = /*#__PURE__*/function (_Transaction) {\n  _inherits(ServerTransaction, _Transaction);\n\n  var _super = _createSuper(ServerTransaction);\n\n  function ServerTransaction(_request, transport, user, state, loggerCategory) {\n    var _this;\n\n    _classCallCheck(this, ServerTransaction);\n\n    _this = _super.call(this, transport, user, _request.viaBranch, state, loggerCategory);\n    _this._request = _request;\n    _this.user = user;\n    return _this;\n  }\n  /** The incoming request the transaction handling. */\n\n\n  _createClass(ServerTransaction, [{\n    key: \"request\",\n    get: function get() {\n      return this._request;\n    }\n  }]);\n\n  return ServerTransaction;\n}(Transaction);","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/sip.js/lib/core/transactions/server-transaction.js"],"names":["Transaction","ServerTransaction","_request","transport","user","state","loggerCategory","viaBranch"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,iBAAb;AAAA;;AAAA;;AACI,6BAAYC,QAAZ,EAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,cAA9C,EAA8D;AAAA;;AAAA;;AAC1D,8BAAMH,SAAN,EAAiBC,IAAjB,EAAuBF,QAAQ,CAACK,SAAhC,EAA2CF,KAA3C,EAAkDC,cAAlD;AACA,UAAKJ,QAAL,GAAgBA,QAAhB;AACA,UAAKE,IAAL,GAAYA,IAAZ;AAH0D;AAI7D;AACD;;;AANJ;AAAA;AAAA,wBAOkB;AACV,aAAO,KAAKF,QAAZ;AACH;AATL;;AAAA;AAAA,EAAuCF,WAAvC","sourcesContent":["import { Transaction } from \"./transaction\";\n/**\n * Server Transaction.\n * @remarks\n * The server transaction is responsible for the delivery of requests to\n * the TU and the reliable transmission of responses.  It accomplishes\n * this through a state machine.  Server transactions are created by the\n * core when a request is received, and transaction handling is desired\n * for that request (this is not always the case).\n * https://tools.ietf.org/html/rfc3261#section-17.2\n * @public\n */\nexport class ServerTransaction extends Transaction {\n    constructor(_request, transport, user, state, loggerCategory) {\n        super(transport, user, _request.viaBranch, state, loggerCategory);\n        this._request = _request;\n        this.user = user;\n    }\n    /** The incoming request the transaction handling. */\n    get request() {\n        return this._request;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}