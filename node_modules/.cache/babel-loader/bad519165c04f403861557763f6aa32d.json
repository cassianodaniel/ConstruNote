{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\VideoBox.tsx\";\nimport React, { useState } from \"react\";\nimport { useCall } from \"../contexts/CallContext\";\nimport { tagsRange } from \"../services/voice/voicecommunicator\";\nimport { motion } from \"framer-motion\";\nimport { height, width } from \"../helpers/windowSize\";\nimport { DropdownItem } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport VideoBoxButton from \"./VideoBoxButton\";\n\nconst VideoBox = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentCalls,\n    setConferenceCommand\n  } = useCall();\n  const [widthBox, setWidthBox] = useState(400);\n  const [flagToOpacity, setFlagToOpacity] = useState(false);\n  const [flagToTimeOut, setFlagToTimeOut] = useState(true);\n  const [pictureInPictureEnabled, setPictureInPictureEnabled] = useState(false);\n  const [pictureInPictureTag, setPictureInPictureTag] = useState(undefined);\n\n  const toggleOpacity = () => {\n    if (flagToTimeOut === true) {\n      setFlagToOpacity(true);\n      setFlagToTimeOut(false);\n      setTimeout(() => {\n        setFlagToOpacity(false);\n        setFlagToTimeOut(true);\n      }, 6000);\n    }\n  };\n\n  const togglePictureInPicture = tagId => {\n    const doc = document;\n\n    if (!doc.pictureInPictureElement && doc.pictureInPictureEnabled) {\n      const video = document.querySelector(`#remote-stream-${tagId}`);\n      video === null || video === void 0 ? void 0 : video.requestPictureInPicture().catch(error => {});\n    } else {\n      if (doc.pictureInPictureEnabled) {\n        document.exitPictureInPicture().catch(error => {});\n      }\n    }\n  };\n\n  const listenPictureInPictureChanges = () => {\n    tagsRange.forEach(tagId => {\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\n\n      if (videoEl && !videoEl.disablePictureInPicture) {\n        videoEl.addEventListener(\"enterpictureinpicture\", () => {\n          // Video entered Picture-in-Picture mode.\n          setPictureInPictureEnabled(true);\n          setPictureInPictureTag(tagId);\n        });\n        videoEl.addEventListener(\"leavepictureinpicture\", () => {\n          // Video left Picture-in-Picture mode.\n          setPictureInPictureEnabled(false);\n          setPictureInPictureTag(undefined);\n        });\n      }\n    });\n  };\n\n  const removeListeners = () => {\n    tagsRange.forEach(tagId => {\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\n\n      if (videoEl) {\n        videoEl.removeEventListener(\"enterpictureinpicture\", () => {});\n        videoEl.removeEventListener(\"leavepictureinpicture\", () => {});\n      }\n    });\n  };\n\n  const isVisible = tagId => {\n    const callTag = getCallByTag(tagId);\n    return callTag && pictureInPictureTag !== tagId && (callTag.sendingVideo || (callTag === null || callTag === void 0 ? void 0 : callTag.receivingVideo));\n  };\n\n  const getCallByTag = tagId => {\n    return Array.from(currentCalls.values()).find(call => call.tagId === `remote-stream-${tagId}`);\n  };\n\n  const getCallerObjectId = callerObject => {\n    return callerObject.id || callerObject.groupId || callerObject.id;\n  };\n\n  const isConference = call => {\n    if (call) return !!(call.callerObject.participantPin || call.callerObject.groupId);\n    return false;\n  };\n\n  const sendConfCommand = (call, command) => {\n    if (call) {\n      if (command === \"tmute\") {\n        call.sendDTMF(\"0\");\n      } else if (command === \"tvmute\") {\n        call.sendDTMF(\"*\");\n      }\n    }\n  };\n\n  removeListeners();\n  listenPictureInPictureChanges();\n\n  const layouts = call => {\n    if ((call === null || call === void 0 ? void 0 : call.callerObject) && isConference(call)) {\n      const conferenceId = getCallerObjectId(call.callerObject);\n      const layoutsName = {\n        \"group:grid\": \"Distribute in degree\",\n        \"group:grid-zoom\": \"Highlight users\",\n        \"1up_top_left+9\": \"Highlight who talks to others around\",\n        overlaps: \"Highlight who talks to others below\",\n        \"presenter-overlap-small-bot-right\": \"Highlight presentation\"\n      };\n      return Object.keys(layoutsName).map(k => /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: () => {\n          setConferenceCommand({\n            command: \"setLayout\",\n            conferenceId,\n            extraParam: k\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, t(layoutsName[k]))));\n    }\n  };\n\n  const boxVideo = {\n    position: \"fixed\",\n    right: \"50px\",\n    bottom: \"50px\",\n    zIndex: 100,\n    maxWidth: `${widthBox}px`,\n    borderRadius: \"2px\",\n    backgroundColor: \"#000000\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n  const video = {\n    position: \"relative\",\n    width: `${widthBox}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, tagsRange.map(tagId => /*#__PURE__*/React.createElement(motion.div, {\n    drag: true,\n    dragConstraints: {\n      top: (height() - 400) * -1,\n      bottom: height() - 1100,\n      left: (width() - 500) * -1,\n      right: 0\n    },\n    style: { ...boxVideo,\n      display: isVisible(tagId) ? boxVideo.display : \"none\"\n    },\n    key: `remote-stream-${tagId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    style: video,\n    onMouseOver: toggleOpacity,\n    id: `remote-stream-${tagId}`,\n    hidden: !isVisible(tagId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VideoBoxButton, {\n    key: `remote-stream-${tagId}`,\n    tagId: tagId,\n    pictureInPictureTag: pictureInPictureTag,\n    widthBox: widthBox,\n    setWidthBox: setWidthBox,\n    width: width,\n    height: height,\n    flagToOpacity: flagToOpacity,\n    pictureInPictureEnabled: pictureInPictureEnabled,\n    togglePictureInPicture: togglePictureInPicture,\n    sendConfCommand: sendConfCommand,\n    layouts: layouts,\n    getCallByTag: getCallByTag,\n    isConference: isConference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default VideoBox;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/VideoBox.tsx"],"names":["React","useState","useCall","tagsRange","motion","height","width","DropdownItem","useTranslation","VideoBoxButton","VideoBox","t","currentCalls","setConferenceCommand","widthBox","setWidthBox","flagToOpacity","setFlagToOpacity","flagToTimeOut","setFlagToTimeOut","pictureInPictureEnabled","setPictureInPictureEnabled","pictureInPictureTag","setPictureInPictureTag","undefined","toggleOpacity","setTimeout","togglePictureInPicture","tagId","doc","document","pictureInPictureElement","video","querySelector","requestPictureInPicture","catch","error","exitPictureInPicture","listenPictureInPictureChanges","forEach","videoEl","disablePictureInPicture","addEventListener","removeListeners","removeEventListener","isVisible","callTag","getCallByTag","sendingVideo","receivingVideo","Array","from","values","find","call","getCallerObjectId","callerObject","id","groupId","isConference","participantPin","sendConfCommand","command","sendDTMF","layouts","conferenceId","layoutsName","overlaps","Object","keys","map","k","extraParam","boxVideo","position","right","bottom","zIndex","maxWidth","borderRadius","backgroundColor","display","justifyContent","alignItems","top","left"],"mappings":"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","sourcesContent":["import React, { CSSProperties, useState } from \"react\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\nimport { tagsRange } from \"../services/voice/voicecommunicator\";\r\nimport { motion } from \"framer-motion\";\r\nimport { height, width } from \"../helpers/windowSize\";\r\nimport { DropdownItem } from \"reactstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ICall from \"../alias/ICall\";\r\nimport { IConference } from \"../alias/IConference\";\r\nimport IGroup from \"../alias/IGroup\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { DocumentPictureInPicture } from \"../alias/IDocumentPictureInPicture\";\r\nimport { HTMLVideoElementPictureInPicture } from \"../alias/IHTMLVideoElementPictureInPicture\";\r\nimport VideoBoxButton from \"./VideoBoxButton\";\r\n\r\nconst VideoBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const { currentCalls, setConferenceCommand } = useCall();\r\n\r\n  const [widthBox, setWidthBox] = useState(400);\r\n  const [flagToOpacity, setFlagToOpacity] = useState<boolean>(false);\r\n  const [flagToTimeOut, setFlagToTimeOut] = useState<boolean>(true);\r\n  const [\r\n    pictureInPictureEnabled,\r\n    setPictureInPictureEnabled,\r\n  ] = useState<boolean>(false);\r\n  const [pictureInPictureTag, setPictureInPictureTag] = useState<\r\n    number | undefined\r\n  >(undefined);\r\n\r\n  const toggleOpacity = () => {\r\n    if (flagToTimeOut === true) {\r\n      setFlagToOpacity(true);\r\n      setFlagToTimeOut(false);\r\n      setTimeout(() => {\r\n        setFlagToOpacity(false);\r\n        setFlagToTimeOut(true);\r\n      }, 6000);\r\n    }\r\n  };\r\n\r\n  const togglePictureInPicture = (tagId: number) => {\r\n    const doc = document as DocumentPictureInPicture;\r\n    if (!doc.pictureInPictureElement && doc.pictureInPictureEnabled) {\r\n      const video = document.querySelector(\r\n        `#remote-stream-${tagId}`\r\n      ) as HTMLVideoElementPictureInPicture;\r\n      video?.requestPictureInPicture().catch((error) => {});\r\n    } else {\r\n      if (doc.pictureInPictureEnabled) {\r\n        (document as DocumentPictureInPicture)\r\n          .exitPictureInPicture()\r\n          .catch((error) => {});\r\n      }\r\n    }\r\n  };\r\n\r\n  const listenPictureInPictureChanges = () => {\r\n    tagsRange.forEach((tagId) => {\r\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\r\n      if (\r\n        videoEl &&\r\n        !(videoEl as HTMLVideoElementPictureInPicture).disablePictureInPicture\r\n      ) {\r\n        videoEl.addEventListener(\"enterpictureinpicture\", () => {\r\n          // Video entered Picture-in-Picture mode.\r\n          setPictureInPictureEnabled(true);\r\n          setPictureInPictureTag(tagId);\r\n        });\r\n        videoEl.addEventListener(\"leavepictureinpicture\", () => {\r\n          // Video left Picture-in-Picture mode.\r\n          setPictureInPictureEnabled(false);\r\n          setPictureInPictureTag(undefined);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeListeners = () => {\r\n    tagsRange.forEach((tagId) => {\r\n      const videoEl = document.querySelector(`#remote-stream-${tagId}`);\r\n      if (videoEl) {\r\n        videoEl.removeEventListener(\"enterpictureinpicture\", () => {});\r\n        videoEl.removeEventListener(\"leavepictureinpicture\", () => {});\r\n      }\r\n    });\r\n  };\r\n\r\n  const isVisible = (tagId: number) => {\r\n    const callTag = getCallByTag(tagId);\r\n    return (\r\n      callTag &&\r\n      pictureInPictureTag !== tagId &&\r\n      (callTag.sendingVideo || callTag?.receivingVideo)\r\n    );\r\n  };\r\n\r\n  const getCallByTag = (tagId: number) => {\r\n    return Array.from(currentCalls.values()).find(\r\n      (call) => call.tagId === `remote-stream-${tagId}`\r\n    );\r\n  };\r\n\r\n  const getCallerObjectId = (callerObject: IConference | IGroup | IContact) => {\r\n    return (\r\n      (callerObject as IConference).id ||\r\n      (callerObject as IGroup).groupId ||\r\n      (callerObject as IContact).id\r\n    );\r\n  };\r\n\r\n  const isConference = (call: ICall | undefined) => {\r\n    if (call)\r\n      return !!(\r\n        (call.callerObject as IConference).participantPin ||\r\n        (call.callerObject as IGroup).groupId\r\n      );\r\n    return false;\r\n  };\r\n\r\n  const sendConfCommand = (\r\n    call: ICall | undefined,\r\n    command: \"tvmute\" | \"tmute\"\r\n  ) => {\r\n    if (call) {\r\n      if (command === \"tmute\") {\r\n        call.sendDTMF(\"0\");\r\n      } else if (command === \"tvmute\") {\r\n        call.sendDTMF(\"*\");\r\n      }\r\n    }\r\n  };\r\n\r\n  removeListeners();\r\n\r\n  listenPictureInPictureChanges();\r\n\r\n  const layouts = (call: ICall | undefined) => {\r\n    if (call?.callerObject && isConference(call)) {\r\n      const conferenceId = getCallerObjectId(call.callerObject);\r\n      const layoutsName: any = {\r\n        \"group:grid\": \"Distribute in degree\",\r\n        \"group:grid-zoom\": \"Highlight users\",\r\n        \"1up_top_left+9\": \"Highlight who talks to others around\",\r\n        overlaps: \"Highlight who talks to others below\",\r\n        \"presenter-overlap-small-bot-right\": \"Highlight presentation\",\r\n      };\r\n      return Object.keys(layoutsName).map((k) => (\r\n        <DropdownItem\r\n          onClick={() => {\r\n            setConferenceCommand({\r\n              command: \"setLayout\",\r\n              conferenceId,\r\n              extraParam: k,\r\n            });\r\n          }}\r\n        >\r\n          <span className=\"text-muted\">{t(layoutsName[k])}</span>\r\n        </DropdownItem>\r\n      ));\r\n    }\r\n  };\r\n\r\n  const boxVideo: CSSProperties = {\r\n    position: \"fixed\",\r\n    right: \"50px\",\r\n    bottom: \"50px\",\r\n    zIndex: 100,\r\n    maxWidth: `${widthBox}px`,\r\n    borderRadius: \"2px\",\r\n    backgroundColor: \"#000000\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  const video: CSSProperties = {\r\n    position: \"relative\",\r\n    width: `${widthBox}px`,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {tagsRange.map((tagId) => (\r\n        <motion.div\r\n          drag\r\n          dragConstraints={{\r\n            top: (height() - 400) * -1,\r\n            bottom: height() - 1100,\r\n            left: (width() - 500) * -1,\r\n            right: 0,\r\n          }}\r\n          style={{\r\n            ...boxVideo,\r\n            display: isVisible(tagId) ? boxVideo.display : \"none\",\r\n          }}\r\n          key={`remote-stream-${tagId}`}\r\n        >\r\n          <video\r\n            style={video}\r\n            onMouseOver={toggleOpacity}\r\n            id={`remote-stream-${tagId}`}\r\n            hidden={!isVisible(tagId)}\r\n          />\r\n\r\n          <VideoBoxButton\r\n            key={`remote-stream-${tagId}`}\r\n            tagId={tagId}\r\n            pictureInPictureTag={pictureInPictureTag}\r\n            widthBox={widthBox}\r\n            setWidthBox={setWidthBox}\r\n            width={width}\r\n            height={height}\r\n            flagToOpacity={flagToOpacity}\r\n            pictureInPictureEnabled={pictureInPictureEnabled}\r\n            togglePictureInPicture={togglePictureInPicture}\r\n            sendConfCommand={sendConfCommand}\r\n            layouts={layouts}\r\n            getCallByTag={getCallByTag}\r\n            isConference={isConference}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoBox;\r\n"]},"metadata":{},"sourceType":"module"}