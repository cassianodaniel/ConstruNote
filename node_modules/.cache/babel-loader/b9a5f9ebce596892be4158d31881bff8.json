{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalEditConference.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Alert } from \"reactstrap\"; //simple bar\n\nimport SimpleBar from \"simplebar-react\"; //components\n\nimport SelectContact from \"./SelectContact\";\nimport { useTranslation } from \"react-i18next\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport EmailList from \"./EmailList\";\nimport { zeroLeft } from \"./../helpers/zeroLeft\";\nimport Swal from \"sweetalert2\";\nimport { useConference } from \"../contexts/ConferenceContext\";\nimport { useChat } from \"../contexts/ChatContext\";\n\nconst today = () => {\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1; //January is 0!\n\n  var yyyy = today.getFullYear();\n  var hh = zeroLeft(today.getHours(), 2);\n  var min = zeroLeft(today.getMinutes(), 2);\n  return {\n    date: `${yyyy}-${mm}-${dd}`,\n    time: `${hh}:${min}`\n  };\n};\n\nexport const ModalEditConference = ({\n  show,\n  toggle\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    contacts\n  } = useContact();\n  const {\n    activeChat\n  } = useChat();\n  const {\n    setConferenceToUpdate,\n    conferenceList\n  } = useConference();\n  const [conference, setConference] = useState();\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startDate, setStartDate] = useState(today().date);\n  const [startTime, setStartTime] = useState(today().time);\n  const [duration, setDuration] = useState(\"01:00\");\n  const [mdCheck, setMdCheck] = useState(false);\n  const [selectedContact, setSelectedContact] = useState([]);\n  const [emailList, setEmailList] = useState([]);\n\n  const handleEditConference = () => {\n    setConferenceToUpdate(conference); // {\n    //   name,\n    //   description,\n    //   startDate,\n    //   startTime,\n    //   duration,\n    //   mdCheck,\n    //   selectedContact,\n    //   emailList,\n    // };\n\n    setIsOpenAlert(true);\n    setMessage(\"Editando conferÃªncia...\");\n    setTimeout(() => {\n      setIsOpenAlert(false);\n      setMessage(\"\");\n      setSearch(\"\");\n      setName(\"\");\n      setDescription(\"\");\n      setStartDate(today().date);\n      setStartTime(today().time);\n      setDuration(\"01:00\");\n      setMdCheck(false);\n      setSelectedContact([]);\n      setEmailList([]);\n    }, 2000);\n  };\n\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      setSelectedContact([...selectedContact, contact]);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.id === contact.id) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const updatedTime = () => {\n    setTime(startTime);\n  };\n\n  useEffect(updatedTime, [startDate]);\n\n  const setTime = value => {\n    let time = value.split(\":\");\n    let currentTime = today().time.split(\":\");\n\n    if (startDate === today().date) {\n      if (parseInt(time[0]) < parseInt(currentTime[0])) {\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"The time has to be longer than the current one!\",\n          showConfirmButton: false,\n          timer: 3000,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n        setStartTime(today().time);\n        return;\n      }\n\n      if (parseInt(time[0]) === parseInt(currentTime[0]) && parseInt(time[1]) < parseInt(currentTime[1])) {\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"The time has to be longer than the current one!\",\n          showConfirmButton: false,\n          timer: 3000,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n        setStartTime(today().time);\n        return;\n      }\n    }\n\n    setStartTime(value);\n  };\n\n  const inputName = useRef(null);\n\n  function init() {\n    const conferenceData = conferenceList.find(conference => conference.jid === activeChat.jid);\n\n    if (conferenceData) {\n      setConference(conferenceData);\n      setName(conferenceData.name);\n      setDescription(conferenceData.description ? conferenceData.description : \"\"); //conferenceData.startDatetime\n      //conferenceData.stopDatetime\n    }\n\n    setTimeout(() => {\n      var _inputName$current;\n\n      return (_inputName$current = inputName.current) === null || _inputName$current === void 0 ? void 0 : _inputName$current.focus();\n    }, 500);\n  }\n\n  useEffect(init, [show]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: show,\n    size: \"lg\",\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    tag: \"h5\",\n    className: \"modal-title font-size-16\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, t(\"Edit conference\")), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, t(\"Room name\")), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputName,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name-input\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: t(\"Room name\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, t(\"Room description\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description-input\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: t(\"Room description\") + \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"date-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, t(\"Starting date\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    className: \"form-control\",\n    id: \"date-start-input\",\n    min: today().date,\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"time-start-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, t(\"Starting time\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    className: \"form-control\",\n    id: \"time-start-input\",\n    value: startTime,\n    onChange: e => setTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"duration-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, t(\"Duration\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    className: \"form-control\",\n    id: \"date-end-input\",\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => {\n      setMdCheck(e.target.checked);\n    },\n    id: \"mdCheck\",\n    value: mdCheck ? 1 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label\",\n    htmlFor: \"mdCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, t(\"Wait for call administrator to start\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, t(\"Conference Members\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    id: \"search-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"320px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SelectContact, {\n    handleCheckContact: handleCheckContact,\n    contacts: contacts,\n    search: search,\n    checkedContacts: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, t(\"External participants\")), /*#__PURE__*/React.createElement(EmailList, {\n    emailList: emailList,\n    setEmailList: setEmailList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Alert, {\n    isOpen: isOpenAlert,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, message)), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"link\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: handleEditConference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, t(\"Edit conference\"))));\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalEditConference.tsx"],"names":["React","useState","useEffect","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","Alert","SimpleBar","SelectContact","useTranslation","useContact","EmailList","zeroLeft","Swal","useConference","useChat","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","min","getMinutes","date","time","ModalEditConference","show","toggle","t","contacts","activeChat","setConferenceToUpdate","conferenceList","conference","setConference","isOpenAlert","setIsOpenAlert","search","setSearch","message","setMessage","name","setName","description","setDescription","startDate","setStartDate","startTime","setStartTime","duration","setDuration","mdCheck","setMdCheck","selectedContact","setSelectedContact","emailList","setEmailList","handleEditConference","setTimeout","handleCheckContact","selected","contact","filter","sel","id","updatedTime","setTime","value","split","currentTime","parseInt","fire","position","icon","title","showConfirmButton","timer","customClass","popup","inputName","init","conferenceData","find","jid","current","focus","e","target","checked","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\n//simple bar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//components\r\nimport SelectContact from \"./SelectContact\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport EmailList from \"./EmailList\";\r\nimport IEmailList from \"../alias/IEmailList\";\r\nimport { zeroLeft } from \"./../helpers/zeroLeft\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useConference } from \"../contexts/ConferenceContext\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport { IConference } from \"../alias/IConference\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nconst today = () => {\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  var hh = zeroLeft(today.getHours(), 2);\r\n  var min = zeroLeft(today.getMinutes(), 2);\r\n\r\n  return {\r\n    date: `${yyyy}-${mm}-${dd}`,\r\n    time: `${hh}:${min}`,\r\n  };\r\n};\r\n\r\nexport const ModalEditConference: React.FC<IProps> = ({ show, toggle }) => {\r\n  const { t } = useTranslation();\r\n  const { contacts } = useContact();\r\n  const { activeChat } = useChat();\r\n  const { setConferenceToUpdate, conferenceList } = useConference();\r\n  const [conference, setConference] = useState<IConference | undefined>();\r\n\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [startDate, setStartDate] = useState<string>(today().date);\r\n  const [startTime, setStartTime] = useState<string>(today().time);\r\n  const [duration, setDuration] = useState<string>(\"01:00\");\r\n  const [mdCheck, setMdCheck] = useState<boolean>(false);\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n  const [emailList, setEmailList] = useState<IEmailList[]>([]);\r\n\r\n  const handleEditConference = () => {\r\n    setConferenceToUpdate(conference);\r\n\r\n    // {\r\n    //   name,\r\n    //   description,\r\n    //   startDate,\r\n    //   startTime,\r\n    //   duration,\r\n    //   mdCheck,\r\n    //   selectedContact,\r\n    //   emailList,\r\n    // };\r\n\r\n    setIsOpenAlert(true);\r\n    setMessage(\"Editando conferÃªncia...\");\r\n\r\n    setTimeout(() => {\r\n      setIsOpenAlert(false);\r\n      setMessage(\"\");\r\n      setSearch(\"\");\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      setStartDate(today().date);\r\n      setStartTime(today().time);\r\n      setDuration(\"01:00\");\r\n      setMdCheck(false);\r\n      setSelectedContact([]);\r\n      setEmailList([]);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      setSelectedContact([...selectedContact, contact]);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.id === contact.id) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const updatedTime = () => {\r\n    setTime(startTime);\r\n  };\r\n\r\n  useEffect(updatedTime, [startDate]);\r\n\r\n  const setTime = (value: string) => {\r\n    let time = value.split(\":\");\r\n    let currentTime = today().time.split(\":\");\r\n\r\n    if (startDate === today().date) {\r\n      if (parseInt(time[0]) < parseInt(currentTime[0])) {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"The time has to be longer than the current one!\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          customClass: {\r\n            popup: \"swal-mini-popup\",\r\n          },\r\n        });\r\n        setStartTime(today().time);\r\n        return;\r\n      }\r\n\r\n      if (\r\n        parseInt(time[0]) === parseInt(currentTime[0]) &&\r\n        parseInt(time[1]) < parseInt(currentTime[1])\r\n      ) {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"The time has to be longer than the current one!\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          customClass: {\r\n            popup: \"swal-mini-popup\",\r\n          },\r\n        });\r\n        setStartTime(today().time);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setStartTime(value);\r\n  };\r\n\r\n  const inputName = useRef<HTMLInputElement>(null);\r\n\r\n  function init() {\r\n    const conferenceData = conferenceList.find(\r\n      (conference) => conference.jid === activeChat.jid\r\n    );\r\n\r\n    if (conferenceData) {\r\n      setConference(conferenceData);\r\n      setName(conferenceData.name);\r\n      setDescription(\r\n        conferenceData.description ? conferenceData.description : \"\"\r\n      );\r\n      //conferenceData.startDatetime\r\n      //conferenceData.stopDatetime\r\n    }\r\n\r\n    setTimeout(() => inputName.current?.focus(), 500);\r\n  }\r\n\r\n  useEffect(init, [show]);\r\n\r\n  return (\r\n    <Modal isOpen={show} size=\"lg\" centered toggle={toggle}>\r\n      <ModalHeader\r\n        tag=\"h5\"\r\n        className=\"modal-title font-size-16\"\r\n        toggle={toggle}\r\n      >\r\n        {t(\"Edit conference\")}\r\n      </ModalHeader>\r\n      <ModalBody className=\"p-4\">\r\n        <Form>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"name-input\">{t(\"Room name\")}</Label>\r\n                <input\r\n                  ref={inputName}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name-input\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder={t(\"Room name\") + \"...\"}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"description-input\">\r\n                  {t(\"Room description\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description-input\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  placeholder={t(\"Room description\") + \"...\"}\r\n                />\r\n              </FormGroup>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"date-start-input\">{t(\"Starting date\")}</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"date-start-input\"\r\n                    min={today().date}\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"time-start-input\">{t(\"Starting time\")}</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"time-start-input\"\r\n                    value={startTime}\r\n                    onChange={(e) => setTime(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <FormGroup className=\"mb-4 col-6\">\r\n                  <Label htmlFor=\"duration-input\">{t(\"Duration\")}</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    className=\"form-control\"\r\n                    id=\"date-end-input\"\r\n                    value={duration}\r\n                    onChange={(e) => setDuration(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-4 col-12\">\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) => {\r\n                        setMdCheck(e.target.checked);\r\n                      }}\r\n                      id={\"mdCheck\"}\r\n                      value={mdCheck ? 1 : 0}\r\n                    />\r\n                    <Label className=\"custom-control-label\" htmlFor={\"mdCheck\"}>\r\n                      {t(\"Wait for call administrator to start\")}\r\n                    </Label>\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <FormGroup className=\"mb-4\">\r\n                <Label htmlFor=\"search-input\">{t(\"Conference Members\")}</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control mb-2\"\r\n                  id=\"search-input\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  placeholder={t(\"Search users..\")}\r\n                />\r\n                <div className=\"border\">\r\n                  <SimpleBar style={{ height: \"320px\" }}>\r\n                    <div id=\"addContacts\">\r\n                      <SelectContact\r\n                        handleCheckContact={handleCheckContact}\r\n                        contacts={contacts}\r\n                        search={search}\r\n                        checkedContacts={selectedContact}\r\n                      />\r\n                    </div>\r\n                  </SimpleBar>\r\n                </div>\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <h5 className=\"mb-3\">{t(\"External participants\")}</h5>\r\n          <EmailList emailList={emailList} setEmailList={setEmailList} />\r\n        </Form>\r\n        <Alert isOpen={isOpenAlert} color=\"danger\">\r\n          {message}\r\n        </Alert>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button type=\"button\" color=\"link\" onClick={toggle}>\r\n          {t(\"Close\")}\r\n        </Button>\r\n        <Button type=\"button\" color=\"primary\" onClick={handleEditConference}>\r\n          {t(\"Edit conference\")}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}