{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\EmailList.tsx\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Input, Label, FormGroup, Button } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\n\nconst EmailList = ({\n  emailList,\n  setEmailList\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const addEmail = () => {\n    let find = false;\n    emailList.forEach(item => {\n      if (item.email === email) {\n        find = true;\n      }\n    });\n\n    if (!find) {\n      let list = [...emailList];\n      list.push({\n        name,\n        email\n      });\n      setEmailList(list);\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  const deleteEmailList = data => {\n    setEmailList(emailList.filter(item => {\n      if (item.name === data.name && item.email === data.email) {\n        return false;\n      }\n\n      return true;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name-i-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, t(\"Name\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name-i-input\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: t(\"Name\") + '...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-6 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email-i-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, t(\"Email\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email-i-input\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: t(\"Email\") + '...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"bt-i-input\",\n    color: \"secondary\",\n    style: {\n      marginTop: \"30px\"\n    },\n    block: true,\n    onClick: addEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, t(\"Invite\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-12 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, t(\"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, t(\"Email\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, t(\"Option\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, emailList.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, t(\"No records...\"))) : emailList.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, item.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"bt-i-input\",\n    color: \"danger\",\n    block: true,\n    size: \"sm\",\n    onClick: () => deleteEmailList(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, t(\"Delete\")))))))))));\n};\n\nexport default EmailList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/EmailList.tsx"],"names":["React","useState","useTranslation","Input","Label","FormGroup","Button","SimpleBar","EmailList","emailList","setEmailList","t","name","setName","email","setEmail","addEmail","find","forEach","item","list","push","deleteEmailList","data","filter","e","target","value","marginTop","height","width","length","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,YAAhD;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAQA,MAAMC,SAA2B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAG,KAAX;AACAR,IAAAA,SAAS,CAACS,OAAV,CAAmBC,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACL,KAAL,KAAeA,KAAnB,EAA0B;AACxBG,QAAAA,IAAI,GAAG,IAAP;AACD;AACF,KAJD;;AAKA,QAAI,CAACA,IAAL,EAAW;AACT,UAAIG,IAAI,GAAG,CAAC,GAAGX,SAAJ,CAAX;AACAW,MAAAA,IAAI,CAACC,IAAL,CAAU;AACRT,QAAAA,IADQ;AAERE,QAAAA;AAFQ,OAAV;AAIAJ,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACD;;AACDP,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAjBD;;AAmBA,QAAMO,eAAe,GAAIC,IAAD,IAAsB;AAC5Cb,IAAAA,YAAY,CACVD,SAAS,CAACe,MAAV,CAAkBL,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACP,IAAL,KAAcW,IAAI,CAACX,IAAnB,IAA2BO,IAAI,CAACL,KAAL,KAAeS,IAAI,CAACT,KAAnD,EAA0D;AACxD,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KALD,CADU,CAAZ;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BH,CAAC,CAAC,MAAD,CAAhC,CADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,cAHL;AAIE,IAAA,KAAK,EAAEC,IAJT;AAKE,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAME,IAAA,WAAW,EAAEhB,CAAC,CAAC,MAAD,CAAD,GAAY,KAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,CAAC,CAAC,OAAD,CAAjC,CADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3B;AAME,IAAA,WAAW,EAAEhB,CAAC,CAAC,OAAD,CAAD,GAAa,KAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,eAwBE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE;AAAb,KAHT;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,OAAO,EAAEZ,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,CAAC,CAAC,QAAD,CAPJ,CADF,CAxBF,eAoCE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,CAAC,CAAC,MAAD,CAAN,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,CAAC,CAAC,OAAD,CAAN,CAFF,eAGE;AAAI,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BnB,CAAC,CAAC,QAAD,CAAhC,CAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACsB,MAAV,KAAqB,CAArB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,OAAO,EAAE,CAAb;AAAgB,IAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,CAAC,CAAC,eAAD,CADJ,CADF,CADD,GAOCF,SAAS,CAACuB,GAAV,CAAc,CAACb,IAAD,EAAOc,CAAP,kBACZ;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,IAAI,CAACP,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,IAAI,CAACL,KAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,IAJP;AAKE,IAAA,OAAO,EAAE,MAAMQ,eAAe,CAACH,IAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGR,CAAC,CAAC,QAAD,CAPJ,CADF,CAHF,CADF,CARJ,CARF,CADF,CADF,CADF,CApCF,CADF;AAiFD,CArHD;;AAuHA,eAAeH,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Input, Label, FormGroup, Button } from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport IEmailList from \"../alias/IEmailList\";\r\n\r\ninterface IProps {\r\n  emailList: IEmailList[];\r\n  setEmailList(value: IEmailList[]): void;\r\n}\r\n\r\nconst EmailList: React.FC<IProps> = ({ emailList, setEmailList }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const addEmail = () => {\r\n    let find = false;\r\n    emailList.forEach((item) => {\r\n      if (item.email === email) {\r\n        find = true;\r\n      }\r\n    });\r\n    if (!find) {\r\n      let list = [...emailList];\r\n      list.push({\r\n        name,\r\n        email,\r\n      });\r\n      setEmailList(list);\r\n    }\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const deleteEmailList = (data: IEmailList) => {\r\n    setEmailList(\r\n      emailList.filter((item) => {\r\n        if (item.name === data.name && item.email === data.email) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <FormGroup className=\"col-4 mb-4\">\r\n        <Label htmlFor=\"name-i-input\">{t(\"Name\")}</Label>\r\n        <Input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"name-i-input\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder={t(\"Name\") + '...'}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup className=\"col-6 mb-4\">\r\n        <Label htmlFor=\"email-i-input\">{t(\"Email\")}</Label>\r\n        <Input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"email-i-input\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder={t(\"Email\") + '...'}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup className=\"col-2 mb-4\">\r\n        <Button\r\n          id=\"bt-i-input\"\r\n          color=\"secondary\"\r\n          style={{ marginTop: \"30px\" }}\r\n          block\r\n          onClick={addEmail}\r\n        >\r\n          {t(\"Invite\")}\r\n        </Button>\r\n      </FormGroup>\r\n\r\n      <FormGroup className=\"col-12 mb-4\">\r\n        <div className=\"border\">\r\n          <SimpleBar style={{ height: \"150px\" }}>\r\n            <table className=\"table table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Email\")}</th>\r\n                  <th style={{ width: \"60px\" }}>{t(\"Option\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {emailList.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={3} className=\"text-muted\">\r\n                      {t(\"No records...\")}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  emailList.map((item, i) => (\r\n                    <tr key={i}>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.email}</td>\r\n                      <td>\r\n                        <Button\r\n                          id=\"bt-i-input\"\r\n                          color=\"danger\"\r\n                          block\r\n                          size=\"sm\"\r\n                          onClick={() => deleteEmailList(item)}\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </SimpleBar>\r\n        </div>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n"]},"metadata":{},"sourceType":"module"}