{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatProfileSidebar.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport ModalAddMember from \"./ModalAddMember\";\nimport { Input } from \"@material-ui/core\";\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\nimport LeaveGroupButton from './LeaveGroupButton';\nimport InfoHeadOnSidebar from './InfoHeadOnSidebar';\nimport MembersOnSidebar from './MembersOnSidebar';\nimport FavoritedMessages from \"./FavoritedMessages\";\n\nconst ChatProfileSidebar = ({\n  show,\n  setShow\n}) => {\n  var _activeChat$members, _activeChat$members2, _activeChat$members3;\n\n  const [isOpen1, setIsOpen1] = useState(false);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const [isOpen3, setIsOpen3] = useState(false);\n  const {\n    flagToLoadFavoriteMessages,\n    setFlagToLoadFavoriteMessages\n  } = useChat();\n  const [newGroupName, setGroupName] = useState(\"\");\n  const {\n    user\n  } = useAuth();\n  const {\n    activeChat,\n    chats,\n    setChats,\n    setActiveChat\n  } = useChat();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    setShowModalAddMember\n  } = useModal();\n\n  const toggleCollapse1 = () => {\n    setIsOpen1(!isOpen1);\n    setIsOpen2(false);\n  };\n\n  const toggleCollapse2 = () => {\n    setIsOpen1(false);\n    setIsOpen2(!isOpen2);\n  };\n  /* const toggleCollapse3 = (payload: ListFavoriteMessagesPayload) => {\r\n    setIsOpen1(false); \r\n    setIsOpen2(false);\r\n    setIsOpen3(!isOpen3);\r\n    if(flagToLoadFavoriteMessages === undefined || false){\r\n      setFlagToLoadFavoriteMessages(payload);\r\n    };\r\n  }; */\n\n\n  const closeUserSidebar = () => {\n    setShow(false);\n  };\n\n  const getAttachedFiles = () => {\n    if (show && activeChat.attachedFileList === undefined) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: []\n      });\n    } else if (!show) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: undefined\n      });\n    }\n  };\n\n  useEffect(getAttachedFiles, [show]);\n\n  const closeUserSidebarOnActiveChatChange = () => {\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\n  };\n\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\n  const actualMember = (_activeChat$members = activeChat.members) === null || _activeChat$members === void 0 ? void 0 : _activeChat$members.find(member => member.userId === user.id);\n  const isAdmin = (actualMember === null || actualMember === void 0 ? void 0 : actualMember.role) === \"admin\"; //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\n\n  const actualMembers = (_activeChat$members2 = activeChat.members) === null || _activeChat$members2 === void 0 ? void 0 : _activeChat$members2.map(mb => {\n    return mb.userId;\n  });\n  const isGroup = activeChat.groupId;\n  const membersArrayPreventingDuplicateDisplayMember = (_activeChat$members3 = activeChat.members) === null || _activeChat$members3 === void 0 ? void 0 : _activeChat$members3.filter((item, index, arrayCompleto) => arrayCompleto.findIndex(item2 => item.userId === item2.userId) === index);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: show ? \"block\" : \"none\"\n    },\n    className: \"user-profile-sidebar \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, isGroup && isAdmin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    className: \"nav-btn\",\n    onClick: () => setShowModalAddMember(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(ModalAddMember, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(LeaveGroupButton, {\n    activeChat: activeChat,\n    actualMember: actualMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), isGroup && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    onClick: closeUserSidebar,\n    className: \"nav-btn\",\n    id: \"user-profile-hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center p-4 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, !activeChat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, activeChat.name.trim().charAt(0))) : /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: activeChat.profilePicture,\n    onError: () => {\n      if (activeChat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, activeChat);\n    },\n    fallbackImage: defaultAvatar,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, isGroup ? /*#__PURE__*/React.createElement(Input, {\n    inputProps: {\n      min: 0,\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    placeholder: activeChat.name,\n    disableUnderline: true,\n    fullWidth: true,\n    onChange: e => setGroupName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, activeChat.name)), isGroup && newGroupName.length > 0 ? /*#__PURE__*/React.createElement(ChangeGroupNameButton, {\n    newGroupName: newGroupName,\n    setGroupName: setGroupName,\n    actualMembers: actualMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }) : isGroup && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 24\n    }\n  }), activeChat.status && /*#__PURE__*/React.createElement(UserStatusOnProfileSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"p-4 user-profile-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-user-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoHeadOnSidebar, {\n    activeChat: activeChat,\n    toggleCollapse1: toggleCollapse1,\n    isOpen1: isOpen1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), activeChat.jid.includes(\"@conference.\") && /*#__PURE__*/React.createElement(MembersOnSidebar, {\n    isAdmin: isAdmin,\n    isOpen2: isOpen2,\n    defaultAvatar: defaultAvatar,\n    toggleCollapse2: toggleCollapse2,\n    membersArrayPreventingDuplicateDisplayMember: membersArrayPreventingDuplicateDisplayMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FavoritedMessages, {\n    isOpen3: isOpen3,\n    toggleCollapse3: toggleCollapse3,\n    membersArrayPreventingDuplicateDisplayMember: membersArrayPreventingDuplicateDisplayMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AttachedFilesOnSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ChatProfileSidebar;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatProfileSidebar.tsx"],"names":["React","useEffect","useState","Button","SimpleBar","useChat","AttachedFilesOnSidebar","ReactImageFallback","defaultAvatar","onImgError","useGroup","useContact","useAuth","useModal","ModalAddMember","Input","UserStatusOnProfileSidebar","ChangeGroupNameButton","LeaveGroupButton","InfoHeadOnSidebar","MembersOnSidebar","FavoritedMessages","ChatProfileSidebar","show","setShow","isOpen1","setIsOpen1","isOpen2","setIsOpen2","isOpen3","setIsOpen3","flagToLoadFavoriteMessages","setFlagToLoadFavoriteMessages","newGroupName","setGroupName","user","activeChat","chats","setChats","setActiveChat","groups","setGroups","contacts","setContacts","setShowModalAddMember","toggleCollapse1","toggleCollapse2","closeUserSidebar","getAttachedFiles","attachedFileList","undefined","closeUserSidebarOnActiveChatChange","actualMember","members","find","member","userId","id","isAdmin","role","actualMembers","map","mb","isGroup","groupId","membersArrayPreventingDuplicateDisplayMember","filter","item","index","arrayCompleto","findIndex","item2","display","justifyContent","profilePicture","name","trim","charAt","jid","includes","min","style","textAlign","e","target","value","length","status","maxHeight","toggleCollapse3"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport AttachedFilesOnSidebar from \"./AttachedFilesOnSidebar\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport ModalAddMember from \"./ModalAddMember\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\r\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\r\nimport LeaveGroupButton from './LeaveGroupButton';\r\nimport InfoHeadOnSidebar from './InfoHeadOnSidebar';\r\nimport MembersOnSidebar from './MembersOnSidebar';\r\nimport FavoritedMessages from \"./FavoritedMessages\";\r\ninterface IProps {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n}\r\nconst ChatProfileSidebar: React.FC<IProps> = ({ show, setShow }) => {\r\n  const [isOpen1, setIsOpen1] = useState(false);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const [isOpen3, setIsOpen3] = useState(false);\r\n  const {flagToLoadFavoriteMessages, setFlagToLoadFavoriteMessages} = useChat();\r\n  const [newGroupName, setGroupName] = useState(\"\");\r\n  const { user } = useAuth();\r\n  const {\r\n    activeChat,\r\n    chats,\r\n    setChats,\r\n    setActiveChat,\r\n  } = useChat();\r\n  const {\r\n    groups,\r\n    setGroups,\r\n  } = useGroup();\r\n  const {\r\n    contacts,\r\n    setContacts,\r\n  } = useContact();\r\n  const { setShowModalAddMember } = useModal();\r\n  const toggleCollapse1 = () => {\r\n      setIsOpen1(!isOpen1);\r\n      setIsOpen2(false);\r\n  };\r\n  const toggleCollapse2 = () => {\r\n    setIsOpen1(false);\r\n    setIsOpen2(!isOpen2);\r\n  };\r\n  /* const toggleCollapse3 = (payload: ListFavoriteMessagesPayload) => {\r\n    setIsOpen1(false); \r\n    setIsOpen2(false);\r\n    setIsOpen3(!isOpen3);\r\n    if(flagToLoadFavoriteMessages === undefined || false){\r\n      setFlagToLoadFavoriteMessages(payload);\r\n    };\r\n  }; */\r\n  const closeUserSidebar = () => {\r\n    setShow(false);\r\n  };\r\n  const getAttachedFiles = () => {\r\n    if (show && activeChat.attachedFileList === undefined) {\r\n      setActiveChat({ ...activeChat, attachedFileList: [] });\r\n    } else if (!show) {\r\n      setActiveChat({ ...activeChat, attachedFileList: undefined });\r\n    }\r\n  };\r\n  useEffect(getAttachedFiles, [show]);\r\n  const closeUserSidebarOnActiveChatChange = () => {\r\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\r\n  };\r\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\r\n  const actualMember = activeChat.members?.find(\r\n    (member) => member.userId === user.id\r\n  );\r\n  const isAdmin = actualMember?.role === \"admin\";\r\n  //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\r\n  const actualMembers = activeChat.members?.map((mb) => {\r\n    return mb.userId;\r\n  });\r\n  const isGroup = activeChat.groupId;\r\n  const membersArrayPreventingDuplicateDisplayMember = activeChat.members?.filter(\r\n  (item,index,arrayCompleto) => \r\n  arrayCompleto.findIndex(item2 => \r\n  (item.userId === item2.userId)) === index);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{ display: show ? \"block\" : \"none\" }}\r\n        className=\"user-profile-sidebar \"\r\n      >\r\n        <div className=\"d-flex\" style={{ justifyContent: \"center\" }}>\r\n          {isGroup && isAdmin && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  className=\"nav-btn\"\r\n                  onClick={() => setShowModalAddMember(true)}\r\n                >\r\n                  <i className=\"ri-user-add-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <ModalAddMember />\r\n          {isGroup && (\r\n            <LeaveGroupButton activeChat={activeChat} actualMember={actualMember}/>\r\n          )}\r\n          {isGroup && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  onClick={closeUserSidebar}\r\n                  className=\"nav-btn\"\r\n                  id=\"user-profile-hide\"\r\n                >\r\n                  <i className=\"ri-close-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"text-center p-4 border-bottom\">\r\n          <div className=\"mb-4 d-flex justify-content-center\">\r\n            {!activeChat.profilePicture ? (\r\n              <div className=\"avatar-lg\">\r\n                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\">\r\n                  {activeChat.name.trim().charAt(0)}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <ReactImageFallback\r\n                src={activeChat.profilePicture}\r\n                onError={() => {\r\n                  if (activeChat.jid.includes(\"@conference.\"))\r\n                    onImgError(\r\n                      chats,\r\n                      groups,\r\n                      contacts,\r\n                      setChats,\r\n                      setGroups,\r\n                      setContacts,\r\n                      activeChat\r\n                    );\r\n                }}\r\n                fallbackImage={defaultAvatar}\r\n                className=\"rounded-circle avatar-lg img-thumbnail\"\r\n                alt=\"chatvia\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            {isGroup ? (\r\n              <Input\r\n                inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                placeholder={activeChat.name}\r\n                disableUnderline\r\n                fullWidth\r\n                onChange={(e) => setGroupName(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{activeChat.name}</div>\r\n            )}\r\n          </div>\r\n          {isGroup && newGroupName.length > 0 ? (\r\n            <ChangeGroupNameButton newGroupName={newGroupName} setGroupName={setGroupName} actualMembers={actualMembers}/>\r\n          ) : (\r\n            isGroup && <i className=\"ri-edit-line\"></i>\r\n          )}\r\n          {activeChat.status && (\r\n            <UserStatusOnProfileSidebar/>\r\n          )}\r\n        </div>\r\n        <SimpleBar\r\n          style={{ maxHeight: \"100%\" }}\r\n          className=\"p-4 user-profile-desc\"\r\n        >\r\n          <div id=\"profile-user-accordion\" className=\"custom-accordion\">\r\n            <InfoHeadOnSidebar activeChat={activeChat} toggleCollapse1={toggleCollapse1} isOpen1={isOpen1} />\r\n            {activeChat.jid.includes(\"@conference.\") && (\r\n              <MembersOnSidebar isAdmin={isAdmin} \r\n              isOpen2={isOpen2} \r\n              defaultAvatar={defaultAvatar} \r\n              toggleCollapse2={toggleCollapse2} \r\n              membersArrayPreventingDuplicateDisplayMember={membersArrayPreventingDuplicateDisplayMember}/>\r\n            )}\r\n            <FavoritedMessages\r\n              isOpen3={isOpen3} \r\n              toggleCollapse3={toggleCollapse3} \r\n              membersArrayPreventingDuplicateDisplayMember={membersArrayPreventingDuplicateDisplayMember}/>\r\n            <AttachedFilesOnSidebar />\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatProfileSidebar;"]},"metadata":{},"sourceType":"module"}