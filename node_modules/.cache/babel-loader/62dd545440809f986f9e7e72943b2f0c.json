{"ast":null,"code":"export default class UserBusiness {\n  constructor(api, settings) {\n    this.api = api;\n    this.settings = settings;\n  }\n\n  get(callback) {\n    if (this.user) {\n      callback(this.user);\n      return;\n    }\n\n    if (!this.api) return;\n    this.api.getUserInfo(user => {\n      this.settings.get(settings => {\n        this.user = {\n          id: settings.xmppUser,\n          jid: `${settings.xmppUser}@${settings.xmppDomain}`,\n          name: (user === null || user === void 0 ? void 0 : user.name) || \"\",\n          email: (user === null || user === void 0 ? void 0 : user.email) || \"\",\n          profilePicture: settings.imageUrl,\n          number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\"),\n          status: \"online\"\n        };\n        callback(this.user);\n      });\n    });\n  }\n\n  changeUserData(user, callback) {\n    this.api.setDataUser({\n      name: user.name,\n      email: user.email\n    }, callback);\n  }\n\n  changePassword(user, callback) {\n    this.api.setNewPassword({\n      oldPassword: user.oldPassword,\n      newPassword: user.newPassword\n    }, callback);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/User.ts"],"names":["UserBusiness","constructor","api","settings","get","callback","user","getUserInfo","id","xmppUser","jid","xmppDomain","name","email","profilePicture","imageUrl","number","sipUser","replace","status","changeUserData","setDataUser","changePassword","setNewPassword","oldPassword","newPassword"],"mappings":"AAeA,eAAe,MAAMA,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAASC,GAAT,EAA2BC,QAA3B,EAAuD;AAAA,SAA9CD,GAA8C,GAA9CA,GAA8C;AAAA,SAA5BC,QAA4B,GAA5BA,QAA4B;AAAE;;AACpEC,EAAAA,GAAG,CAACC,QAAD,EAA4B;AAC7B,QAAI,KAAKC,IAAT,EAAe;AACbD,MAAAA,QAAQ,CAAC,KAAKC,IAAN,CAAR;AACA;AACD;;AACD,QAAI,CAAC,KAAKJ,GAAV,EAAe;AACf,SAAKA,GAAL,CAASK,WAAT,CAAsBD,IAAD,IAAU;AAC7B,WAAKH,QAAL,CAAcC,GAAd,CAAmBD,QAAD,IAAc;AAC9B,aAAKG,IAAL,GAAY;AACVE,UAAAA,EAAE,EAAEL,QAAQ,CAACM,QADH;AAEVC,UAAAA,GAAG,EAAG,GAAEP,QAAQ,CAACM,QAAS,IAAGN,QAAQ,CAACQ,UAAW,EAFvC;AAGVC,UAAAA,IAAI,EAAE,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,IAAN,KAAc,EAHV;AAIVC,UAAAA,KAAK,EAAE,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,KAAN,KAAe,EAJZ;AAKVC,UAAAA,cAAc,EAAEX,QAAQ,CAACY,QALf;AAMVC,UAAAA,MAAM,EAAEb,QAAQ,CAACc,OAAT,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CANE;AAOVC,UAAAA,MAAM,EAAE;AAPE,SAAZ;AASAd,QAAAA,QAAQ,CAAC,KAAKC,IAAN,CAAR;AACD,OAXD;AAYD,KAbD;AAcD;;AACDc,EAAAA,cAAc,CAACd,IAAD,EAAyBD,QAAzB,EAA2D;AACvE,SAAKH,GAAL,CAASmB,WAAT,CACE;AACET,MAAAA,IAAI,EAAEN,IAAI,CAACM,IADb;AAEEC,MAAAA,KAAK,EAAEP,IAAI,CAACO;AAFd,KADF,EAKER,QALF;AAOD;;AACDiB,EAAAA,cAAc,CACZhB,IADY,EAEZD,QAFY,EAGZ;AACA,SAAKH,GAAL,CAASqB,cAAT,CACE;AACEC,MAAAA,WAAW,EAAElB,IAAI,CAACkB,WADpB;AAEEC,MAAAA,WAAW,EAAEnB,IAAI,CAACmB;AAFpB,KADF,EAKEpB,QALF;AAOD;;AA3C+B","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IUser from \"../../alias/IUser\";\r\nimport IChangedUserData from \"../../alias/IChangedUserData\";\r\nimport SettingsBusiness from \"./Settings\";\r\nimport { UserDataChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport { UserPasswordChangeCallback } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport IUserPasswordChange from \"./../../alias/IUserPasswordChange\";\r\n\r\ninterface GetUserCallBack {\r\n  (user: IUser): void;\r\n}\r\nexport default interface UserBusiness {\r\n  user: IUser | undefined;\r\n}\r\n\r\nexport default class UserBusiness {\r\n  constructor(private api: API, private settings: SettingsBusiness) {}\r\n  get(callback: GetUserCallBack) {\r\n    if (this.user) {\r\n      callback(this.user);\r\n      return;\r\n    }\r\n    if (!this.api) return;\r\n    this.api.getUserInfo((user) => {\r\n      this.settings.get((settings) => {\r\n        this.user = {\r\n          id: settings.xmppUser,\r\n          jid: `${settings.xmppUser}@${settings.xmppDomain}`,\r\n          name: user?.name || \"\",\r\n          email: user?.email || \"\",\r\n          profilePicture: settings.imageUrl,\r\n          number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\"),\r\n          status: \"online\",\r\n        };\r\n        callback(this.user);\r\n      });\r\n    });\r\n  }\r\n  changeUserData(user: IChangedUserData, callback: UserDataChangeCallback) {\r\n    this.api.setDataUser(\r\n      {\r\n        name: user.name,\r\n        email: user.email,\r\n      },\r\n      callback\r\n    );\r\n  }\r\n  changePassword(\r\n    user: IUserPasswordChange,\r\n    callback: UserPasswordChangeCallback\r\n  ) {\r\n    this.api.setNewPassword(\r\n      {\r\n        oldPassword: user.oldPassword,\r\n        newPassword: user.newPassword,\r\n      },\r\n      callback\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}