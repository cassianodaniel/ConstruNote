{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input,Alert}from\"reactstrap\";//simple bar\nimport SimpleBar from\"simplebar-react\";//components\nimport SelectContact from\"./SelectContact\";import{useTranslation}from\"react-i18next\";import{useGroup}from\"../contexts/GroupContext\";import{useContact}from\"../contexts/ContactContext\";export var ModalNewGroup=function ModalNewGroup(_ref){var show=_ref.show,toggle=_ref.toggle;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useContact=useContact(),contacts=_useContact.contacts;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenAlert=_useState2[0],setIsOpenAlert=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),groupName=_useState8[0],setGroupName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),groupDescription=_useState10[0],setGroupDescription=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),selectedContact=_useState12[0],setSelectedContact=_useState12[1];var _useGroup=useGroup(),setGroupToCreate=_useGroup.setGroupToCreate;var handleCreateGroup=function handleCreateGroup(){console.log(JSON.stringify(selectedContact));setGroupToCreate({contacts:selectedContact,description:groupDescription,name:groupName});setIsOpenAlert(true);setMessage(\"Criando grupo...\");setTimeout(function(){setIsOpenAlert(false);setMessage(\"\");},2000);setSearch(\"\");};var handleCheckContact=function handleCheckContact(selected,contact){if(selected){var _selected=selectedContact;_selected.push(contact);setSelectedContact(_selected);}else{setSelectedContact(selectedContact.filter(function(sel){if(sel.id===contact.id){return false;}return true;}));}};return/*#__PURE__*/React.createElement(Modal,{isOpen:show,centered:true,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{tag:\"h5\",className:\"modal-title font-size-16\",toggle:toggle},t(\"Create group\")),/*#__PURE__*/React.createElement(ModalBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"addgroupname-input\"},t(\"Group Name\")),/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control\",id:\"addgroupname-input\",value:groupName,onChange:function onChange(e){return setGroupName(e.target.value);},placeholder:t(\"Group Name\")})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,null,t(\"Group Members\")),/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control mb-2\",id:\"addgroupname-input\",value:search,onChange:function onChange(e){return setSearch(e.target.value);},placeholder:t(\"Search users..\")}),/*#__PURE__*/React.createElement(\"div\",{className:\"border\"},/*#__PURE__*/React.createElement(SimpleBar,{style:{height:\"250px\"}},/*#__PURE__*/React.createElement(\"div\",{id:\"addContacts\"},/*#__PURE__*/React.createElement(SelectContact,{contacts:contacts,handleCheckContact:handleCheckContact,search:search}))))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"addgroupdescription-input\"},t(\"Description\")),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",id:\"addgroupdescription-input\",value:groupDescription,onChange:function onChange(e){return setGroupDescription(e.target.value);},rows:3,placeholder:t(\"Description\")}))),/*#__PURE__*/React.createElement(Alert,{isOpen:isOpenAlert,color:\"danger\"},message)),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",onClick:toggle},t(\"Close\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:handleCreateGroup},t(\"Create group\"))));};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalNewGroup.tsx"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","Alert","SimpleBar","SelectContact","useTranslation","useGroup","useContact","ModalNewGroup","show","toggle","t","contacts","isOpenAlert","setIsOpenAlert","search","setSearch","message","setMessage","groupName","setGroupName","groupDescription","setGroupDescription","selectedContact","setSelectedContact","setGroupToCreate","handleCreateGroup","console","log","JSON","stringify","description","name","setTimeout","handleCheckContact","selected","contact","push","filter","sel","id","e","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\n//simple bar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//components\r\nimport SelectContact from \"./SelectContact\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nexport const ModalNewGroup: React.FC<IProps> = ({ show, toggle }) => {\r\n  const { t } = useTranslation();\r\n  const { contacts } = useContact();\r\n\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [groupDescription, setGroupDescription] = useState(\"\");\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n  const { setGroupToCreate } = useGroup();\r\n\r\n  const handleCreateGroup = () => {\r\n    console.log(JSON.stringify(selectedContact));\r\n    setGroupToCreate({\r\n      contacts: selectedContact,\r\n      description: groupDescription,\r\n      name: groupName,\r\n    });\r\n\r\n    setIsOpenAlert(true);\r\n    setMessage(\"Criando grupo...\");\r\n\r\n    setTimeout(() => {\r\n      setIsOpenAlert(false);\r\n      setMessage(\"\");\r\n    }, 2000);\r\n\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      let selected = selectedContact;\r\n      selected.push(contact);\r\n      setSelectedContact(selected);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.id === contact.id) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={show} centered toggle={toggle}>\r\n      <ModalHeader\r\n        tag=\"h5\"\r\n        className=\"modal-title font-size-16\"\r\n        toggle={toggle}\r\n      >\r\n        {t(\"Create group\")}\r\n      </ModalHeader>\r\n      <ModalBody className=\"p-4\">\r\n        <Form>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label htmlFor=\"addgroupname-input\">{t(\"Group Name\")}</Label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"addgroupname-input\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder={t(\"Group Name\")}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label>{t(\"Group Members\")}</Label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <div className=\"border\">\r\n              <SimpleBar style={{ height: \"250px\" }}>\r\n                <div id=\"addContacts\">\r\n                  <SelectContact\r\n                    contacts={contacts}\r\n                    handleCheckContact={handleCheckContact}\r\n                    search={search}\r\n                    \r\n                  />\r\n                </div>\r\n              </SimpleBar>\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"addgroupdescription-input\">\r\n              {t(\"Description\")}\r\n            </Label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"addgroupdescription-input\"\r\n              value={groupDescription}\r\n              onChange={(e) => setGroupDescription(e.target.value)}\r\n              rows={3}\r\n              placeholder={t(\"Description\")}\r\n            ></textarea>\r\n          </FormGroup>\r\n        </Form>\r\n        <Alert isOpen={isOpenAlert} color=\"danger\">\r\n          {message}\r\n        </Alert>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button type=\"button\" color=\"link\" onClick={toggle}>\r\n          {t(\"Close\")}\r\n        </Button>\r\n        <Button type=\"button\" color=\"primary\" onClick={handleCreateGroup}>\r\n          {t(\"Create group\")}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}