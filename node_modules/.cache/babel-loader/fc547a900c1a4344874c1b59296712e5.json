{"ast":null,"code":"import React from\"react\";import{Input,Label}from\"reactstrap\";import{SearchContact}from\"../helpers/SearchContact\";import sortContactGroup from\"../helpers/SortContactGroup\";var SelectContact=function SelectContact(_ref){var search=_ref.search,contacts=_ref.contacts,handleCheckContact=_ref.handleCheckContact,checkedContacts=_ref.checkedContacts;return/*#__PURE__*/React.createElement(\"div\",{className:\"mt-2\"},sortContactGroup(SearchContact(contacts,search?search:\"\")).map(function(contact,key){return/*#__PURE__*/React.createElement(\"div\",{key:key},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-3 pl-1 font-weight-bold text-primary\"},contact.group),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled contact-list mb-2\"},contact.children.map(function(child){return/*#__PURE__*/React.createElement(\"li\",{key:child.id},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",className:\"custom-control-input\",onChange:function onChange(e){handleCheckContact(e.target.checked,child);},id:\"memberCheck\"+child.id,checked:checkedContacts.find(function(item){return item.id===child.id;})?true:false}),/*#__PURE__*/React.createElement(Label,{className:\"custom-control-label\",htmlFor:\"memberCheck\"+child.id},child.name)));})));}));};export default SelectContact;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SelectContact.tsx"],"names":["React","Input","Label","SearchContact","sortContactGroup","SelectContact","search","contacts","handleCheckContact","checkedContacts","map","contact","key","group","children","child","id","e","target","checked","find","item","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,YAA7B,CAEA,OAASC,aAAT,KAA8B,0BAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CASA,GAAMC,CAAAA,aAA+B,CAAG,QAAlCA,CAAAA,aAAkC,MAKlC,IAJJC,CAAAA,MAII,MAJJA,MAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,kBAEI,MAFJA,kBAEI,CADJC,eACI,MADJA,eACI,CACJ,mBACE,2BAAK,SAAS,CAAC,MAAf,EACCL,gBAAgB,CAAED,aAAa,CAACI,QAAD,CAAWD,MAAM,CAAGA,MAAH,CAAY,EAA7B,CAAf,CAAhB,CAAkEI,GAAlE,CACG,SAACC,OAAD,CAAUC,GAAV,qBACE,2BAAK,GAAG,CAAEA,GAAV,eACE,2BAAK,SAAS,CAAC,yCAAf,EACGD,OAAO,CAACE,KADX,CADF,cAKE,0BAAI,SAAS,CAAC,iCAAd,EACGF,OAAO,CAACG,QAAR,CAAiBJ,GAAjB,CAAqB,SAAEK,KAAF,qBACpB,0BAAI,GAAG,CAAEA,KAAK,CAACC,EAAf,eACE,2BAAK,SAAS,CAAC,gCAAf,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,sBAFZ,CAGE,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACfT,kBAAkB,CAACS,CAAC,CAACC,MAAF,CAASC,OAAV,CAAmBJ,KAAnB,CAAlB,CACD,CALH,CAME,EAAE,CAAE,cAAgBA,KAAK,CAACC,EAN5B,CAOE,OAAO,CAAGP,eAAe,CAACW,IAAhB,CAAqB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,EAAL,GAAYD,KAAK,CAACC,EAA5B,EAArB,EAAuD,IAAvD,CAA8D,KAP1E,EADF,cAUE,oBAAC,KAAD,EACE,SAAS,CAAC,sBADZ,CAEE,OAAO,CAAE,cAAgBD,KAAK,CAACC,EAFjC,EAIGD,KAAK,CAACO,IAJT,CAVF,CADF,CADoB,EAArB,CADH,CALF,CADF,EADH,CADD,CADF,CAqCD,CA3CD,CA6CA,cAAejB,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Input, Label } from \"reactstrap\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { SearchContact } from \"../helpers/SearchContact\";\r\nimport sortContactGroup from \"../helpers/SortContactGroup\";\r\n\r\ninterface IProps {\r\n  search?: string;\r\n  contacts: IContact[];\r\n  handleCheckContact(selected: boolean, contact: IContact): void;\r\n  checkedContacts: IContact[];\r\n}\r\n\r\nconst SelectContact: React.FC<IProps> = ({\r\n  search,\r\n  contacts,\r\n  handleCheckContact,\r\n  checkedContacts\r\n}) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n    {sortContactGroup((SearchContact(contacts, search ? search : \"\"))).map(\r\n        (contact, key) => (\r\n          <div key={key}>\r\n            <div className=\"ml-3 pl-1 font-weight-bold text-primary\">\r\n              {contact.group}\r\n            </div>\r\n\r\n            <ul className=\"list-unstyled contact-list mb-2\">\r\n              {contact.children.map(( child ) => (\r\n                <li key={child.id}>\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) => {\r\n                        handleCheckContact(e.target.checked, child);\r\n                      }}\r\n                      id={\"memberCheck\" + child.id}\r\n                      checked={ checkedContacts.find((item) => item.id === child.id) ? true : false }\r\n                    />\r\n                    <Label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor={\"memberCheck\" + child.id}\r\n                    >\r\n                      {child.name}\r\n                    </Label>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectContact;\r\n"]},"metadata":{},"sourceType":"module"}