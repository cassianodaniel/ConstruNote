{"ast":null,"code":"import Zone from \"../zone.js\";\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\n\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n\n    this.zoneName = zoneName;\n  }\n  /** @override **/\n\n\n  get type() {\n    return \"invalid\";\n  }\n  /** @override **/\n\n\n  get name() {\n    return this.zoneName;\n  }\n  /** @override **/\n\n\n  get universal() {\n    return false;\n  }\n  /** @override **/\n\n\n  offsetName() {\n    return null;\n  }\n  /** @override **/\n\n\n  formatOffset() {\n    return \"\";\n  }\n  /** @override **/\n\n\n  offset() {\n    return NaN;\n  }\n  /** @override **/\n\n\n  equals() {\n    return false;\n  }\n  /** @override **/\n\n\n  get isValid() {\n    return false;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/luxon/src/zones/invalidZone.js"],"names":["Zone","InvalidZone","constructor","zoneName","type","name","universal","offsetName","formatOffset","offset","NaN","equals","isValid"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA;;;;;AAIA,eAAe,MAAMC,WAAN,SAA0BD,IAA1B,CAA+B;AAC5CE,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB;AACA;;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACD;AAED;;;AACA,MAAIC,IAAJ,GAAW;AACT,WAAO,SAAP;AACD;AAED;;;AACA,MAAIC,IAAJ,GAAW;AACT,WAAO,KAAKF,QAAZ;AACD;AAED;;;AACA,MAAIG,SAAJ,GAAgB;AACd,WAAO,KAAP;AACD;AAED;;;AACAC,EAAAA,UAAU,GAAG;AACX,WAAO,IAAP;AACD;AAED;;;AACAC,EAAAA,YAAY,GAAG;AACb,WAAO,EAAP;AACD;AAED;;;AACAC,EAAAA,MAAM,GAAG;AACP,WAAOC,GAAP;AACD;AAED;;;AACAC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAP;AACD;AAED;;;AACA,MAAIC,OAAJ,GAAc;AACZ,WAAO,KAAP;AACD;;AA7C2C","sourcesContent":["import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get universal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}