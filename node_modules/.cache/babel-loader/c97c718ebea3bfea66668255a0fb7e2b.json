{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import hark from\"hark\";export var Video=function Video(_ref){var audioId=_ref.audioId,videoId=_ref.videoId,speakerId=_ref.speakerId,stream=_ref.stream,speakerVolume=_ref.speakerVolume,speaking=_ref.speaking,modalOpen=_ref.modalOpen,setStream=_ref.setStream,setSpeakerVolume=_ref.setSpeakerVolume,setSpeaking=_ref.setSpeaking;var _useState=useState(),_useState2=_slicedToArray(_useState,2),speechEvents=_useState2[0],setSpeechEvents=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),usedVideo=_useState4[0],setUsedVideo=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),usedAudio=_useState6[0],setUsedAudio=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),usedSpeaker=_useState8[0],setUsedSpeaker=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),videoEl=_useState10[0],setVideoEl=_useState10[1];var startStream=function startStream(idVideo,idAudio,speakerId){try{if(stream){stream.getTracks().forEach(function(track){track.stop();});}var videoTag=videoEl;if(!videoTag){videoTag=document.querySelector(\"video.video\");}var constraints={audio:{deviceId:idAudio?{exact:idAudio}:undefined},video:{deviceId:idVideo?{exact:idVideo}:undefined,width:{min:1280,max:1920},height:{min:720,max:1080}}};navigator.mediaDevices.getUserMedia(constraints).then(function(stream){setStream(stream);setUsedVideo(videoId);setUsedAudio(audioId);setUsedSpeaker(speakerId);if(videoTag){// const streamConstraints = {\n//     width: { min: 640, ideal: 1280, max: 1920 },\n//     height: { min: 400, ideal: 720, max: 1080 },\n// }\n// const track = stream.getVideoTracks()[0];\n// track.applyConstraints(streamConstraints);\nvar harkOptions={};var speech=hark(stream,harkOptions);if(speechEvents){speechEvents.stop();}setSpeechEvents(speech);speech.on(\"speaking\",function(){setSpeaking(true);});speech.on(\"stopped_speaking\",function(){setSpeaking(false);});speech.on(\"volume_change\",function(volume){setSpeakerVolume(volume);});videoTag.srcObject=stream;if(typeof videoTag.setSinkId==\"function\")videoTag.setSinkId(speakerId).then(function(_){return console.log(\"Speaker Changed to - \"+speakerId);}).catch(function(_){return console.log(\"error\");});}});}catch(e){console.log(e);}};var unMount=function unMount(){return function(){if(!modalOpen){if(stream){stream.getTracks().forEach(function(track){track.stop();});}if(speechEvents){speechEvents.stop();}}};};var init=function init(){if(!stream){var el=document.querySelector(\"#deviceConfigTag\");if(el&&!videoEl){setVideoEl(el);startStream(videoId,audioId,speakerId);}}};var update=function update(){if(videoId!==usedVideo||audioId!==usedAudio||speakerId!==usedSpeaker){if(stream){stream.getTracks().forEach(function(track){track.stop();});}startStream(videoId,audioId,speakerId);}};useEffect(unMount,[modalOpen]);useEffect(init,[]);useEffect(update,[videoId,audioId,speakerId]);return/*#__PURE__*/React.createElement(\"video\",{style:{maxWidth:\"498px\"},id:\"deviceConfigTag\",className:\"video\",autoPlay:true,playsInline:true,muted:true});};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/Video.tsx"],"names":["React","useEffect","useState","hark","Video","audioId","videoId","speakerId","stream","speakerVolume","speaking","modalOpen","setStream","setSpeakerVolume","setSpeaking","speechEvents","setSpeechEvents","usedVideo","setUsedVideo","usedAudio","setUsedAudio","usedSpeaker","setUsedSpeaker","videoEl","setVideoEl","startStream","idVideo","idAudio","getTracks","forEach","track","stop","videoTag","document","querySelector","constraints","audio","deviceId","exact","undefined","video","width","min","max","height","navigator","mediaDevices","getUserMedia","then","harkOptions","speech","on","volume","srcObject","setSinkId","_","console","log","catch","e","unMount","init","el","update","maxWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport hark from \"hark\";\r\nexport interface Video {\r\n  audioId: string | undefined;\r\n  videoId: string | undefined;\r\n  speakerId: string | undefined;\r\n  speakerVolume: number | undefined;\r\n  speaking: boolean | undefined;\r\n  stream: MediaStream | undefined;\r\n  setStream(val: MediaStream | undefined): void;\r\n  modalOpen: boolean;\r\n  setSpeakerVolume(val: number): void;\r\n  setSpeaking(val: boolean): void;\r\n}\r\nexport const Video: React.FC<Video> = ({\r\n  audioId,\r\n  videoId,\r\n  speakerId,\r\n  stream,\r\n  speakerVolume,\r\n  speaking,\r\n  modalOpen,\r\n  setStream,\r\n  setSpeakerVolume,\r\n  setSpeaking,\r\n}) => {\r\n  const [speechEvents, setSpeechEvents] = useState<hark.Harker>();\r\n  const [usedVideo, setUsedVideo] = useState<string>();\r\n  const [usedAudio, setUsedAudio] = useState<string>();\r\n  const [usedSpeaker, setUsedSpeaker] = useState<string>();\r\n  const [videoEl, setVideoEl] = useState<HTMLVideoElement>();\r\n  const startStream = (\r\n    idVideo: string | undefined,\r\n    idAudio: string | undefined,\r\n    speakerId: string | undefined\r\n  ) => {\r\n    try {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => {\r\n          track.stop();\r\n        });\r\n      }\r\n      let videoTag: any = videoEl;\r\n      if (!videoTag) {\r\n        videoTag = document.querySelector(\"video.video\") as HTMLVideoElement;\r\n      }\r\n      const constraints = {\r\n        audio: { deviceId: idAudio ? { exact: idAudio } : undefined },\r\n        video: {\r\n          deviceId: idVideo ? { exact: idVideo } : undefined,\r\n          width: { min: 1280, max: 1920 },\r\n          height: { min: 720, max: 1080 },\r\n        },\r\n      };\r\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        setStream(stream);\r\n        setUsedVideo(videoId);\r\n        setUsedAudio(audioId);\r\n        setUsedSpeaker(speakerId);\r\n        if (videoTag) {\r\n          // const streamConstraints = {\r\n          //     width: { min: 640, ideal: 1280, max: 1920 },\r\n          //     height: { min: 400, ideal: 720, max: 1080 },\r\n          // }\r\n          // const track = stream.getVideoTracks()[0];\r\n          // track.applyConstraints(streamConstraints);\r\n\r\n          const harkOptions = {};\r\n          const speech = hark(stream, harkOptions);\r\n          if (speechEvents) {\r\n            speechEvents.stop();\r\n          }\r\n          setSpeechEvents(speech);\r\n          speech.on(\"speaking\", () => {\r\n            setSpeaking(true);\r\n          });\r\n\r\n          speech.on(\"stopped_speaking\", () => {\r\n            setSpeaking(false);\r\n          });\r\n\r\n          speech.on(\"volume_change\", (volume) => {\r\n            setSpeakerVolume(volume);\r\n          });\r\n\r\n          videoTag.srcObject = stream;\r\n          if (typeof videoTag.setSinkId == \"function\")\r\n            videoTag\r\n              .setSinkId(speakerId)\r\n              .then((_: any) =>\r\n                console.log(\"Speaker Changed to - \" + speakerId)\r\n              )\r\n              .catch((_: any) => console.log(\"error\"));\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const unMount = () => {\r\n    return () => {\r\n      if (!modalOpen) {\r\n        if (stream) {\r\n          stream.getTracks().forEach((track) => {\r\n            track.stop();\r\n          });\r\n        }\r\n        if (speechEvents) {\r\n          speechEvents.stop();\r\n        }\r\n      }\r\n    };\r\n  };\r\n  const init = () => {\r\n    if (!stream) {\r\n      const el = document.querySelector(\"#deviceConfigTag\") as HTMLVideoElement;\r\n      if (el && !videoEl) {\r\n        setVideoEl(el);\r\n        startStream(videoId, audioId, speakerId);\r\n      }\r\n    }\r\n  };\r\n  const update = () => {\r\n    if (\r\n      videoId !== usedVideo ||\r\n      audioId !== usedAudio ||\r\n      speakerId !== usedSpeaker\r\n    ) {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => {\r\n          track.stop();\r\n        });\r\n      }\r\n      startStream(videoId, audioId, speakerId);\r\n    }\r\n  };\r\n  useEffect(unMount, [modalOpen]);\r\n  useEffect(init, []);\r\n  useEffect(update, [videoId, audioId, speakerId]);\r\n  return (\r\n    <video\r\n      style={{ maxWidth: \"498px\" }}\r\n      id=\"deviceConfigTag\"\r\n      className=\"video\"\r\n      autoPlay\r\n      playsInline\r\n      muted\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}