{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\DathApp\\\\ConstruNote\\\\src\\\\components\\\\ImageMessage.tsx\";\nimport React, { useState } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport { Link } from \"react-router-dom\";\n\nconst ImageMessage = ({\n  url\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"null\");\n\n  const toggleLightbox = currentImage => {\n    setIsOpen(!isOpen);\n    setCurrentImage(currentImage);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => toggleLightbox(url),\n    className: \"popup-img d-inline-block m-1\",\n    title: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"200px\",\n      height: \"150px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"url\",\n    src: url,\n    style: {\n      maxWidth: \"200px\",\n      maxHeight: \"150px\",\n      scale: 1.2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: currentImage,\n    onCloseRequest: toggleLightbox,\n    imageTitle: \"Image File\",\n    enableZoom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ImageMessage;","map":{"version":3,"sources":["C:/Users/Digivox/dev/DathApp/ConstruNote/src/components/ImageMessage.tsx"],"names":["React","useState","Lightbox","Link","ImageMessage","url","isOpen","setIsOpen","currentImage","setCurrentImage","toggleLightbox","width","height","display","justifyContent","alignItems","maxWidth","maxHeight","scale"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAMA,MAAMC,YAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMS,cAAmB,GAAIF,YAAD,IAAuB;AACjDD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAHD;;AAIA,sBACE,uDACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,OAAO,EAAE,MAAME,cAAc,CAACL,GAAD,CAF/B;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAIE,IAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,cAAc,EAAE,QAJX;AAKLC,MAAAA,UAAU,EAAE;AALP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AACE,IAAA,GAAG,EAAC,KADN;AAEE,IAAA,GAAG,EAAEV,GAFP;AAGE,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,SAAS,EAAE,OAAhC;AAAyCC,MAAAA,KAAK,EAAE;AAAhD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CANF,CADF,EAuBGZ,MAAM,iBACL,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEE,YADX;AAEE,IAAA,cAAc,EAAEE,cAFlB;AAGE,IAAA,UAAU,EAAC,YAHb;AAIE,IAAA,UAAU,EAAE,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADF;AAkCD,CAzCD;;AA2CA,eAAeN,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  url: string;\r\n}\r\n\r\nconst ImageMessage: React.FC<IProps> = ({ url }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"#\"\r\n        onClick={() => toggleLightbox(url)}\r\n        className=\"popup-img d-inline-block m-1\"\r\n        title=\"title\"\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"150px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            alt=\"url\"\r\n            src={url}\r\n            style={{ maxWidth: \"200px\", maxHeight: \"150px\", scale: 1.2 }}\r\n          />\r\n        </div>\r\n      </Link>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={currentImage}\r\n          onCloseRequest={toggleLightbox}\r\n          imageTitle=\"Image File\"\r\n          enableZoom={true}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageMessage;\r\n"]},"metadata":{},"sourceType":"module"}