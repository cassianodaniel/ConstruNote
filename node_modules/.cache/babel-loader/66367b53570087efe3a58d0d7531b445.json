{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatMessageText.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport VideoMessage from \"./VideoMessage\";\nimport ImageMessage from \"./ImageMessage\";\nimport AudioMessage from \"./AudioMessage\";\nimport FileMessage from \"./FileMessage\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../assets/css/link-message-text.css\";\nimport Linkify from \"react-linkify\";\n\nconst ChatMessageText = ({\n  message\n}) => {\n  const [show, setShow] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const toggle = () => setShow(!show);\n\n  useEffect(() => {\n    setShow(false);\n  }, [message]);\n  var smallerMessage = \"\";\n  var biggerMessage = \"\";\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\n\n  if (message.message) {\n    if (message.message.length > MAXNUMBERTODISPLAYMESSAGE && !message.isFileMessage && !message.isImageMessage && !message.isAudioMessage && !message.isVideoMessage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"receivedmessage\",\n        className: \"mb-0\",\n        style: {\n          wordBreak: \"break-word\",\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Linkify, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, !show ? (smallerMessage = message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE)) && smallerMessage : null, show ? (biggerMessage = message.message.slice(MAXNUMBERTODISPLAYMESSAGE, MAXNUMBEROFCHARACTERSONAMESSAGE)) && message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) + biggerMessage : null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"hover\",\n        id: \"more-msg\",\n        style: {\n          border: 0,\n          background: 0\n        },\n        onClick: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, !show ? \".. \" + t(\"Ler mais\") : null)));\n    }\n\n    if (message.message.length <= 164 || message.isFileMessage || message.isImageMessage || message.isAudioMessage || message.isVideoMessage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-0\",\n        id: \"receivedmessage\",\n        style: {\n          wordBreak: \"break-word\",\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, message.isAudioMessage && /*#__PURE__*/React.createElement(AudioMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 38\n        }\n      }), message.isFileMessage && /*#__PURE__*/React.createElement(FileMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }\n      }), message.isVideoMessage && /*#__PURE__*/React.createElement(VideoMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 38\n        }\n      }), message.isImageMessage && /*#__PURE__*/React.createElement(ImageMessage, {\n        url: message.fileUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }\n      }), !message.isAudioMessage && !message.isFileMessage && !message.isVideoMessage && !message.isImageMessage && /*#__PURE__*/React.createElement(Linkify, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, message.message ? message.message.toString().split(\"\\n\").map((msg, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: msg + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 40\n        }\n      }, msg)) : null));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default ChatMessageText;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageText.tsx"],"names":["React","useState","useEffect","VideoMessage","ImageMessage","AudioMessage","FileMessage","useTranslation","Linkify","ChatMessageText","message","show","setShow","t","toggle","smallerMessage","biggerMessage","MAXNUMBEROFCHARACTERSONAMESSAGE","MAXNUMBERTODISPLAYMESSAGE","length","isFileMessage","isImageMessage","isAudioMessage","isVideoMessage","wordBreak","textAlign","slice","border","background","fileUrl","toString","split","map","msg","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport IMessage from \"../alias/IMessage\";\r\n\r\nimport VideoMessage from \"./VideoMessage\";\r\nimport ImageMessage from \"./ImageMessage\";\r\nimport AudioMessage from \"./AudioMessage\";\r\nimport FileMessage from \"./FileMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./../assets/css/link-message-text.css\";\r\n\r\nimport Linkify from \"react-linkify\";\r\n\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\n\r\nconst ChatMessageText: React.FC<IProps> = ({ message }) => {\r\n  const [show, setShow] = useState(false);  \r\n  const { t } = useTranslation();\r\n  const toggle = () => setShow(!show);\r\n\r\n  useEffect(() => {\r\n    setShow(false);\r\n  }, [message]);\r\n\r\n  var smallerMessage = \"\";\r\n  var biggerMessage = \"\";\r\n  const MAXNUMBEROFCHARACTERSONAMESSAGE = 10000;\r\n  const MAXNUMBERTODISPLAYMESSAGE = 165;\r\n\r\n  if (message.message) {\r\n    if (\r\n      message.message.length > MAXNUMBERTODISPLAYMESSAGE &&\r\n      !message.isFileMessage &&\r\n      !message.isImageMessage &&\r\n      !message.isAudioMessage &&\r\n      !message.isVideoMessage\r\n    ) {\r\n      return (\r\n        <div\r\n          id=\"receivedmessage\"\r\n          className=\"mb-0\"\r\n          style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n        >\r\n          <Linkify>\r\n            {!show\r\n              ? (smallerMessage = message.message.slice(\r\n                  0,\r\n                  MAXNUMBERTODISPLAYMESSAGE\r\n                )) && smallerMessage\r\n              : null}\r\n            {show\r\n              ? (biggerMessage = message.message.slice(\r\n                  MAXNUMBERTODISPLAYMESSAGE,\r\n                  MAXNUMBEROFCHARACTERSONAMESSAGE\r\n                )) &&\r\n                message.message.slice(0, MAXNUMBERTODISPLAYMESSAGE) +\r\n                  biggerMessage\r\n              : null}\r\n\r\n            <button\r\n              className=\"hover\"\r\n              id=\"more-msg\"\r\n              style={{\r\n                border: 0,\r\n                background: 0,\r\n              }}\r\n              onClick={toggle}\r\n            >\r\n              {!show ? \".. \" + t(\"Ler mais\") : null}\r\n            </button>\r\n          </Linkify>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (\r\n      message.message.length <= 164 ||\r\n      message.isFileMessage ||\r\n      message.isImageMessage ||\r\n      message.isAudioMessage ||\r\n      message.isVideoMessage\r\n    ) {\r\n      return (\r\n        <div\r\n          className=\"mb-0\"\r\n          id=\"receivedmessage\"\r\n          style={{ wordBreak: \"break-word\", textAlign: \"justify\" }}\r\n        >\r\n          {message.isAudioMessage && <AudioMessage url={message.fileUrl} />}\r\n          {message.isFileMessage && <FileMessage url={message.fileUrl} />}\r\n          {message.isVideoMessage && <VideoMessage url={message.fileUrl} />}\r\n          {message.isImageMessage && <ImageMessage url={message.fileUrl} />}\r\n          {!message.isAudioMessage &&\r\n            !message.isFileMessage &&\r\n            !message.isVideoMessage &&\r\n            !message.isImageMessage && (\r\n              <Linkify>\r\n                {message.message\r\n                  ? message.message\r\n                      .toString()\r\n                      .split(\"\\n\")\r\n                      .map((msg, i) => <div key={msg + i}>{msg}</div>)\r\n                  : null}\r\n              </Linkify>\r\n            )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default ChatMessageText;\r\n"]},"metadata":{},"sourceType":"module"}