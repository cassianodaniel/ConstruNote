{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ModalManageGroup.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, CardBody, Button, ModalFooter } from \"reactstrap\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleBar from \"simplebar-react\";\nimport { useContact } from \"./../contexts/ContactContext\";\nimport SelectContactGroup from \"./SelectContactGroup\";\n\nconst ModalManageGroup = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const {\n    setToggleAddingContacts,\n    setCheckedContacts\n  } = useContact();\n  const {\n    showModalManageGroup,\n    setShowModalManageGroup\n  } = useModal();\n\n  const toggle = () => {\n    if (showModalManageGroup) {\n      setShowModalManageGroup(!showModalManageGroup);\n    }\n  };\n\n  const handleCheckContact = (selected, contact) => {\n    if (selected) {\n      let selected = selectedContact;\n      selected.push(contact);\n      setSelectedContact(selected);\n    } else {\n      setSelectedContact(selectedContact.filter(sel => {\n        if (sel.jid === contact.jid) {\n          return false;\n        }\n\n        return true;\n      }));\n    }\n  };\n\n  const inputSearch = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      var _inputSearch$current;\n\n      return (_inputSearch$current = inputSearch.current) === null || _inputSearch$current === void 0 ? void 0 : _inputSearch$current.focus();\n    }, 500);\n  }, [showModalManageGroup]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    backdrop: \"static\",\n    isOpen: !!showModalManageGroup,\n    centered: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, t(\"Add Contacts\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-2 pb-3 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputSearch,\n    type: \"text\",\n    className: \"form-control mb-3\",\n    id: \"addgroupname-input\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: t(\"Search users..\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectContactGroup, {\n    handleCheckContact: handleCheckContact,\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    onClick: () => {\n      setCheckedContacts([]);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, t(\"Close\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      toggle();\n      setToggleAddingContacts(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, t(\"Add Contacts\"))))));\n};\n\nexport default ModalManageGroup;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ModalManageGroup.tsx"],"names":["React","useEffect","useRef","useState","Modal","ModalHeader","ModalBody","CardBody","Button","ModalFooter","useModal","useTranslation","SimpleBar","useContact","SelectContactGroup","ModalManageGroup","search","setSearch","selectedContact","setSelectedContact","t","setToggleAddingContacts","setCheckedContacts","showModalManageGroup","setShowModalManageGroup","toggle","handleCheckContact","selected","contact","push","filter","sel","jid","inputSearch","setTimeout","current","focus","e","target","value","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,WANF,QAOO,YAPP;AASA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAa,EAAb,CAAtD;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAM;AACJU,IAAAA,uBADI;AAEJC,IAAAA;AAFI,MAGFT,UAAU,EAHd;AAKA,QAAM;AAAEU,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAoDd,QAAQ,EAAlE;;AAEA,QAAMe,MAAM,GAAG,MAAM;AACnB,QAAIF,oBAAJ,EAA0B;AACxBC,MAAAA,uBAAuB,CAAC,CAACD,oBAAF,CAAvB;AACD;AACF,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAoBC,OAApB,KAA0C;AACnE,QAAID,QAAJ,EAAc;AACZ,UAAIA,QAAQ,GAAGT,eAAf;AACAS,MAAAA,QAAQ,CAACE,IAAT,CAAcD,OAAd;AACAT,MAAAA,kBAAkB,CAACQ,QAAD,CAAlB;AACD,KAJD,MAIO;AACLR,MAAAA,kBAAkB,CAChBD,eAAe,CAACY,MAAhB,CAAwBC,GAAD,IAAS;AAC9B,YAAIA,GAAG,CAACC,GAAJ,KAAYJ,OAAO,CAACI,GAAxB,EAA6B;AAC3B,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OALD,CADgB,CAAlB;AAQD;AACF,GAfD;;AAiBA,QAAMC,WAAW,GAAG/B,MAAM,CAAmB,IAAnB,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,UAAU,CAAC;AAAA;;AAAA,qCAAMD,WAAW,CAACE,OAAlB,yDAAM,qBAAqBC,KAArB,EAAN;AAAA,KAAD,EAAqC,GAArC,CAAV;AACD,GAFQ,EAEN,CAACb,oBAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,MAAM,EAAE,CAAC,CAACA,oBAFZ;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,MAAM,EAAEE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,CAAC,CAAC,cAAD,CAA/B,CANF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEa,WADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,mBAHZ;AAIE,IAAA,EAAE,EAAC,oBAJL;AAKE,IAAA,KAAK,EAAEjB,MALT;AAME,IAAA,QAAQ,EAAGqB,CAAD,IAAOpB,SAAS,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAN5B;AAOE,IAAA,WAAW,EAAEnB,CAAC,CAAC,gBAAD,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,kBAAkB,EAAEd,kBADtB;AAEE,IAAA,MAAM,EAAEV,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF,eAmBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbM,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAG,MAAAA,MAAM;AACP,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,CAAC,CAAC,OAAD,CAPJ,CADF,eAUE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,MAAM;AACNJ,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,CAAC,CAAC,cAAD,CAPJ,CAVF,CAnBF,CADF,CAPF,CADF;AAoDD,CA9FD;;AAgGA,eAAeL,gBAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardBody,\r\n  Button,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\nimport SelectContactGroup from \"./SelectContactGroup\";\r\n\r\nconst ModalManageGroup: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [selectedContact, setSelectedContact] = useState<IContact[]>([]);\r\n\r\n  const { t } = useTranslation();\r\n  const {\r\n    setToggleAddingContacts,\r\n    setCheckedContacts,\r\n  } = useContact();\r\n\r\n  const { showModalManageGroup, setShowModalManageGroup } = useModal();\r\n\r\n  const toggle = () => {\r\n    if (showModalManageGroup) {\r\n      setShowModalManageGroup(!showModalManageGroup);\r\n    }\r\n  };\r\n\r\n  const handleCheckContact = (selected: boolean, contact: IContact) => {\r\n    if (selected) {\r\n      let selected = selectedContact;\r\n      selected.push(contact);\r\n      setSelectedContact(selected);\r\n    } else {\r\n      setSelectedContact(\r\n        selectedContact.filter((sel) => {\r\n          if (sel.jid === contact.jid) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => inputSearch.current?.focus(), 500);\r\n  }, [showModalManageGroup]);\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      isOpen={!!showModalManageGroup}\r\n      centered\r\n      toggle={toggle}\r\n    >\r\n      <ModalHeader toggle={toggle}>{t(\"Add Contacts\")}</ModalHeader>\r\n      <ModalBody>\r\n        <CardBody className=\"p-2 border\">\r\n          <div className=\"pt-2 pb-3 border-bottom\">\r\n            <input\r\n              ref={inputSearch}\r\n              type=\"text\"\r\n              className=\"form-control mb-3\"\r\n              id=\"addgroupname-input\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder={t(\"Search users..\")}\r\n            />\r\n            <hr />\r\n            <SimpleBar style={{ height: \"500px\" }}>\r\n              <SelectContactGroup\r\n                handleCheckContact={handleCheckContact}\r\n                search={search}\r\n              />\r\n            </SimpleBar>\r\n          </div>\r\n          <ModalFooter className=\"border-0\">\r\n            <Button\r\n              color=\"default\"\r\n              onClick={() => {\r\n                setCheckedContacts([]);\r\n                toggle();\r\n              }}\r\n            >\r\n              {t(\"Close\")}\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                toggle();\r\n                setToggleAddingContacts(true);\r\n              }}\r\n            >\r\n              {t(\"Add Contacts\")}\r\n            </Button>\r\n          </ModalFooter>\r\n        </CardBody>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalManageGroup;\r\n"]},"metadata":{},"sourceType":"module"}