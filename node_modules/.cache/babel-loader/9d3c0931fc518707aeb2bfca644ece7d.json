{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyParticipantLinkButtonInActiveCall.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport { useTranslation } from 'react-i18next';\nimport Swal from 'sweetalert2';\n\nconst CopyParticipantLinkButtonInActiveCall = ({\n  participantLink,\n  buttonIcon\n}) => {\n  const {\n    copy\n  } = useCopy(participantLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      Swal.fire({\n        position: \"top-start\",\n        icon: \"success\",\n        title: t(\"Copied to clipboard a participant invite!\"),\n        showConfirmButton: false,\n        timer: 1500,\n        customClass: {\n          popup: \"swal-mini-popup\"\n        },\n        backdrop: false\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"black\",\n      backgroundColor: \"white\",\n      borderRadius: 4\n    },\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default CopyParticipantLinkButtonInActiveCall;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyParticipantLinkButtonInActiveCall.tsx"],"names":["React","Button","useCopy","useTranslation","Swal","CopyParticipantLinkButtonInActiveCall","participantLink","buttonIcon","copy","t","fire","position","icon","title","showConfirmButton","timer","customClass","popup","backdrop","color","backgroundColor","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAOA,MAAMC,qCAAwF,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAChI,QAAM;AAAEC,IAAAA;AAAF,MAAWN,OAAO,CAACI,eAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACA,sBACI,uDACI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACfK,MAAAA,IAAI;AACJJ,MAAAA,IAAI,CAACM,IAAL,CAAU;AACNC,QAAAA,QAAQ,EAAE,WADJ;AAENC,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,KAAK,EAAEJ,CAAC,CAAC,2CAAD,CAHF;AAINK,QAAAA,iBAAiB,EAAE,KAJb;AAKNC,QAAAA,KAAK,EAAE,IALD;AAMNC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE;AADI,SANP;AASNC,QAAAA,QAAQ,EAAE;AATJ,OAAV;AAWC,KAhBD;AAiBA,IAAA,SAAS,EAAC,2BAjBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAmBA;AACA,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,eAAe,EAAE,OAFd;AAGHC,MAAAA,YAAY,EAAE;AAHX,KADP;AAMA,IAAA,SAAS,EAAEd,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBA,CADJ,CADJ;AA+BH,CAlCD;;AAoCA,eAAeF,qCAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface ICopyParticipantLinkButtonInActiveCall{\r\n    participantLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\nconst CopyParticipantLinkButtonInActiveCall : React.FC<ICopyParticipantLinkButtonInActiveCall> = ({participantLink, buttonIcon}) => {\r\n    const { copy } = useCopy(participantLink);\r\n    const { t } = useTranslation();\r\n    return(\r\n        <>\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n            copy();\r\n            Swal.fire({\r\n                position: \"top-start\",\r\n                icon: \"success\",\r\n                title: t(\"Copied to clipboard a participant invite!\"),\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                customClass: {\r\n                  popup: \"swal-mini-popup\",\r\n                },\r\n                backdrop: false\r\n            });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            >\r\n            <i \r\n            style={{\r\n                color: \"black\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: 4,\r\n            }}\r\n            className={buttonIcon}></i>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CopyParticipantLinkButtonInActiveCall;"]},"metadata":{},"sourceType":"module"}