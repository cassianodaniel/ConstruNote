{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\CopyParticipantLinkButton.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useCopy from \"@react-hook/copy\";\nimport { useTranslation } from 'react-i18next';\n\nconst CopyParticipantLinkButton = ({\n  participantLink,\n  buttonIcon\n}) => {\n  const CloseButton = closeToast => /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    onClick: closeToast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Ok\");\n\n  const {\n    copy\n  } = useCopy(participantLink);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n    closeButton: CloseButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"none\",\n    onClick: () => {\n      copy();\n      toast.success(t('Copied to clipboard a participant invite!'), {\n        position: \"top-center\",\n        autoClose: 1700,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        progress: undefined\n      });\n    },\n    className: \"nav-btn user-profile-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CopyParticipantLinkButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/CopyParticipantLinkButton.tsx"],"names":["React","Button","ToastContainer","toast","useCopy","useTranslation","CopyParticipantLinkButton","participantLink","buttonIcon","CloseButton","closeToast","copy","t","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAQA,MAAMC,yBAAgE,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AACxG,QAAMC,WAAW,GAAKC,UAAF,iBAChB;AACA,IAAA,SAAS,EAAC,gBADV;AAEA,IAAA,OAAO,EAAEA,UAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAQA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,OAAO,CAACG,eAAD,CAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,sBACI,uDACI,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEI,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,OAAO,EAAE,MAAM;AACXE,MAAAA,IAAI;AACJR,MAAAA,KAAK,CAACU,OAAN,CAAcD,CAAC,CAAC,2CAAD,CAAf,EAA8D;AAC9DE,QAAAA,QAAQ,EAAE,YADoD;AAE9DC,QAAAA,SAAS,EAAE,IAFmD;AAG9DC,QAAAA,eAAe,EAAE,IAH6C;AAI9DC,QAAAA,YAAY,EAAE,IAJgD;AAK9DC,QAAAA,YAAY,EAAE,IALgD;AAM9DC,QAAAA,QAAQ,EAAEC;AANoD,OAA9D;AAQH,KAbD;AAcA,IAAA,SAAS,EAAC,2BAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBI;AAAG,IAAA,SAAS,EAAEZ,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAFJ,CADJ;AAuBH,CAlCD;;AAoCA,eAAeF,yBAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ICopyParticipantLinkButton{\r\n    participantLink: string,\r\n    buttonIcon: string\r\n}\r\n\r\n\r\nconst CopyParticipantLinkButton : React.FC<ICopyParticipantLinkButton> = ({participantLink, buttonIcon}) => {\r\n    const CloseButton = ( closeToast: any ) => (\r\n        <i\r\n        className=\"material-icons\"\r\n        onClick={closeToast}\r\n        >\r\n            Ok\r\n        </i>\r\n    );\r\n    const { copy } = useCopy(participantLink);\r\n    const { t } = useTranslation();\r\n    return(\r\n        <>\r\n            <ToastContainer closeButton={CloseButton} />\r\n            <Button\r\n            type=\"button\"\r\n            color=\"none\"\r\n            onClick={() => {\r\n                copy();\r\n                toast.success(t('Copied to clipboard a participant invite!'), {\r\n                position: \"top-center\",\r\n                autoClose: 1700,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                progress: undefined,\r\n                });\r\n            }}\r\n            className=\"nav-btn user-profile-show\"\r\n            >\r\n                <i className={buttonIcon}></i>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CopyParticipantLinkButton;"]},"metadata":{},"sourceType":"module"}