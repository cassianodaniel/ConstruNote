{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatProfileSidebar.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Media, Badge } from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport CustomCollapse from \"./CustomCollapse\";\nimport { useTranslation } from \"react-i18next\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport AttachedFilesTab from \"./AttachedFilesTab\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport Swal from \"sweetalert2\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useModal } from \"./../contexts/ModalContext\";\nimport ModalAddMember from \"./ModalAddMember\";\nimport { Input } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\nimport LeaveGroupButton from './LeaveGroupButton';\n\nconst ChatProfileSidebar = ({\n  show,\n  setShow\n}) => {\n  var _activeChat$members, _activeChat$members2, _activeChat$members3, _activeChat$members4;\n\n  const {\n    user\n  } = useAuth();\n  const {\n    activeChat,\n    chats,\n    setChats,\n    setActiveChat,\n    openChat,\n    setShowChat\n  } = useChat();\n  const [targetStorage, setTargetStorage] = useState(\"\");\n  const {\n    groups,\n    setGroups,\n    setMemberQuit,\n    setGroupIdOfLeaveRequest,\n    setRemovedMember,\n    setGroupToRemoveContact,\n    setToggleMemberRole,\n    setChangeGroupData\n  } = useGroup();\n  const {\n    contacts,\n    setContacts,\n    setClickedContact,\n    openContact,\n    contactsOutsideUserContacts\n  } = useContact();\n  const {\n    setShowModalAddMember\n  } = useModal();\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const toggleCollapse1 = () => {\n    setIsOpen1(!isOpen1);\n    setIsOpen2(false);\n  };\n\n  const toggleCollapse2 = () => {\n    setIsOpen1(false);\n    setIsOpen2(!isOpen2);\n  };\n\n  const closeUserSidebar = () => {\n    setShow(false);\n  };\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setShowChat(true);\n  };\n\n  const getAttachedFiles = () => {\n    if (show && activeChat.attachedFileList === undefined) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: []\n      });\n    } else if (!show) {\n      setActiveChat({ ...activeChat,\n        attachedFileList: undefined\n      });\n    }\n  };\n\n  useEffect(getAttachedFiles, [show]);\n\n  const closeUserSidebarOnActiveChatChange = () => {\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\n  };\n\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\n  const actualMember = (_activeChat$members = activeChat.members) === null || _activeChat$members === void 0 ? void 0 : _activeChat$members.find(member => member.userId === user.id);\n  const isAdmin = (actualMember === null || actualMember === void 0 ? void 0 : actualMember.role) === \"admin\"; //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\n\n  const actualMembers = (_activeChat$members2 = activeChat.members) === null || _activeChat$members2 === void 0 ? void 0 : _activeChat$members2.map(mb => {\n    return mb.userId;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: show ? \"block\" : \"none\"\n    },\n    className: \"user-profile-sidebar \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, activeChat.groupId && isAdmin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    className: \"nav-btn\",\n    onClick: () => setShowModalAddMember(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-user-add-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(ModalAddMember, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), activeChat.groupId && /*#__PURE__*/React.createElement(LeaveGroupButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), activeChat.groupId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 px-lg-4 pt-3 pt-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-nav text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    type: \"button\",\n    onClick: closeUserSidebar,\n    className: \"nav-btn\",\n    id: \"user-profile-hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center p-4 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, !activeChat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, activeChat.name.trim().charAt(0))) : /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: activeChat.profilePicture,\n    onError: () => {\n      if (activeChat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, activeChat);\n    },\n    fallbackImage: defaultAvatar,\n    className: \"rounded-circle avatar-lg img-thumbnail\",\n    alt: \"chatvia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, activeChat.groupId ? /*#__PURE__*/React.createElement(Input, {\n    inputProps: {\n      min: 0,\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    placeholder: activeChat.name,\n    disableUnderline: true,\n    fullWidth: true,\n    onChange: e => setTargetStorage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, activeChat.name)), activeChat.groupId && targetStorage.length > 0 ? /*#__PURE__*/React.createElement(ChangeGroupNameButton, {\n    targetStorage: targetStorage,\n    setTargetStorage: setTargetStorage,\n    actualMembers: actualMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }) : activeChat.groupId && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-edit-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 35\n    }\n  }), activeChat.status && /*#__PURE__*/React.createElement(UserStatusOnProfileSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"p-4 user-profile-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-user-accordion\",\n    className: \"custom-accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-none border mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomCollapse, {\n    title: \"About\",\n    iconClass: \"ri-user-2-line\",\n    isOpen: isOpen1,\n    toggleCollapse: toggleCollapse1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, activeChat.groupId ? \"Group name:\" : t(\"Name:\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, activeChat.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, activeChat.userDescription === undefined && !activeChat.groupId ? t(\"Hey! I'm on Squad!\") : activeChat.userDescription)), activeChat.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, t(\"Email\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, activeChat.email)), activeChat.department && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, t(\"Department\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, activeChat.department)))), activeChat.jid.includes(\"@conference.\") && /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-1 shadow-none border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomCollapse, {\n    title: `Members (${(_activeChat$members3 = activeChat.members) === null || _activeChat$members3 === void 0 ? void 0 : _activeChat$members3.filter((cadaMembroDoArrayInicial, indexInicial, arrayInicial) => arrayInicial.findIndex(membroAComparar => cadaMembroDoArrayInicial.userId === membroAComparar.userId) === indexInicial).length})`,\n    iconClass: \"ri-group-line\",\n    isOpen: isOpen2,\n    toggleCollapse: toggleCollapse2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, (_activeChat$members4 = activeChat.members) === null || _activeChat$members4 === void 0 ? void 0 : _activeChat$members4.filter((item, index, arrayCompleto) => arrayCompleto.findIndex(item2 => item.userId === item2.userId) === index).map(member => /*#__PURE__*/React.createElement(Card, {\n    key: member.userId,\n    className: \"p-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: member.profilePicture,\n    className: \"rounded-circle avatar-xs mr-2\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      chats.forEach(cht => {\n        if (cht.id === member.userId) {\n          openChatAction(cht);\n          contacts.forEach(ctc => {\n            if (ctc.id === member.userId) {\n              setClickedContact(ctc);\n            }\n          });\n        } else {\n          contactsOutsideUserContacts.forEach(ctcOut => {\n            if (ctcOut.id === member.userId) {\n              openContact(ctcOut);\n              setClickedContact(ctcOut);\n            }\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 31\n    }\n  }, member.name), isAdmin && user.id !== member.userId && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => Swal.fire({\n      title: t(\"Remove\") + \" \" + member.name + \"?\",\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\")\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire(member.name + \" \" + t(\"has been removed!\"), \"\", \"success\");\n        setRemovedMember(member);\n        setGroupToRemoveContact(activeChat.groupId);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 35\n    }\n  })), member.role === \"admin\" ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"danger\",\n    className: \"badge-soft-danger float-right\",\n    onClick: () => isAdmin && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"a member?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      padding: \"5%\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire(member.name + \" \" + t(\"is now a member!\"), \"\", \"success\");\n      }\n\n      setToggleMemberRole({\n        mbId: member.userId,\n        gpId: activeChat.groupId ? activeChat.groupId : \"\",\n        mbRole: member.role,\n        mb: member\n      });\n    }),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, t(\"Admin\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    className: \"badge-soft-success float-right\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => isAdmin && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\")\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire(member.name + \" \" + t(\"is now an administrator!\"), \"\", \"success\");\n        setToggleMemberRole({\n          mbId: member.userId,\n          gpId: activeChat.groupId ? activeChat.groupId : \"\",\n          mbRole: member.role,\n          mb: member\n        });\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, t(\"Member\")))))))))), /*#__PURE__*/React.createElement(AttachedFilesTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ChatProfileSidebar;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatProfileSidebar.tsx"],"names":["React","useEffect","useState","Button","Card","Media","Badge","SimpleBar","CustomCollapse","useTranslation","useChat","AttachedFilesTab","ReactImageFallback","Swal","defaultAvatar","onImgError","useGroup","useContact","useAuth","useModal","ModalAddMember","Input","Link","UserStatusOnProfileSidebar","ChangeGroupNameButton","LeaveGroupButton","ChatProfileSidebar","show","setShow","user","activeChat","chats","setChats","setActiveChat","openChat","setShowChat","targetStorage","setTargetStorage","groups","setGroups","setMemberQuit","setGroupIdOfLeaveRequest","setRemovedMember","setGroupToRemoveContact","setToggleMemberRole","setChangeGroupData","contacts","setContacts","setClickedContact","openContact","contactsOutsideUserContacts","setShowModalAddMember","isOpen1","setIsOpen1","isOpen2","setIsOpen2","t","toggleCollapse1","toggleCollapse2","closeUserSidebar","openChatAction","chat","getAttachedFiles","attachedFileList","undefined","closeUserSidebarOnActiveChatChange","actualMember","members","find","member","userId","id","isAdmin","role","actualMembers","map","mb","display","justifyContent","groupId","profilePicture","name","trim","charAt","jid","includes","min","style","textAlign","e","target","value","length","status","maxHeight","userDescription","email","department","filter","cadaMembroDoArrayInicial","indexInicial","arrayInicial","findIndex","membroAComparar","item","index","arrayCompleto","item2","forEach","cht","ctc","ctcOut","cursor","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","padding","mbId","gpId","mbRole"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Media, Badge } from \"reactstrap\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport CustomCollapse from \"./CustomCollapse\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport AttachedFilesTab from \"./AttachedFilesTab\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport Swal from \"sweetalert2\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useModal } from \"./../contexts/ModalContext\";\r\nimport ModalAddMember from \"./ModalAddMember\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IChat from \"../alias/IChat\";\r\nimport UserStatusOnProfileSidebar from \"./UserStatusOnProfileSidebar\";\r\nimport ChangeGroupNameButton from \"./ChangeGroupNameButton\";\r\nimport LeaveGroupButton from './LeaveGroupButton';\r\ninterface IPros {\r\n  show: boolean;\r\n  setShow(value: boolean): void;\r\n}\r\n\r\nconst ChatProfileSidebar: React.FC<IPros> = ({ show, setShow }) => {\r\n  const { user } = useAuth();\r\n  const {\r\n    activeChat,\r\n    chats,\r\n    setChats,\r\n    setActiveChat,\r\n    openChat,\r\n    setShowChat,\r\n  } = useChat();\r\n  const [targetStorage, setTargetStorage] = useState(\"\");\r\n  const {\r\n    groups,\r\n    setGroups,\r\n    setMemberQuit,\r\n    setGroupIdOfLeaveRequest,\r\n    setRemovedMember,\r\n    setGroupToRemoveContact,\r\n    setToggleMemberRole,\r\n    setChangeGroupData,\r\n  } = useGroup();\r\n  const {\r\n    contacts,\r\n    setContacts,\r\n    setClickedContact,\r\n    openContact,\r\n    contactsOutsideUserContacts,\r\n  } = useContact();\r\n  const { setShowModalAddMember } = useModal();\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const { t } = useTranslation();\r\n  const toggleCollapse1 = () => {\r\n    setIsOpen1(!isOpen1);\r\n    setIsOpen2(false);\r\n  };\r\n  const toggleCollapse2 = () => {\r\n    setIsOpen1(false);\r\n    setIsOpen2(!isOpen2);\r\n  };\r\n  const closeUserSidebar = () => {\r\n    setShow(false);\r\n  };\r\n  const openChatAction = (chat: IChat) => {\r\n    openChat(chat);\r\n    setShowChat(true);\r\n  };\r\n  const getAttachedFiles = () => {\r\n    if (show && activeChat.attachedFileList === undefined) {\r\n      setActiveChat({ ...activeChat, attachedFileList: [] });\r\n    } else if (!show) {\r\n      setActiveChat({ ...activeChat, attachedFileList: undefined });\r\n    }\r\n  };\r\n  useEffect(getAttachedFiles, [show]);\r\n  const closeUserSidebarOnActiveChatChange = () => {\r\n    if (show && activeChat.attachedFileList === undefined) closeUserSidebar();\r\n  };\r\n  useEffect(closeUserSidebarOnActiveChatChange, [activeChat]);\r\n  const actualMember = activeChat.members?.find(\r\n    (member) => member.userId === user.id\r\n  );\r\n  const isAdmin = actualMember?.role === \"admin\";\r\n  //const groupAdmins = activeChat.members?.filter((member) => member.role === \"admin\");\r\n  const actualMembers = activeChat.members?.map((mb) => {\r\n    return mb.userId;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{ display: show ? \"block\" : \"none\" }}\r\n        className=\"user-profile-sidebar \"\r\n      >\r\n        <div className=\"d-flex\" style={{ justifyContent: \"center\" }}>\r\n          {activeChat.groupId && isAdmin && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  className=\"nav-btn\"\r\n                  onClick={() => setShowModalAddMember(true)}\r\n                >\r\n                  <i className=\"ri-user-add-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <ModalAddMember />\r\n\r\n          {activeChat.groupId && (\r\n            <LeaveGroupButton/>\r\n          )}\r\n\r\n          {activeChat.groupId && (\r\n            <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n              <div className=\"user-chat-nav text-right\">\r\n                <Button\r\n                  color=\"none\"\r\n                  type=\"button\"\r\n                  onClick={closeUserSidebar}\r\n                  className=\"nav-btn\"\r\n                  id=\"user-profile-hide\"\r\n                >\r\n                  <i className=\"ri-close-line\"></i>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"text-center p-4 border-bottom\">\r\n          <div className=\"mb-4 d-flex justify-content-center\">\r\n            {!activeChat.profilePicture ? (\r\n              <div className=\"avatar-lg\">\r\n                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\">\r\n                  {activeChat.name.trim().charAt(0)}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <ReactImageFallback\r\n                src={activeChat.profilePicture}\r\n                onError={() => {\r\n                  if (activeChat.jid.includes(\"@conference.\"))\r\n                    onImgError(\r\n                      chats,\r\n                      groups,\r\n                      contacts,\r\n                      setChats,\r\n                      setGroups,\r\n                      setContacts,\r\n                      activeChat\r\n                    );\r\n                }}\r\n                fallbackImage={defaultAvatar}\r\n                className=\"rounded-circle avatar-lg img-thumbnail\"\r\n                alt=\"chatvia\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            {activeChat.groupId ? (\r\n              <Input\r\n                inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                placeholder={activeChat.name}\r\n                disableUnderline\r\n                fullWidth\r\n                onChange={(e) => setTargetStorage(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{activeChat.name}</div>\r\n            )}\r\n          </div>\r\n          \r\n          {activeChat.groupId && targetStorage.length > 0 ? (\r\n            <ChangeGroupNameButton targetStorage={targetStorage} setTargetStorage={setTargetStorage} actualMembers={actualMembers}/>\r\n          ) : (\r\n            activeChat.groupId && <i className=\"ri-edit-line\"></i>\r\n          )}\r\n\r\n          {activeChat.status && (\r\n            <UserStatusOnProfileSidebar/>\r\n          )}\r\n\r\n        </div>\r\n        <SimpleBar\r\n          style={{ maxHeight: \"100%\" }}\r\n          className=\"p-4 user-profile-desc\"\r\n        >\r\n          <div id=\"profile-user-accordion\" className=\"custom-accordion\">\r\n            <Card className=\"shadow-none border mb-2\">\r\n              <CustomCollapse\r\n                title=\"About\"\r\n                iconClass=\"ri-user-2-line\"\r\n                isOpen={isOpen1}\r\n                toggleCollapse={toggleCollapse1}\r\n              >\r\n                <div>\r\n                  <p className=\"text-muted mb-1\">\r\n                    {activeChat.groupId ? \"Group name:\" : t(\"Name:\")}\r\n                  </p>\r\n                  <h5 className=\"font-size-14\">{activeChat.name}</h5>\r\n                </div>\r\n\r\n                <div className=\"text-muted\">\r\n                  <p className=\"mb-4\">\r\n                    {activeChat.userDescription === undefined &&\r\n                    !activeChat.groupId\r\n                      ? t(\"Hey! I'm on Squad!\")\r\n                      : activeChat.userDescription}\r\n                  </p>\r\n                </div>\r\n                {activeChat.email && (\r\n                  <div className=\"mt-4\">\r\n                    <p className=\"text-muted mb-1\">{t(\"Email\")}</p>\r\n                    <h5 className=\"font-size-14\">{activeChat.email}</h5>\r\n                  </div>\r\n                )}\r\n                {activeChat.department && (\r\n                  <div className=\"mt-4\">\r\n                    <p className=\"text-muted mb-1\">{t(\"Department\")}</p>\r\n                    <h5 className=\"font-size-14 mb-0\">\r\n                      {activeChat.department}\r\n                    </h5>\r\n                  </div>\r\n                )}\r\n              </CustomCollapse>\r\n            </Card>\r\n\r\n            {activeChat.jid.includes(\"@conference.\") && (\r\n              <Card className=\"mb-1 shadow-none border\">\r\n                <CustomCollapse\r\n                  title={`Members (${activeChat.members?.filter((cadaMembroDoArrayInicial,indexInicial,arrayInicial) => arrayInicial.findIndex(membroAComparar => (cadaMembroDoArrayInicial.userId === membroAComparar.userId)) === indexInicial).length})`}\r\n                  iconClass=\"ri-group-line\"\r\n                  isOpen={isOpen2}\r\n                  toggleCollapse={toggleCollapse2}\r\n                >\r\n                  {activeChat.members?.filter((item,index,arrayCompleto) => arrayCompleto.findIndex(item2 => (item.userId === item2.userId)) === index).map((member) => (\r\n                    <Card key={member.userId} className=\"p-2 mb-2\">\r\n                      <Media className=\"align-items-center\">\r\n                        <ReactImageFallback\r\n                          src={member.profilePicture}\r\n                          className=\"rounded-circle avatar-xs mr-2\"\r\n                          alt=\"chatvia\"\r\n                          fallbackImage={defaultAvatar}\r\n                        />\r\n                        <Media body>\r\n                          <div className=\"text-left\">\r\n                            <h5 className=\"font-size-14 mb-1\">\r\n                              <Link\r\n                                to=\"#\"\r\n                                onClick={() => {\r\n                                  chats.forEach((cht) => {\r\n                                    if (cht.id === member.userId) {\r\n                                      openChatAction(cht);\r\n                                      contacts.forEach((ctc) => {\r\n                                        if (ctc.id === member.userId) {\r\n                                          setClickedContact(ctc);\r\n                                        }\r\n                                      });\r\n                                    } else {\r\n                                      contactsOutsideUserContacts.forEach(\r\n                                        (ctcOut) => {\r\n                                          if (ctcOut.id === member.userId) {\r\n                                            openContact(ctcOut);\r\n                                            setClickedContact(ctcOut);\r\n                                          }\r\n                                        }\r\n                                      );\r\n                                    }\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {member.name}\r\n                              </Link>\r\n\r\n                              {isAdmin && user.id !== member.userId && (\r\n                                <span\r\n                                  className=\"float-right ml-2\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() =>\r\n                                    Swal.fire({\r\n                                      title:\r\n                                        t(\"Remove\") + \" \" + member.name + \"?\",\r\n                                      text: \"\",\r\n                                      icon: \"warning\",\r\n                                      showCancelButton: true,\r\n                                      confirmButtonColor: \"#4e5e96\",\r\n                                      cancelButtonColor: \"#d33\",\r\n                                      cancelButtonText: t(\"No\"),\r\n                                      confirmButtonText: t(\"Yes\"),\r\n                                    }).then((result) => {\r\n                                      if (result.isConfirmed) {\r\n                                        Swal.fire(\r\n                                          member.name +\r\n                                            \" \" +\r\n                                            t(\"has been removed!\"),\r\n                                          \"\",\r\n                                          \"success\"\r\n                                        );\r\n                                        setRemovedMember(member);\r\n                                        setGroupToRemoveContact(\r\n                                          activeChat.groupId\r\n                                        );\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  <i className=\"ri-close-fill\"></i>\r\n                                </span>\r\n                              )}\r\n                              {member.role === \"admin\" ? (\r\n                                <Badge\r\n                                  color=\"danger\"\r\n                                  className=\"badge-soft-danger float-right\"\r\n                                  onClick={() =>\r\n                                    isAdmin &&\r\n                                    Swal.fire({\r\n                                      title:\r\n                                        t(\"Turn\") +\r\n                                        \" \" +\r\n                                        member.name +\r\n                                        \" \" +\r\n                                        t(\"a member?\"),\r\n                                      text: \"\",\r\n                                      icon: \"warning\",\r\n                                      showCancelButton: true,\r\n                                      confirmButtonColor: \"#4e5e96\",\r\n                                      cancelButtonColor: \"#d33\",\r\n                                      cancelButtonText: t(\"No\"),\r\n                                      confirmButtonText: t(\"Yes\"),\r\n                                      padding: \"5%\",\r\n                                    }).then((result) => {\r\n                                      if (result.isConfirmed) {\r\n                                        Swal.fire(\r\n                                          member.name +\r\n                                            \" \" +\r\n                                            t(\"is now a member!\"),\r\n                                          \"\",\r\n                                          \"success\"\r\n                                        );\r\n                                      }\r\n                                      setToggleMemberRole({\r\n                                        mbId: member.userId,\r\n                                        gpId: activeChat.groupId\r\n                                          ? activeChat.groupId\r\n                                          : \"\",\r\n                                        mbRole: member.role,\r\n                                        mb: member,\r\n                                      });\r\n                                    })\r\n                                  }\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  {t(\"Admin\")}\r\n                                </Badge>\r\n                              ) : (\r\n                                <Badge\r\n                                  color=\"success\"\r\n                                  className=\"badge-soft-success float-right\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() =>\r\n                                    isAdmin &&\r\n                                    Swal.fire({\r\n                                      title:\r\n                                        t(\"Turn\") +\r\n                                        \" \" +\r\n                                        member.name +\r\n                                        \" \" +\r\n                                        t(\"an administrator?\"),\r\n                                      text: \"\",\r\n                                      icon: \"warning\",\r\n                                      showCancelButton: true,\r\n                                      confirmButtonColor: \"#4e5e96\",\r\n                                      cancelButtonColor: \"#d33\",\r\n                                      cancelButtonText: t(\"No\"),\r\n                                      confirmButtonText: t(\"Yes\"),\r\n                                    }).then((result) => {\r\n                                      if (result.isConfirmed) {\r\n                                        Swal.fire(\r\n                                          member.name +\r\n                                            \" \" +\r\n                                            t(\"is now an administrator!\"),\r\n                                          \"\",\r\n                                          \"success\"\r\n                                        );\r\n                                        setToggleMemberRole({\r\n                                          mbId: member.userId,\r\n                                          gpId: activeChat.groupId\r\n                                            ? activeChat.groupId\r\n                                            : \"\",\r\n                                          mbRole: member.role,\r\n                                          mb: member,\r\n                                        });\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {t(\"Member\")}\r\n                                </Badge>\r\n                              )}\r\n                            </h5>\r\n                          </div>\r\n                        </Media>\r\n                      </Media>\r\n                    </Card>\r\n                  ))}\r\n                </CustomCollapse>\r\n              </Card>\r\n            )}\r\n            <AttachedFilesTab />\r\n          </div>\r\n        </SimpleBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatProfileSidebar;\r\n"]},"metadata":{},"sourceType":"module"}