{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\SelectContact.tsx\";\nimport React from \"react\";\nimport { Input, Label } from \"reactstrap\";\nimport { useContact } from \"../contexts/ContactContext\";\nimport { SearchContact } from \"../helpers/SearchContact\";\nimport sortContactGroup from \"../helpers/SortContactGroup\";\n\nconst SelectContact = ({\n  search,\n  contacts,\n  handleCheckContact\n}) => {\n  const {\n    checkedContacts,\n    setCheckedContacts\n  } = useContact();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, sortContactGroup(SearchContact(contacts, search ? search : \"\")).map((contact, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-3 pl-1 font-weight-bold text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, contact.group), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled contact-list mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, contact.children.map(child => /*#__PURE__*/React.createElement(\"li\", {\n    key: child.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    onChange: e => {\n      handleCheckContact(e.target.checked, child);\n      console.log(e.target.checked);\n    },\n    id: \"memberCheck\" + child.id,\n    checked: checkedContacts.find(item => item.id === child.id) ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"custom-control-label\",\n    htmlFor: \"memberCheck\" + child.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, child.name))))))));\n};\n\nexport default SelectContact;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/SelectContact.tsx"],"names":["React","Input","Label","useContact","SearchContact","sortContactGroup","SelectContact","search","contacts","handleCheckContact","checkedContacts","setCheckedContacts","map","contact","key","group","children","child","id","e","target","checked","console","log","find","item","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;;AAQA,MAAMC,aAA+B,GAAG,CAAC;AACvCC,EAAAA,MADuC;AAEvCC,EAAAA,QAFuC;AAGvCC,EAAAA;AAHuC,CAAD,KAIlC;AACJ,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CR,UAAU,EAA1D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,gBAAgB,CAAED,aAAa,CAACI,QAAD,EAAWD,MAAM,GAAGA,MAAH,GAAY,EAA7B,CAAf,CAAhB,CAAkEK,GAAlE,CACG,CAACC,OAAD,EAAUC,GAAV,kBAEE;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,KADX,CADF,eAKE;AAAI,IAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACG,QAAR,CAAiBJ,GAAjB,CAAuBK,KAAF,iBACpB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfV,MAAAA,kBAAkB,CAACU,CAAC,CAACC,MAAF,CAASC,OAAV,EAAmBJ,KAAnB,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,OAArB;AACD,KANH;AAOE,IAAA,EAAE,EAAE,gBAAgBJ,KAAK,CAACC,EAP5B;AAQE,IAAA,OAAO,EAAER,eAAe,CAACc,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYD,KAAK,CAACC,EAAjD,IAAwD,IAAxD,GAA+D,KAR1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,OAAO,EAAE,gBAAgBD,KAAK,CAACC,EAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,KAAK,CAACS,IAJT,CAXF,CADF,CADD,CADH,CALF,CAHL,CADD,CADF;AAuCD,CA9CD;;AAgDA,eAAepB,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Input, Label } from \"reactstrap\";\r\nimport IContact from \"../alias/IContact\";\r\nimport { useContact } from \"../contexts/ContactContext\";\r\nimport { SearchContact } from \"../helpers/SearchContact\";\r\nimport sortContactGroup from \"../helpers/SortContactGroup\";\r\n\r\ninterface IProps {\r\n  search?: string;\r\n  contacts: IContact[];\r\n  handleCheckContact(selected: boolean, contact: IContact): void;\r\n}\r\n\r\nconst SelectContact: React.FC<IProps> = ({\r\n  search,\r\n  contacts,\r\n  handleCheckContact,\r\n}) => {\r\n  const { checkedContacts, setCheckedContacts } = useContact();\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n    {sortContactGroup((SearchContact(contacts, search ? search : \"\"))).map(\r\n        (contact, key) => (\r\n          \r\n          <div key={key}>\r\n            <div className=\"ml-3 pl-1 font-weight-bold text-primary\">\r\n              {contact.group}\r\n            </div>\r\n\r\n            <ul className=\"list-unstyled contact-list mb-2\">\r\n              {contact.children.map(( child ) => (\r\n                <li key={child.id}>\r\n                  <div className=\"custom-control custom-checkbox\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      onChange={(e) => {\r\n                        handleCheckContact(e.target.checked, child);\r\n                        console.log(e.target.checked);\r\n                      }}\r\n                      id={\"memberCheck\" + child.id}\r\n                      checked={checkedContacts.find((item) => item.id === child.id ) ? true : false }\r\n                    />\r\n                    <Label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor={\"memberCheck\" + child.id}\r\n                    >\r\n                      {child.name}\r\n                    </Label>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectContact;\r\n"]},"metadata":{},"sourceType":"module"}