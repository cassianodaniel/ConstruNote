{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n  invariant(intl, '[React Intl] Could not find required `intl` object. ' + '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), {\n  textComponent: React.Fragment\n});\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\n\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n  return function (parts) {\n    // eslint-disable-next-line prefer-rest-params\n    return formatXMLElementFn(React.Children.toArray(parts));\n  };\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/react-intl/lib/src/utils.js"],"names":["__assign","React","invariant","DEFAULT_INTL_CONFIG","CORE_DEFAULT_INTL_CONFIG","invariantIntlContext","intl","textComponent","Fragment","assignUniqueKeysToParts","formatXMLElementFn","parts","Children","toArray"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,mBAAmB,IAAIC,wBAAhC,QAAgE,gBAAhE;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACvCJ,EAAAA,SAAS,CAACI,IAAD,EAAO,yDACZ,0DADK,CAAT;AAEH;AACD,OAAO,IAAIH,mBAAmB,GAAGH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKI,wBAAL,CAAT,EAAyC;AAAEG,EAAAA,aAAa,EAAEN,KAAK,CAACO;AAAvB,CAAzC,CAAlC;AACP;;;;;;;AAMA,OAAO,SAASC,uBAAT,CAAiCC,kBAAjC,EAAqD;AACxD,SAAO,UAAUC,KAAV,EAAiB;AACpB;AACA,WAAOD,kBAAkB,CAACT,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBF,KAAvB,CAAD,CAAzB;AACH,GAHD;AAIH","sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}