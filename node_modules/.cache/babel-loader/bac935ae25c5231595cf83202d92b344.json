{"ast":null,"code":"'use strict';\n\nfunction parseURI(URI) {\n  var _URL = new URL(URI),\n      port = _URL.port,\n      hostname = _URL.hostname,\n      protocol = _URL.protocol; // https://github.com/nodejs/node/issues/12410#issuecomment-294138912\n\n\n  if (hostname === '[::1]') {\n    hostname = '::1';\n  }\n\n  return {\n    port: port,\n    hostname: hostname,\n    protocol: protocol\n  };\n}\n\nfunction parseHost(host) {\n  var _parseURI = parseURI(\"http://\".concat(host)),\n      port = _parseURI.port,\n      hostname = _parseURI.hostname;\n\n  return {\n    port: port,\n    hostname: hostname\n  };\n}\n\nfunction parseService(service) {\n  return service.includes('://') ? parseURI(service) : parseHost(service);\n}\n\nObject.assign(module.exports, {\n  parseURI: parseURI,\n  parseHost: parseHost,\n  parseService: parseService\n});","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/connection/lib/util.js"],"names":["parseURI","URI","URL","port","hostname","protocol","parseHost","host","parseService","service","includes","Object","assign","module","exports"],"mappings":"AAAA;;AAEA,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,aACY,IAAIC,GAAJ,CAAQD,GAAR,CADZ;AAAA,MAChBE,IADgB,QAChBA,IADgB;AAAA,MACVC,QADU,QACVA,QADU;AAAA,MACAC,QADA,QACAA,QADA,EAErB;;;AACA,MAAID,QAAQ,KAAK,OAAjB,EAA0B;AACxBA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,SAAO;AAACD,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,QAAQ,EAARA,QAAP;AAAiBC,IAAAA,QAAQ,EAARA;AAAjB,GAAP;AACD;;AAED,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAAA,kBACEP,QAAQ,kBAAWO,IAAX,EADV;AAAA,MAChBJ,IADgB,aAChBA,IADgB;AAAA,MACVC,QADU,aACVA,QADU;;AAEvB,SAAO;AAACD,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,QAAQ,EAARA;AAAP,GAAP;AACD;;AAED,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAOA,OAAO,CAACC,QAAR,CAAiB,KAAjB,IAA0BV,QAAQ,CAACS,OAAD,CAAlC,GAA8CH,SAAS,CAACG,OAAD,CAA9D;AACD;;AAEDE,MAAM,CAACC,MAAP,CAAcC,MAAM,CAACC,OAArB,EAA8B;AAACd,EAAAA,QAAQ,EAARA,QAAD;AAAWM,EAAAA,SAAS,EAATA,SAAX;AAAsBE,EAAAA,YAAY,EAAZA;AAAtB,CAA9B","sourcesContent":["'use strict'\n\nfunction parseURI(URI) {\n  let {port, hostname, protocol} = new URL(URI)\n  // https://github.com/nodejs/node/issues/12410#issuecomment-294138912\n  if (hostname === '[::1]') {\n    hostname = '::1'\n  }\n\n  return {port, hostname, protocol}\n}\n\nfunction parseHost(host) {\n  const {port, hostname} = parseURI(`http://${host}`)\n  return {port, hostname}\n}\n\nfunction parseService(service) {\n  return service.includes('://') ? parseURI(service) : parseHost(service)\n}\n\nObject.assign(module.exports, {parseURI, parseHost, parseService})\n"]},"metadata":{},"sourceType":"script"}