{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar xml = require('@xmpp/xml');\n/*\n * References\n * https://xmpp.org/rfcs/rfc6120.html#bind\n */\n\n\nvar NS = 'urn:ietf:params:xml:ns:xmpp-bind';\n\nfunction makeBindElement(resource) {\n  return xml('bind', {\n    xmlns: NS\n  }, resource && xml('resource', {}, resource));\n}\n\nfunction bind(_x, _x2, _x3) {\n  return _bind.apply(this, arguments);\n}\n\nfunction _bind() {\n  _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(entity, iqCaller, resource) {\n    var result, jid;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return iqCaller.set(makeBindElement(resource));\n\n          case 2:\n            result = _context2.sent;\n            jid = result.getChildText('jid');\n\n            entity._jid(jid);\n\n            return _context2.abrupt(\"return\", jid);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _bind.apply(this, arguments);\n}\n\nfunction route(_ref, resource) {\n  var iqCaller = _ref.iqCaller;\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2, next) {\n      var entity;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              entity = _ref2.entity;\n\n              if (!(typeof resource === 'function')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return resource(function (resource) {\n                return bind(entity, iqCaller, resource);\n              });\n\n            case 4:\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return bind(entity, iqCaller, resource);\n\n            case 8:\n              next();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\n\nmodule.exports = function (_ref4, resource) {\n  var streamFeatures = _ref4.streamFeatures,\n      iqCaller = _ref4.iqCaller;\n  streamFeatures.use('bind', NS, route({\n    iqCaller: iqCaller\n  }, resource));\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/node_modules/@xmpp/resource-binding/index.js"],"names":["xml","require","NS","makeBindElement","resource","xmlns","bind","entity","iqCaller","set","result","jid","getChildText","_jid","route","next","module","exports","streamFeatures","use"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;AACA;AACA;AACA;;;AAEA,IAAMC,EAAE,GAAG,kCAAX;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,SAAOJ,GAAG,CAAC,MAAD,EAAS;AAACK,IAAAA,KAAK,EAAEH;AAAR,GAAT,EAAsBE,QAAQ,IAAIJ,GAAG,CAAC,UAAD,EAAa,EAAb,EAAiBI,QAAjB,CAArC,CAAV;AACD;;SAEcE,I;;;;;mEAAf,kBAAoBC,MAApB,EAA4BC,QAA5B,EAAsCJ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuBI,QAAQ,CAACC,GAAT,CAAaN,eAAe,CAACC,QAAD,CAA5B,CADvB;;AAAA;AACQM,YAAAA,MADR;AAEQC,YAAAA,GAFR,GAEcD,MAAM,CAACE,YAAP,CAAoB,KAApB,CAFd;;AAGEL,YAAAA,MAAM,CAACM,IAAP,CAAYF,GAAZ;;AAHF,8CAISA,GAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,SAASG,KAAT,OAA2BV,QAA3B,EAAqC;AAAA,MAArBI,QAAqB,QAArBA,QAAqB;AACnC;AAAA,yEAAO,wBAAyBO,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBR,cAAAA,MAAhB,SAAgBA,MAAhB;;AAAA,oBACD,OAAOH,QAAP,KAAoB,UADnB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEGA,QAAQ,CAAC,UAAAA,QAAQ;AAAA,uBAAIE,IAAI,CAACC,MAAD,EAASC,QAAT,EAAmBJ,QAAnB,CAAR;AAAA,eAAT,CAFX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAIGE,IAAI,CAACC,MAAD,EAASC,QAAT,EAAmBJ,QAAnB,CAJP;;AAAA;AAOLW,cAAAA,IAAI;;AAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AASD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,iBAAqCb,QAArC,EAA+C;AAAA,MAArCc,cAAqC,SAArCA,cAAqC;AAAA,MAArBV,QAAqB,SAArBA,QAAqB;AAC9DU,EAAAA,cAAc,CAACC,GAAf,CAAmB,MAAnB,EAA2BjB,EAA3B,EAA+BY,KAAK,CAAC;AAACN,IAAAA,QAAQ,EAARA;AAAD,GAAD,EAAaJ,QAAb,CAApC;AACD,CAFD","sourcesContent":["'use strict'\n\nconst xml = require('@xmpp/xml')\n\n/*\n * References\n * https://xmpp.org/rfcs/rfc6120.html#bind\n */\n\nconst NS = 'urn:ietf:params:xml:ns:xmpp-bind'\n\nfunction makeBindElement(resource) {\n  return xml('bind', {xmlns: NS}, resource && xml('resource', {}, resource))\n}\n\nasync function bind(entity, iqCaller, resource) {\n  const result = await iqCaller.set(makeBindElement(resource))\n  const jid = result.getChildText('jid')\n  entity._jid(jid)\n  return jid\n}\n\nfunction route({iqCaller}, resource) {\n  return async function({entity}, next) {\n    if (typeof resource === 'function') {\n      await resource(resource => bind(entity, iqCaller, resource))\n    } else {\n      await bind(entity, iqCaller, resource)\n    }\n\n    next()\n  }\n}\n\nmodule.exports = function({streamFeatures, iqCaller}, resource) {\n  streamFeatures.use('bind', NS, route({iqCaller}, resource))\n}\n"]},"metadata":{},"sourceType":"script"}