{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\DathApp\\\\ConstruNote\\\\src\\\\components\\\\ChatMessageMenuOption.tsx\";\nimport React from \"react\";\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport useCopy from \"@react-hook/copy\";\nimport { useChat } from \"../contexts/ChatContext\";\nimport ChatType from \"../enuns/ChatType\";\n\nconst ChatMessageMenuOption = ({\n  activeChat,\n  message\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    setShowModalForwardMessageTo\n  } = useModal();\n  const {\n    setReplyMsg,\n    setFavoriteMessagePayload\n  } = useChat();\n  const {\n    copy\n  } = useCopy(message.message);\n  return /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"align-self-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    tag: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-more-2-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: copy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, t(\"Copy\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-copy-line float-right text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setReplyMsg(message);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, t(\"Reply\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-reply-line float-right text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setFavoriteMessagePayload({\n        messageId: message.id,\n        contactTo: activeChat.jid,\n        contactType: activeChat.chatType === ChatType.USER ? \"contact\" : \"group\",\n        message: message.message,\n        messageDate: message.time.split(\"T\").join(\" \").slice(0, 19),\n        content: message.message,\n        contentType: \"message\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, t(\"Favorite\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-star-line float-right text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => setShowModalForwardMessageTo(message),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, t(\"Forward\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-group-line float-right text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ChatMessageMenuOption;","map":{"version":3,"sources":["C:/Users/Digivox/dev/DathApp/ConstruNote/src/components/ChatMessageMenuOption.tsx"],"names":["React","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","useTranslation","useModal","useCopy","useChat","ChatType","ChatMessageMenuOption","activeChat","message","t","setShowModalForwardMessageTo","setReplyMsg","setFavoriteMessagePayload","copy","messageId","id","contactTo","jid","contactType","chatType","USER","messageDate","time","split","join","slice","content","contentType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport ChatType from \"../enuns/ChatType\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n}\r\n\r\n\r\nconst ChatMessageMenuOption: React.FC<IProps> = ({ activeChat, message }) => {\r\n  const { t } = useTranslation();\r\n  const { setShowModalForwardMessageTo } = useModal();\r\n  const { setReplyMsg, setFavoriteMessagePayload} = useChat();\r\n  const { copy } = useCopy(message.message);\r\n    return (\r\n      <UncontrolledDropdown className=\"align-self-start\">\r\n        <DropdownToggle tag=\"a\">\r\n          <i className=\"ri-more-2-fill\"></i>\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={copy}>\r\n            {t(\"Copy\")}\r\n            <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          {/* <DropdownItem>\r\n            {t(\"Save\")} <i className=\"ri-save-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n          <DropdownItem\r\n            onClick={() => {\r\n              setReplyMsg(message);\r\n            }}\r\n          >\r\n              {t(\"Reply\")}{\" \"}\r\n            <i className=\"ri-reply-line float-right text-muted\"></i>\r\n          </DropdownItem> \r\n           <DropdownItem\r\n            onClick={() => {\r\n              setFavoriteMessagePayload({\r\n                messageId: message.id,\r\n                contactTo: activeChat.jid,\r\n                contactType: activeChat.chatType === ChatType.USER ? \"contact\" : \"group\",\r\n                message: message.message,\r\n                messageDate: message.time.split(\"T\").join(\" \").slice(0, 19),\r\n                content: message.message,\r\n                contentType: \"message\",\r\n              });\r\n            }}\r\n          >\r\n            {t(\"Favorite\")}{\" \"}\r\n            <i className=\"ri-star-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => setShowModalForwardMessageTo(message)}>\r\n            {t(\"Forward\")}{\" \"}\r\n            <i className=\"ri-group-line float-right text-muted\" />\r\n          </DropdownItem>\r\n          {/* <DropdownItem onClick={() => deleteMessage(message.id)}>\r\n            Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n};\r\n\r\nexport default ChatMessageMenuOption;\r\n"]},"metadata":{},"sourceType":"module"}