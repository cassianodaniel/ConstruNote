{"ast":null,"code":"import React from\"react\";import{DropdownMenu,DropdownItem,DropdownToggle,UncontrolledDropdown}from\"reactstrap\";import{useTranslation}from\"react-i18next\";import{useModal}from\"../contexts/ModalContext\";import useCopy from\"@react-hook/copy\";import{useChat}from\"../contexts/ChatContext\";import ChatType from\"../enuns/ChatType\";var ChatMessageMenuOption=function ChatMessageMenuOption(_ref){var activeChat=_ref.activeChat,message=_ref.message;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(),setShowModalForwardMessageTo=_useModal.setShowModalForwardMessageTo;var _useChat=useChat(),setReplyMsg=_useChat.setReplyMsg,setFavoriteMessagePayload=_useChat.setFavoriteMessagePayload;var _useCopy=useCopy(message.message),copy=_useCopy.copy;return/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"align-self-start\"},/*#__PURE__*/React.createElement(DropdownToggle,{tag:\"a\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-more-2-fill\"})),/*#__PURE__*/React.createElement(DropdownMenu,null,/*#__PURE__*/React.createElement(DropdownItem,{onClick:copy},t(\"Copy\"),/*#__PURE__*/React.createElement(\"i\",{className:\"ri-file-copy-line float-right text-muted\"})),/*#__PURE__*/React.createElement(DropdownItem,{onClick:function onClick(){setReplyMsg(message);}},t(\"Reply\"),\" \",/*#__PURE__*/React.createElement(\"i\",{className:\"ri-reply-line float-right text-muted\"})),/*#__PURE__*/React.createElement(DropdownItem,{onClick:function onClick(){setFavoriteMessagePayload({messageId:message.id,contactTo:activeChat.jid,contactType:activeChat.chatType===ChatType.USER?\"contact\":\"group\",message:message.message,messageDate:message.time.split(\"T\").join(\" \").slice(0,19),content:message.message,contentType:\"message\"});}},t(\"Favorite\"),\" \",/*#__PURE__*/React.createElement(\"i\",{className:\"ri-star-line float-right text-muted\"})),/*#__PURE__*/React.createElement(DropdownItem,{onClick:function onClick(){return setShowModalForwardMessageTo(message);}},t(\"Forward\"),\" \",/*#__PURE__*/React.createElement(\"i\",{className:\"ri-group-line float-right text-muted\"}))));};export default ChatMessageMenuOption;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatMessageMenuOption.tsx"],"names":["React","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","useTranslation","useModal","useCopy","useChat","ChatType","ChatMessageMenuOption","activeChat","message","t","setShowModalForwardMessageTo","setReplyMsg","setFavoriteMessagePayload","copy","messageId","id","contactTo","jid","contactType","chatType","USER","messageDate","time","split","join","slice","content","contentType"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,YADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,oBAJF,KAKO,YALP,CAQA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,QAAT,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,OAASC,OAAT,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CAQA,GAAMC,CAAAA,qBAAuC,CAAG,QAA1CA,CAAAA,qBAA0C,MAA6B,IAA1BC,CAAAA,UAA0B,MAA1BA,UAA0B,CAAdC,OAAc,MAAdA,OAAc,qBAC7DP,cAAc,EAD+C,CACnEQ,CADmE,iBACnEA,CADmE,eAElCP,QAAQ,EAF0B,CAEnEQ,4BAFmE,WAEnEA,4BAFmE,cAGzBN,OAAO,EAHkB,CAGnEO,WAHmE,UAGnEA,WAHmE,CAGtDC,yBAHsD,UAGtDA,yBAHsD,cAI1DT,OAAO,CAACK,OAAO,CAACA,OAAT,CAJmD,CAInEK,IAJmE,UAInEA,IAJmE,CAKzE,mBACE,oBAAC,oBAAD,EAAsB,SAAS,CAAC,kBAAhC,eACE,oBAAC,cAAD,EAAgB,GAAG,CAAC,GAApB,eACE,yBAAG,SAAS,CAAC,gBAAb,EADF,CADF,cAIE,oBAAC,YAAD,mBACE,oBAAC,YAAD,EAAc,OAAO,CAAEA,IAAvB,EACGJ,CAAC,CAAC,MAAD,CADJ,cAEE,yBAAG,SAAS,CAAC,0CAAb,EAFF,CADF,cAQE,oBAAC,YAAD,EACE,OAAO,CAAE,kBAAM,CACbE,WAAW,CAACH,OAAD,CAAX,CACD,CAHH,EAKKC,CAAC,CAAC,OAAD,CALN,CAKiB,GALjB,cAME,yBAAG,SAAS,CAAC,sCAAb,EANF,CARF,cAgBG,oBAAC,YAAD,EACC,OAAO,CAAE,kBAAM,CACbG,yBAAyB,CAAC,CACxBE,SAAS,CAAEN,OAAO,CAACO,EADK,CAExBC,SAAS,CAAET,UAAU,CAACU,GAFE,CAGxBC,WAAW,CAAEX,UAAU,CAACY,QAAX,GAAwBd,QAAQ,CAACe,IAAjC,CAAwC,SAAxC,CAAoD,OAHzC,CAIxBZ,OAAO,CAAEA,OAAO,CAACA,OAJO,CAKxBa,WAAW,CAAEb,OAAO,CAACc,IAAR,CAAaC,KAAb,CAAmB,GAAnB,EAAwBC,IAAxB,CAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,CAAxC,CAA2C,EAA3C,CALW,CAMxBC,OAAO,CAAElB,OAAO,CAACA,OANO,CAOxBmB,WAAW,CAAE,SAPW,CAAD,CAAzB,CASD,CAXF,EAaElB,CAAC,CAAC,UAAD,CAbH,CAaiB,GAbjB,cAcC,yBAAG,SAAS,CAAC,qCAAb,EAdD,CAhBH,cAgCE,oBAAC,YAAD,EAAc,OAAO,CAAE,yBAAMC,CAAAA,4BAA4B,CAACF,OAAD,CAAlC,EAAvB,EACGC,CAAC,CAAC,SAAD,CADJ,CACiB,GADjB,cAEE,yBAAG,SAAS,CAAC,sCAAb,EAFF,CAhCF,CAJF,CADF,CA+CH,CApDD,CAsDA,cAAeH,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport IChat from \"../alias/IChat\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport useCopy from \"@react-hook/copy\";\r\nimport { useChat } from \"../contexts/ChatContext\";\r\nimport ChatType from \"../enuns/ChatType\";\r\n\r\ninterface IProps {\r\n  activeChat: IChat;\r\n  message: IMessage;\r\n}\r\n\r\n\r\nconst ChatMessageMenuOption: React.FC<IProps> = ({ activeChat, message }) => {\r\n  const { t } = useTranslation();\r\n  const { setShowModalForwardMessageTo } = useModal();\r\n  const { setReplyMsg, setFavoriteMessagePayload} = useChat();\r\n  const { copy } = useCopy(message.message);\r\n    return (\r\n      <UncontrolledDropdown className=\"align-self-start\">\r\n        <DropdownToggle tag=\"a\">\r\n          <i className=\"ri-more-2-fill\"></i>\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={copy}>\r\n            {t(\"Copy\")}\r\n            <i className=\"ri-file-copy-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          {/* <DropdownItem>\r\n            {t(\"Save\")} <i className=\"ri-save-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n          <DropdownItem\r\n            onClick={() => {\r\n              setReplyMsg(message);\r\n            }}\r\n          >\r\n              {t(\"Reply\")}{\" \"}\r\n            <i className=\"ri-reply-line float-right text-muted\"></i>\r\n          </DropdownItem> \r\n           <DropdownItem\r\n            onClick={() => {\r\n              setFavoriteMessagePayload({\r\n                messageId: message.id,\r\n                contactTo: activeChat.jid,\r\n                contactType: activeChat.chatType === ChatType.USER ? \"contact\" : \"group\",\r\n                message: message.message,\r\n                messageDate: message.time.split(\"T\").join(\" \").slice(0, 19),\r\n                content: message.message,\r\n                contentType: \"message\",\r\n              });\r\n            }}\r\n          >\r\n            {t(\"Favorite\")}{\" \"}\r\n            <i className=\"ri-star-line float-right text-muted\"></i>\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => setShowModalForwardMessageTo(message)}>\r\n            {t(\"Forward\")}{\" \"}\r\n            <i className=\"ri-group-line float-right text-muted\" />\r\n          </DropdownItem>\r\n          {/* <DropdownItem onClick={() => deleteMessage(message.id)}>\r\n            Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i>\r\n          </DropdownItem> */}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n};\r\n\r\nexport default ChatMessageMenuOption;\r\n"]},"metadata":{},"sourceType":"module"}