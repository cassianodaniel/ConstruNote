{"ast":null,"code":"import { getAuthorization } from \"../utils/localStorageUtils\";\nexport default class UserBusiness {\n  constructor(api, settings) {\n    this.api = api;\n    this.settings = settings;\n  }\n\n  get(callback) {\n    if (!this.api) return;\n    const Auth = getAuthorization();\n    this.settings.get(settings => {\n      callback({\n        id: settings.xmppUser,\n        jid: `${settings.xmppUser}@${settings.xmppDomain}`,\n        name: Auth.user_name,\n        email: Auth.email,\n        profilePicture: settings.imageUrl,\n        number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\")\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/User.ts"],"names":["getAuthorization","UserBusiness","constructor","api","settings","get","callback","Auth","id","xmppUser","jid","xmppDomain","name","user_name","email","profilePicture","imageUrl","number","sipUser","replace"],"mappings":"AAEA,SAASA,gBAAT,QAAiC,4BAAjC;AAOA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAASC,GAAT,EAA2BC,QAA3B,EAAuD;AAAA,SAA9CD,GAA8C,GAA9CA,GAA8C;AAAA,SAA5BC,QAA4B,GAA5BA,QAA4B;AAAE;;AACpEC,EAAAA,GAAG,CAACC,QAAD,EAA4B;AAC7B,QAAI,CAAC,KAAKH,GAAV,EAAe;AACf,UAAMI,IAAI,GAAGP,gBAAgB,EAA7B;AACA,SAAKI,QAAL,CAAcC,GAAd,CAAmBD,QAAD,IAAc;AAC9BE,MAAAA,QAAQ,CAAC;AACPE,QAAAA,EAAE,EAAEJ,QAAQ,CAACK,QADN;AAEPC,QAAAA,GAAG,EAAG,GAAEN,QAAQ,CAACK,QAAS,IAAGL,QAAQ,CAACO,UAAW,EAF1C;AAGPC,QAAAA,IAAI,EAAEL,IAAI,CAACM,SAHJ;AAIPC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAJL;AAKPC,QAAAA,cAAc,EAAEX,QAAQ,CAACY,QALlB;AAMPC,QAAAA,MAAM,EAAEb,QAAQ,CAACc,OAAT,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD;AAND,OAAD,CAAR;AAQD,KATD;AAUD;;AAf+B","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IUser from \"../../alias/IUser\";\r\nimport { getAuthorization } from \"../utils/localStorageUtils\";\r\nimport SettingsBusiness from \"./Settings\";\r\n\r\ninterface GetUserCallBack {\r\n  (user: IUser): void;\r\n}\r\n\r\nexport default class UserBusiness {\r\n  constructor(private api: API, private settings: SettingsBusiness) {}\r\n  get(callback: GetUserCallBack) {\r\n    if (!this.api) return;\r\n    const Auth = getAuthorization();\r\n    this.settings.get((settings) => {\r\n      callback({\r\n        id: settings.xmppUser,\r\n        jid: `${settings.xmppUser}@${settings.xmppDomain}`,\r\n        name: Auth.user_name,\r\n        email: Auth.email,\r\n        profilePicture: settings.imageUrl,\r\n        number: settings.sipUser.replace(\"w-\", \"\").replace(\"s-\", \"\"),\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}