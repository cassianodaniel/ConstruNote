{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import hark from\"hark\";export var Video=function Video(_ref){var audioId=_ref.audioId,videoId=_ref.videoId,speakerId=_ref.speakerId,videoDevices=_ref.videoDevices,audioDevices=_ref.audioDevices,speakerDevices=_ref.speakerDevices,stream=_ref.stream,speakerVolume=_ref.speakerVolume,speaking=_ref.speaking,modalOpen=_ref.modalOpen,setStream=_ref.setStream,setSpeakerVolume=_ref.setSpeakerVolume,setSpeaking=_ref.setSpeaking;var _useState=useState(),_useState2=_slicedToArray(_useState,2),speechEvents=_useState2[0],setSpeechEvents=_useState2[1];var _useState3=useState(videoId),_useState4=_slicedToArray(_useState3,2),usedVideo=_useState4[0],setUsedVideo=_useState4[1];var _useState5=useState(audioId),_useState6=_slicedToArray(_useState5,2),usedAudio=_useState6[0],setUsedAudio=_useState6[1];var _useState7=useState(speakerId),_useState8=_slicedToArray(_useState7,2),usedSpeaker=_useState8[0],setUsedSpeaker=_useState8[1];var _useState9=useState(videoDevices),_useState10=_slicedToArray(_useState9,2),localVideoDevices=_useState10[0],setLocalVideoDevices=_useState10[1];var _useState11=useState(audioDevices),_useState12=_slicedToArray(_useState11,2),localAudioDevices=_useState12[0],setLocalAudioDevices=_useState12[1];var _useState13=useState(speakerDevices),_useState14=_slicedToArray(_useState13,2),localSpeakerDevices=_useState14[0],setLocalSpeakerDevices=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),videoEl=_useState16[0],setVideoEl=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),localStream=_useState18[0],setLocalStream=_useState18[1];var startStream=function startStream(idVideo,idAudio,speakerId){try{var videoTag=videoEl;if(!videoTag){videoTag=document.querySelector(\"video.video\");}var constraints={audio:{deviceId:idAudio?{exact:idAudio}:undefined},video:videoDevices[0]?{deviceId:idVideo?{exact:idVideo}:undefined,width:{min:1280,max:1920},height:{min:720,max:1080}}:false};navigator.mediaDevices.getUserMedia(constraints).then(function(strm){if(stream){stream.getTracks().forEach(function(track){track.stop();});}setStream(strm);setUsedVideo(videoId);setUsedAudio(audioId);setUsedSpeaker(speakerId);if(videoTag){// const streamConstraints = {\n//     width: { min: 640, ideal: 1280, max: 1920 },\n//     height: { min: 400, ideal: 720, max: 1080 },\n// }\n// const track = stream.getVideoTracks()[0];\n// track.applyConstraints(streamConstraints);\nvar harkOptions={};var speech=hark(strm,harkOptions);if(speechEvents){speechEvents.stop();}setSpeechEvents(speech);speech.on(\"speaking\",function(){setSpeaking(true);});speech.on(\"stopped_speaking\",function(){setSpeaking(false);});speech.on(\"volume_change\",function(volume){setSpeakerVolume(volume);});videoTag.srcObject=strm;if(typeof videoTag.setSinkId==\"function\")videoTag.setSinkId(speakerId).then(function(_){return console.log(\"Speaker Changed to - \"+speakerId);}).catch(function(_){return console.log(\"error\");});}}).catch(function(e){console.log(e);});}catch(e){console.log(e);}};var unMount=function unMount(){return function(){if(!modalOpen){if(stream){stream.getTracks().forEach(function(track){track.stop();});}if(speechEvents){speechEvents.stop();}setStream(undefined);}};};var init=function init(){if(!stream){var el=document.querySelector(\"#deviceConfigTag\");if(el&&!videoEl){setVideoEl(el);startStream(videoId,audioId,speakerId);}}};var update=function update(){if((videoId!==usedVideo||audioId!==usedAudio||speakerId!==usedSpeaker||videoDevices!==localVideoDevices||audioDevices!==localAudioDevices||speakerDevices!==localSpeakerDevices)&&modalOpen){setLocalVideoDevices(videoDevices);setLocalAudioDevices(audioDevices);setLocalSpeakerDevices(speakerDevices);startStream(videoId,audioId,speakerId);}};var onStreamChange=function onStreamChange(){if(localStream&&localStream.id!==(stream===null||stream===void 0?void 0:stream.id)){localStream.getTracks().forEach(function(track){track.stop();});}setLocalStream(stream);};useEffect(unMount,[modalOpen]);useEffect(init,[]);useEffect(update,[videoId,audioId,speakerId,videoDevices]);useEffect(onStreamChange,[stream]);return/*#__PURE__*/React.createElement(\"video\",{style:{maxWidth:\"463px\",display:videoDevices[0]?\"block\":\"none\"},id:\"deviceConfigTag\",className:\"video\",autoPlay:true,playsInline:true,muted:true});};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/Video.tsx"],"names":["React","useEffect","useState","hark","Video","audioId","videoId","speakerId","videoDevices","audioDevices","speakerDevices","stream","speakerVolume","speaking","modalOpen","setStream","setSpeakerVolume","setSpeaking","speechEvents","setSpeechEvents","usedVideo","setUsedVideo","usedAudio","setUsedAudio","usedSpeaker","setUsedSpeaker","localVideoDevices","setLocalVideoDevices","localAudioDevices","setLocalAudioDevices","localSpeakerDevices","setLocalSpeakerDevices","videoEl","setVideoEl","localStream","setLocalStream","startStream","idVideo","idAudio","videoTag","document","querySelector","constraints","audio","deviceId","exact","undefined","video","width","min","max","height","navigator","mediaDevices","getUserMedia","then","strm","getTracks","forEach","track","stop","harkOptions","speech","on","volume","srcObject","setSinkId","_","console","log","catch","e","unMount","init","el","update","onStreamChange","id","maxWidth","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport hark from \"hark\";\r\nexport interface Video {\r\n  audioId: string | undefined;\r\n  videoId: string | undefined;\r\n  speakerId: string | undefined;\r\n  videoDevices: MediaDeviceInfo[];\r\n  audioDevices: MediaDeviceInfo[];\r\n  speakerDevices: MediaDeviceInfo[];\r\n  speakerVolume: number | undefined;\r\n  speaking: boolean | undefined;\r\n  stream: MediaStream | undefined;\r\n  setStream(val: MediaStream | undefined): void;\r\n  modalOpen: boolean;\r\n  setSpeakerVolume(val: number): void;\r\n  setSpeaking(val: boolean): void;\r\n}\r\nexport const Video: React.FC<Video> = ({\r\n  audioId,\r\n  videoId,\r\n  speakerId,\r\n  videoDevices,\r\n  audioDevices,\r\n  speakerDevices,\r\n  stream,\r\n  speakerVolume,\r\n  speaking,\r\n  modalOpen,\r\n  setStream,\r\n  setSpeakerVolume,\r\n  setSpeaking,\r\n}) => {\r\n  const [speechEvents, setSpeechEvents] = useState<hark.Harker>();\r\n  const [usedVideo, setUsedVideo] = useState<string | undefined>(videoId);\r\n  const [usedAudio, setUsedAudio] = useState<string | undefined>(audioId);\r\n  const [usedSpeaker, setUsedSpeaker] = useState<string | undefined>(speakerId);\r\n  const [localVideoDevices, setLocalVideoDevices] = useState<MediaDeviceInfo[]>(\r\n    videoDevices\r\n  );\r\n  const [localAudioDevices, setLocalAudioDevices] = useState<MediaDeviceInfo[]>(\r\n    audioDevices\r\n  );\r\n  const [localSpeakerDevices, setLocalSpeakerDevices] = useState<\r\n    MediaDeviceInfo[]\r\n  >(speakerDevices);\r\n  const [videoEl, setVideoEl] = useState<HTMLVideoElement>();\r\n  const [localStream, setLocalStream] = useState<MediaStream>();\r\n  const startStream = (\r\n    idVideo: string | undefined,\r\n    idAudio: string | undefined,\r\n    speakerId: string | undefined\r\n  ) => {\r\n    try {\r\n      let videoTag: any = videoEl;\r\n      if (!videoTag) {\r\n        videoTag = document.querySelector(\"video.video\") as HTMLVideoElement;\r\n      }\r\n      const constraints = {\r\n        audio: { deviceId: idAudio ? { exact: idAudio } : undefined },\r\n        video: videoDevices[0]\r\n          ? {\r\n              deviceId: idVideo ? { exact: idVideo } : undefined,\r\n              width: { min: 1280, max: 1920 },\r\n              height: { min: 720, max: 1080 },\r\n            }\r\n          : false,\r\n      };\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then((strm) => {\r\n          if (stream) {\r\n            stream.getTracks().forEach((track) => {\r\n              track.stop();\r\n            });\r\n          }\r\n          setStream(strm);\r\n          setUsedVideo(videoId);\r\n          setUsedAudio(audioId);\r\n          setUsedSpeaker(speakerId);\r\n          if (videoTag) {\r\n            // const streamConstraints = {\r\n            //     width: { min: 640, ideal: 1280, max: 1920 },\r\n            //     height: { min: 400, ideal: 720, max: 1080 },\r\n            // }\r\n            // const track = stream.getVideoTracks()[0];\r\n            // track.applyConstraints(streamConstraints);\r\n\r\n            const harkOptions = {};\r\n            const speech = hark(strm, harkOptions);\r\n            if (speechEvents) {\r\n              speechEvents.stop();\r\n            }\r\n            setSpeechEvents(speech);\r\n            speech.on(\"speaking\", () => {\r\n              setSpeaking(true);\r\n            });\r\n\r\n            speech.on(\"stopped_speaking\", () => {\r\n              setSpeaking(false);\r\n            });\r\n\r\n            speech.on(\"volume_change\", (volume) => {\r\n              setSpeakerVolume(volume);\r\n            });\r\n\r\n            videoTag.srcObject = strm;\r\n            if (typeof videoTag.setSinkId == \"function\")\r\n              videoTag\r\n                .setSinkId(speakerId)\r\n                .then((_: any) =>\r\n                  console.log(\"Speaker Changed to - \" + speakerId)\r\n                )\r\n                .catch((_: any) => console.log(\"error\"));\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const unMount = () => {\r\n    return () => {\r\n      if (!modalOpen) {\r\n        if (stream) {\r\n          stream.getTracks().forEach((track) => {\r\n            track.stop();\r\n          });\r\n        }\r\n        if (speechEvents) {\r\n          speechEvents.stop();\r\n        }\r\n        setStream(undefined);\r\n      }\r\n    };\r\n  };\r\n  const init = () => {\r\n    if (!stream) {\r\n      const el = document.querySelector(\"#deviceConfigTag\") as HTMLVideoElement;\r\n      if (el && !videoEl) {\r\n        setVideoEl(el);\r\n        startStream(videoId, audioId, speakerId);\r\n      }\r\n    }\r\n  };\r\n  const update = () => {\r\n    if (\r\n      (videoId !== usedVideo ||\r\n        audioId !== usedAudio ||\r\n        speakerId !== usedSpeaker ||\r\n        videoDevices !== localVideoDevices ||\r\n        audioDevices !== localAudioDevices ||\r\n        speakerDevices !== localSpeakerDevices) &&\r\n      modalOpen\r\n    ) {\r\n      setLocalVideoDevices(videoDevices);\r\n      setLocalAudioDevices(audioDevices);\r\n      setLocalSpeakerDevices(speakerDevices);\r\n      startStream(videoId, audioId, speakerId);\r\n    }\r\n  };\r\n  const onStreamChange = () => {\r\n    if (localStream && localStream.id !== stream?.id) {\r\n      localStream.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n    }\r\n    setLocalStream(stream);\r\n  };\r\n  useEffect(unMount, [modalOpen]);\r\n  useEffect(init, []);\r\n  useEffect(update, [videoId, audioId, speakerId, videoDevices]);\r\n  useEffect(onStreamChange, [stream]);\r\n  return (\r\n    <video\r\n      style={{ maxWidth: \"463px\", display: videoDevices[0] ? \"block\" : \"none\" }}\r\n      id=\"deviceConfigTag\"\r\n      className=\"video\"\r\n      autoPlay\r\n      playsInline\r\n      muted\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}