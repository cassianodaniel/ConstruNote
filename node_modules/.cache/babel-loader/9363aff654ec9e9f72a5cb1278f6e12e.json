{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{parseChats}from\"../utils/parseUtils\";var ChatsBusiness=/*#__PURE__*/function(){function ChatsBusiness(api,contacts,groups,user){_classCallCheck(this,ChatsBusiness);this.api=api;this.contacts=contacts;this.groups=groups;this.user=user;}_createClass(ChatsBusiness,[{key:\"list\",value:function list(callback){var _this=this;if(!this.api)return;this.contacts.list(function(__){_this.groups.list(function(__){_this.api.getChats({paramsUrl:{limit:5000}},function(response){//Retornando os Chats\nif(!_this.api){return;}_this.user.get(function(user){var returnChats=parseChats(response.chats,_this.groups.getGroups(),_this.contacts.getContacts(),user);callback(returnChats);});});});});}}]);return ChatsBusiness;}();export{ChatsBusiness as default};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/Chats.ts"],"names":["parseChats","ChatsBusiness","api","contacts","groups","user","callback","list","__","getChats","paramsUrl","limit","response","get","returnChats","chats","getGroups","getContacts"],"mappings":"8VAEA,OAASA,UAAT,KAA2B,qBAA3B,C,GASqBC,CAAAA,a,yBACnB,uBACUC,GADV,CAEUC,QAFV,CAGUC,MAHV,CAIUC,IAJV,CAKE,0CAJQH,GAIR,CAJQA,GAIR,MAHQC,QAGR,CAHQA,QAGR,MAFQC,MAER,CAFQA,MAER,MADQC,IACR,CADQA,IACR,CAAE,C,4DACCC,Q,CAAyB,gBAC5B,GAAI,CAAC,KAAKJ,GAAV,CAAe,OACf,KAAKC,QAAL,CAAcI,IAAd,CAAmB,SAACC,EAAD,CAAQ,CACzB,KAAI,CAACJ,MAAL,CAAYG,IAAZ,CAAiB,SAACC,EAAD,CAAQ,CACvB,KAAI,CAACN,GAAL,CAASO,QAAT,CAAkB,CAAEC,SAAS,CAAE,CAAEC,KAAK,CAAE,IAAT,CAAb,CAAlB,CAAkD,SAACC,QAAD,CAAmB,CACnE;AACA,GAAI,CAAC,KAAI,CAACV,GAAV,CAAe,CACb,OACD,CACD,KAAI,CAACG,IAAL,CAAUQ,GAAV,CAAc,SAACR,IAAD,CAAU,CACtB,GAAMS,CAAAA,WAAoB,CAAGd,UAAU,CACrCY,QAAQ,CAACG,KAD4B,CAErC,KAAI,CAACX,MAAL,CAAYY,SAAZ,EAFqC,CAGrC,KAAI,CAACb,QAAL,CAAcc,WAAd,EAHqC,CAIrCZ,IAJqC,CAAvC,CAMAC,QAAQ,CAACQ,WAAD,CAAR,CACD,CARD,EASD,CAdD,EAeD,CAhBD,EAiBD,CAlBD,EAmBD,C,oCA5BkBb,a","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IChat from \"../../alias/IChat\";\r\nimport { parseChats } from \"../utils/parseUtils\";\r\nimport ContactsBusiness from \"./Contacts\";\r\nimport GroupsBusiness from \"./Groups\";\r\nimport UserBusiness from \"./User\";\r\n\r\ninterface ChatsCallBack {\r\n  (chats: IChat[]): void;\r\n}\r\nexport default interface ChatsBusiness {}\r\nexport default class ChatsBusiness {\r\n  constructor(\r\n    private api: API,\r\n    private contacts: ContactsBusiness,\r\n    private groups: GroupsBusiness,\r\n    private user: UserBusiness\r\n  ) {}\r\n  list(callback: ChatsCallBack) {\r\n    if (!this.api) return;\r\n    this.contacts.list((__) => {\r\n      this.groups.list((__) => {\r\n        this.api.getChats({ paramsUrl: { limit: 5000 } }, (response: any) => {\r\n          //Retornando os Chats\r\n          if (!this.api) {\r\n            return;\r\n          }\r\n          this.user.get((user) => {\r\n            const returnChats: IChat[] = parseChats(\r\n              response.chats,\r\n              this.groups.getGroups(),\r\n              this.contacts.getContacts(),\r\n              user\r\n            );\r\n            callback(returnChats);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}