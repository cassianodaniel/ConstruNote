{"ast":null,"code":"import { dynamicRequire, fill, logger } from '@sentry/utils';\n/** Tracing integration for node-mysql package */\n\nvar Mysql =\n/** @class */\nfunction () {\n  function Mysql() {\n    /**\n     * @inheritDoc\n     */\n    this.name = Mysql.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n    var connection;\n\n    try {\n      // Unfortunatelly mysql is using some custom loading system and `Connection` is not exported directly.\n      connection = dynamicRequire(module, 'mysql/lib/Connection.js');\n    } catch (e) {\n      logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    } // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n\n\n    fill(connection.prototype, 'query', function (orig) {\n      return function (options, values, callback) {\n        var _a, _b;\n\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof options === 'string' ? options : options.sql,\n          op: \"db\"\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Mysql.id = 'Mysql';\n  return Mysql;\n}();\n\nexport { Mysql };","map":{"version":3,"sources":["../../src/integrations/mysql.ts"],"names":[],"mappings":"AAEA,SAAS,cAAT,EAAyB,IAAzB,EAA+B,MAA/B,QAA6C,eAA7C;AAQA;;AACA,IAAA,KAAA;AAAA;AAAA,YAAA;AAAA,WAAA,KAAA,GAAA;AAME;;AAEG;AACI,SAAA,IAAA,GAAe,KAAK,CAAC,EAArB;AA+CR;AA7CC;;AAEG;;;AACI,EAAA,KAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,CAAjB,EAAwD,aAAxD,EAAgF;AAC9E,QAAI,UAAJ;;AAEA,QAAI;AACF;AACA,MAAA,UAAU,GAAG,cAAc,CAAC,MAAD,EAAS,yBAAT,CAA3B;AACD,KAHD,CAGE,OAAO,CAAP,EAAU;AACV,MAAA,MAAM,CAAC,KAAP,CAAa,0DAAb;AACA;AACD,KAT6E,CAW9E;AACA;AACA;AACA;;;AACA,IAAA,IAAI,CAAC,UAAU,CAAC,SAAZ,EAAuB,OAAvB,EAAgC,UAAS,IAAT,EAAyB;AAC3D,aAAO,UAAwB,OAAxB,EAA0C,MAA1C,EAA2D,QAA3D,EAA4E;;;AACjF,YAAM,KAAK,GAAG,aAAa,GAAG,QAAhB,EAAd;AACA,YAAM,UAAU,GAAA,CAAA,EAAA,GAAG,KAAH,MAAQ,IAAR,IAAQ,EAAA,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAQ,EAAA,CAAE,OAAF,EAAxB;AACA,YAAM,IAAI,GAAA,CAAA,EAAA,GAAG,UAAH,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,UAAF,CAAa;AAClC,UAAA,WAAW,EAAE,OAAO,OAAP,KAAmB,QAAnB,GAA8B,OAA9B,GAAyC,OAA2B,CAAC,GADhD;AAElC,UAAA,EAAE,EAAE;AAF8B,SAAb,CAAvB;;AAKA,YAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,iBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC,UAAS,GAAT,EAAqB,MAArB,EAAsC,MAAtC,EAAqD;;;AAC3F,aAAA,EAAA,GAAA,IAAA,MAAI,IAAJ,IAAI,EAAA,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAI,EAAA,CAAE,MAAF,EAAJ;AACA,YAAA,QAAQ,CAAC,GAAD,EAAM,MAAN,EAAc,MAAd,CAAR;AACD,WAHM,CAAP;AAID;;AAED,YAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,iBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,OAAhB,EAAyB,UAAS,GAAT,EAAqB,MAArB,EAAsC,MAAtC,EAAqD;;;AACnF,aAAA,EAAA,GAAA,IAAA,MAAI,IAAJ,IAAI,EAAA,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAI,EAAA,CAAE,MAAF,EAAJ;AACA,YAAA,MAAM,CAAC,GAAD,EAAM,MAAN,EAAc,MAAd,CAAN;AACD,WAHM,CAAP;AAID;;AAED,eAAO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC,QAAjC,CAAP;AACD,OAvBD;AAwBD,KAzBG,CAAJ;AA0BD,GAzCM;AAbP;;AAEG;;;AACW,EAAA,KAAA,CAAA,EAAA,GAAa,OAAb;AAoDhB,SAAA,KAAA;AAAC,CAxDD,EAAA;;SAAa,K","sourcesContent":["import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { dynamicRequire, fill, logger } from '@sentry/utils';\n\ninterface MysqlConnection {\n  prototype: {\n    query: () => void;\n  };\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mysql.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    let connection: MysqlConnection;\n\n    try {\n      // Unfortunatelly mysql is using some custom loading system and `Connection` is not exported directly.\n      connection = dynamicRequire(module, 'mysql/lib/Connection.js');\n    } catch (e) {\n      logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(connection.prototype, 'query', function(orig: () => void) {\n      return function(this: unknown, options: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: `db`,\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function(err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function(err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}