{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{/* \r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown, */Card,Media}from\"reactstrap\";import{Link}from\"react-router-dom\";import Lightbox from\"react-image-lightbox\";import\"react-image-lightbox/style.css\";var MediaTabFiles=function MediaTabFiles(_ref){var list=_ref.list;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(\"null\"),_useState4=_slicedToArray(_useState3,2),currentImage=_useState4[0],setCurrentImage=_useState4[1];var toggleLightbox=function toggleLightbox(currentImage){setIsOpen(!isOpen);setCurrentImage(currentImage);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"p-2 border mb-2 d-flex flex-row flex-wrap\"},list&&list.map(function(item,index){return item.isImageMessage||item.isVideoMessage?/*#__PURE__*/React.createElement(Media,{key:index,header:\"true\",className:\"align-content-end bd-highlight\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-1\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(){return toggleLightbox(item.thumbnail);},className:\"popup-img d-inline-block m-1\",title:item.name},/*#__PURE__*/React.createElement(\"img\",{src:item.thumbnail,alt:item.name,className:\"rounded border\",style:{maxWidth:140,maxHeight:140}})),/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(\"div\",{className:\"ml-1\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline mb-0 font-size-18\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"ct-pointer\",style:{}},/*#__PURE__*/React.createElement(\"a\",{href:item.thumbnail,target:\"_blank\",rel:\"noopener noreferrer\",download:true},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-download-2-line\"}))))))))):null;})),isOpen&&/*#__PURE__*/React.createElement(Lightbox,{mainSrc:currentImage,onCloseRequest:toggleLightbox,imageTitle:\"Image File\"}));};export default MediaTabFiles;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MediaTabFiles.tsx"],"names":["React","useState","Card","Media","Link","Lightbox","MediaTabFiles","list","isOpen","setIsOpen","currentImage","setCurrentImage","toggleLightbox","map","item","index","isImageMessage","isVideoMessage","thumbnail","name","maxWidth","maxHeight"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACE;AACF;AACA;AACA;AACA,0BACEC,IANF,CAOEC,KAPF,KAQO,YARP,CASA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAO,gCAAP,CAKA,GAAMC,CAAAA,aAAuC,CAAG,QAA1CA,CAAAA,aAA0C,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,eAChCN,QAAQ,CAAC,KAAD,CADwB,wCACrDO,MADqD,eAC7CC,SAD6C,8BAEpBR,QAAQ,CAAC,MAAD,CAFY,yCAErDS,YAFqD,eAEvCC,eAFuC,eAI5D,GAAMC,CAAAA,cAAmB,CAAG,QAAtBA,CAAAA,cAAsB,CAACF,YAAD,CAAuB,CACjDD,SAAS,CAAC,CAACD,MAAF,CAAT,CACAG,eAAe,CAACD,YAAD,CAAf,CACD,CAHD,CAKA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,2CAAhB,EACGH,IAAI,EACHA,IAAI,CAACM,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,QACPD,CAAAA,IAAI,CAACE,cAAL,EAAuBF,IAAI,CAACG,cAA5B,cACE,oBAAC,KAAD,EACE,GAAG,CAAEF,KADP,CAEE,MAAM,CAAC,MAFT,CAGE,SAAS,CAAC,gCAHZ,eAKE,2BAAK,SAAS,CAAC,MAAf,eACE,oBAAC,IAAD,EACE,EAAE,CAAC,GADL,CAEE,OAAO,CAAE,yBAAMH,CAAAA,cAAc,CAACE,IAAI,CAACI,SAAN,CAApB,EAFX,CAGE,SAAS,CAAC,8BAHZ,CAIE,KAAK,CAAEJ,IAAI,CAACK,IAJd,eAME,2BACE,GAAG,CAAEL,IAAI,CAACI,SADZ,CAEE,GAAG,CAAEJ,IAAI,CAACK,IAFZ,CAGE,SAAS,CAAC,gBAHZ,CAIE,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAiBC,SAAS,CAAE,GAA5B,CAJT,EANF,CADF,cAcE,oBAAC,KAAD,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,0BAAI,SAAS,CAAC,+BAAd,eACE,0BAAI,SAAS,CAAC,kBAAd,eACE,4BAAM,SAAS,CAAC,YAAhB,CAA6B,KAAK,CAAE,EAApC,eACE,yBACE,IAAI,CAAEP,IAAI,CAACI,SADb,CAEE,MAAM,CAAC,QAFT,CAGE,GAAG,CAAC,qBAHN,CAIE,QAAQ,KAJV,eAME,yBAAG,SAAS,CAAC,oBAAb,EANF,CADF,CADF,CADF,CADF,CADF,CAdF,CALF,CADF,CAqDI,IAtDG,EAAT,CAFJ,CADF,CA4DGV,MAAM,eACL,oBAAC,QAAD,EACE,OAAO,CAAEE,YADX,CAEE,cAAc,CAAEE,cAFlB,CAGE,UAAU,CAAC,YAHb,EA7DJ,CADF,CAsED,CA/ED,CAiFA,cAAeN,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  /* \r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown, */\r\n  Card,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport IAttachedFiles from \"./../alias/IAttachedFiles\";\r\ninterface IMediaTabFiles {\r\n  list: IAttachedFiles[] | undefined;\r\n}\r\nconst MediaTabFiles: React.FC<IMediaTabFiles> = ({ list }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"p-2 border mb-2 d-flex flex-row flex-wrap\">\r\n        {list &&\r\n          list.map((item, index) =>\r\n            item.isImageMessage || item.isVideoMessage ? (\r\n              <Media\r\n                key={index}\r\n                header=\"true\"\r\n                className=\"align-content-end bd-highlight\"\r\n              >\r\n                <div className=\"ml-1\">\r\n                  <Link\r\n                    to=\"#\"\r\n                    onClick={() => toggleLightbox(item.thumbnail)}\r\n                    className=\"popup-img d-inline-block m-1\"\r\n                    title={item.name}\r\n                  >\r\n                    <img\r\n                      src={item.thumbnail}\r\n                      alt={item.name}\r\n                      className=\"rounded border\"\r\n                      style={{ maxWidth: 140, maxHeight: 140 }}\r\n                    />\r\n                  </Link>\r\n                  <Media>\r\n                    <div className=\"ml-1\">\r\n                      <ul className=\"list-inline mb-0 font-size-18\">\r\n                        <li className=\"list-inline-item\">\r\n                          <span className=\"ct-pointer\" style={{}}>\r\n                            <a\r\n                              href={item.thumbnail}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              download\r\n                            >\r\n                              <i className=\"ri-download-2-line\"></i>\r\n                            </a>\r\n                          </span>\r\n                        </li>\r\n                        {/* \r\n                      <UncontrolledDropdown className=\"list-inline-item\">\r\n                        <DropdownToggle className=\"text-muted px-1\" tag=\"a\">\r\n                          <i className=\"ri-more-fill\"></i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu left=\"true\">\r\n                          <DropdownItem>{t(\"Favorite message\")}</DropdownItem>\r\n                          <DropdownItem>{t(\"Forward message\")}</DropdownItem>\r\n                          <DropdownItem divider />\r\n                          <DropdownItem>{t(\"Delete\")}</DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                      */}\r\n                      </ul>\r\n                    </div>\r\n                  </Media>\r\n                </div>\r\n              </Media>\r\n            ) : null\r\n          )}\r\n      </Card>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={currentImage}\r\n          onCloseRequest={toggleLightbox}\r\n          imageTitle=\"Image File\"\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MediaTabFiles;\r\n"]},"metadata":{},"sourceType":"module"}