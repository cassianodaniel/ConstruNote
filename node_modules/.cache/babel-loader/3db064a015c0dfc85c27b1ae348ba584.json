{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupNotification.tsx\";\nimport React from 'react';\nimport { useGroup } from '../contexts/GroupContext';\nimport { useContact } from '../contexts/ContactContext';\n\nconst GroupNotification = ({\n  msg\n}) => {\n  let userThatIsRemoving;\n  const {\n    groups,\n    removedMember\n  } = useGroup();\n  const {\n    contacts,\n    contactsOutsideUserContacts\n  } = useContact();\n\n  switch (msg.eventId) {\n    case 6:\n      groups.forEach(grp => {\n        if (grp.groupId === msg.fromUser) {\n          //msg.fromUser é o id do grupo que ocorrerá o evento?\n          contacts.forEach(ctc => {\n            if (ctc.id === msg.eventBody) {\n              userThatIsRemoving = msg.eventBody;\n            }\n          });\n          contactsOutsideUserContacts.forEach(ctc => {\n            if (ctc.id === msg.eventBody) {\n              userThatIsRemoving = msg.eventBody;\n            }\n          });\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, removedMember === null || removedMember === void 0 ? void 0 : removedMember.name, \" has been removed by \", userThatIsRemoving, \"!\"));\n\n    default:\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default GroupNotification;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupNotification.tsx"],"names":["React","useGroup","useContact","GroupNotification","msg","userThatIsRemoving","groups","removedMember","contacts","contactsOutsideUserContacts","eventId","forEach","grp","groupId","fromUser","ctc","id","eventBody","color","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAOA,MAAMC,iBAAgD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAClE,MAAIC,kBAAJ;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BN,QAAQ,EAA1C;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4CP,UAAU,EAA5D;;AACA,UAAOE,GAAG,CAACM,OAAX;AACI,SAAK,CAAL;AACAJ,MAAAA,MAAM,CAACK,OAAP,CAAgBC,GAAD,IAAS;AACpB,YAAGA,GAAG,CAACC,OAAJ,KAAgBT,GAAG,CAACU,QAAvB,EAAgC;AAAE;AAC9BN,UAAAA,QAAQ,CAACG,OAAT,CAAkBI,GAAD,IAAS;AACtB,gBAAGA,GAAG,CAACC,EAAJ,KAAWZ,GAAG,CAACa,SAAlB,EAA4B;AACxBZ,cAAAA,kBAAkB,GAAGD,GAAG,CAACa,SAAzB;AACH;AACJ,WAJD;AAKAR,UAAAA,2BAA2B,CAACE,OAA5B,CAAqCI,GAAD,IAAS;AACzC,gBAAGA,GAAG,CAACC,EAAJ,KAAWZ,GAAG,CAACa,SAAlB,EAA4B;AACxBZ,cAAAA,kBAAkB,GAAGD,GAAG,CAACa,SAAzB;AACH;AACJ,WAJD;AAKH;AACJ,OAbD;AAcA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,aADL,aACKA,aADL,uBACKA,aAAa,CAAEY,IADpB,2BAC+Cd,kBAD/C,MADJ,CADJ;;AAOA;AACI,0BAAO,yCAAP;AAxBR;AA0BH,CA9BD;;AAgCA,eAAeF,iBAAf","sourcesContent":["import React from 'react';\r\nimport IMessage from '../alias/IMessage';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport { useContact } from '../contexts/ContactContext';\r\n\r\ninterface IGroupNotification{\r\n    msg: IMessage;\r\n}\r\n\r\n\r\nconst GroupNotification : React.FC<IGroupNotification> = ({ msg }) => {\r\n    let userThatIsRemoving: any;\r\n    const { groups, removedMember } = useGroup();\r\n    const { contacts, contactsOutsideUserContacts } = useContact();\r\n    switch(msg.eventId){\r\n        case 6:\r\n        groups.forEach((grp) => {\r\n            if(grp.groupId === msg.fromUser){ //msg.fromUser é o id do grupo que ocorrerá o evento?\r\n                contacts.forEach((ctc) => {\r\n                    if(ctc.id === msg.eventBody){\r\n                        userThatIsRemoving = msg.eventBody;\r\n                    }\r\n                })\r\n                contactsOutsideUserContacts.forEach((ctc) => {\r\n                    if(ctc.id === msg.eventBody){\r\n                        userThatIsRemoving = msg.eventBody;\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\" style={{color: \"red\"}}>\r\n                    {removedMember?.name} has been removed by {userThatIsRemoving}!\r\n                </div>\r\n            </div>\r\n        );\r\n        default:\r\n            return <></>    \r\n    }\r\n}\r\n\r\nexport default GroupNotification;"]},"metadata":{},"sourceType":"module"}