{"ast":null,"code":"import { parseContact } from \"../utils/parseUtils\";\nexport default class ContactsBusiness {\n  constructor(api) {\n    this.api = api;\n    this.contacts = void 0;\n    this.contacts = new Map();\n  }\n\n  getContacts() {\n    return this.contacts;\n  }\n\n  list(callback) {\n    this.api.getContacts({\n      paramsUrl: {\n        added: true,\n        limit: 5000,\n        contactType: \"contact\"\n      }\n    }, (apiContacts, err) => {\n      // Populando o Map de contatos\n      if (!err) {\n        if (!this.api) return;\n        this.populate(apiContacts);\n        callback(Array.from(this.contacts.values()));\n      }\n    });\n  }\n\n  populate(apiContacts) {\n    apiContacts.contacts.forEach(contact => {\n      this.contacts.set(contact.id, parseContact(contact));\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/business/Contacts.ts"],"names":["parseContact","ContactsBusiness","constructor","api","contacts","Map","getContacts","list","callback","paramsUrl","added","limit","contactType","apiContacts","err","populate","Array","from","values","forEach","contact","set","id"],"mappings":"AAEA,SAASA,YAAT,QAA6B,qBAA7B;AAMA,eAAe,MAAMC,gBAAN,CAAuB;AAEpCC,EAAAA,WAAW,CAASC,GAAT,EAAmB;AAAA,SAAVA,GAAU,GAAVA,GAAU;AAAA,SADtBC,QACsB;AAC5B,SAAKA,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACD;;AACDC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKF,QAAZ;AACD;;AACDG,EAAAA,IAAI,CAACC,QAAD,EAA6B;AAC/B,SAAKL,GAAL,CAASG,WAAT,CACE;AAAEG,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE,IAAtB;AAA4BC,QAAAA,WAAW,EAAE;AAAzC;AAAb,KADF,EAEE,CAACC,WAAD,EAAmBC,GAAnB,KAAgC;AAC9B;AACA,UAAI,CAACA,GAAL,EAAU;AACR,YAAI,CAAC,KAAKX,GAAV,EAAe;AACf,aAAKY,QAAL,CAAcF,WAAd;AACAL,QAAAA,QAAQ,CAACQ,KAAK,CAACC,IAAN,CAAW,KAAKb,QAAL,CAAcc,MAAd,EAAX,CAAD,CAAR;AACD;AACF,KATH;AAWD;;AACDH,EAAAA,QAAQ,CAACF,WAAD,EAAmB;AACzBA,IAAAA,WAAW,CAACT,QAAZ,CAAqBe,OAArB,CAA8BC,OAAD,IAAkB;AAC7C,WAAKhB,QAAL,CAAciB,GAAd,CAAkBD,OAAO,CAACE,EAA1B,EAA8BtB,YAAY,CAACoB,OAAD,CAA1C;AACD,KAFD;AAGD;;AAzBmC","sourcesContent":["import API from \"@digivox/apicommunicator\";\r\nimport IContact from \"../../alias/IContact\";\r\nimport { parseContact } from \"../utils/parseUtils\";\r\n\r\ninterface ContactsCallBack {\r\n  (contacts: IContact[]): void;\r\n}\r\nexport default interface ContactsBusiness {}\r\nexport default class ContactsBusiness {\r\n  private contacts: Map<string, IContact>;\r\n  constructor(private api: API) {\r\n    this.contacts = new Map<string, IContact>();\r\n  }\r\n  getContacts() {\r\n    return this.contacts;\r\n  }\r\n  list(callback: ContactsCallBack) {\r\n    this.api.getContacts(\r\n      { paramsUrl: { added: true, limit: 5000, contactType: \"contact\" } },\r\n      (apiContacts: any, err: any) => {\r\n        // Populando o Map de contatos\r\n        if (!err) {\r\n          if (!this.api) return;\r\n          this.populate(apiContacts);\r\n          callback(Array.from(this.contacts.values()));\r\n        }\r\n      }\r\n    );\r\n  }\r\n  populate(apiContacts: any) {\r\n    apiContacts.contacts.forEach((contact: any) => {\r\n      this.contacts.set(contact.id, parseContact(contact));\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}