{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";// import Webcam from \"react-user-media\";\nimport{useTranslation}from\"react-i18next\";import{useModal}from\"../contexts/ModalContext\";import{Video}from\"./Video\";import{Button,Input,InputGroupText,InputGroup,InputGroupAddon,Modal,Progress}from\"reactstrap\";import{useCall}from\"../contexts/CallContext\";var ConfigDevices=function ConfigDevices(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedVideo=_useState2[0],setSelectedVideo=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedAudio=_useState4[0],setSelectedAudio=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),selectedSpeaker=_useState6[0],setSelectedSpeaker=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),videoDevices=_useState8[0],setVideoDevices=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),audioDevices=_useState10[0],setAudioDevices=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),speakerDevices=_useState12[0],setSpeakerDevices=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),speakerVolume=_useState14[0],setSpeakerVolume=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),speaking=_useState16[0],setSpeaking=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),stream=_useState18[0],setStream=_useState18[1];var _useCall=useCall(),setUpdateConstraints=_useCall.setUpdateConstraints;var _useModal=useModal(),showModalDevicesConfig=_useModal.showModalDevicesConfig,setShowModalDevicesConfig=_useModal.setShowModalDevicesConfig;var _useTranslation=useTranslation(),t=_useTranslation.t;var init=function init(){navigator.mediaDevices.enumerateDevices().then(function(devices){var vidDevices=[];var audDevices=[];var spkDevices=[];devices.forEach(function(device){switch(device.kind){case\"audioinput\":audDevices.push(device);break;case\"videoinput\":vidDevices.push(device);break;case\"audiooutput\":spkDevices.push(device);break;}});setAudioDevices(audDevices);setVideoDevices(vidDevices);setSpeakerDevices(spkDevices);});};var handleChangeVideo=function handleChangeVideo(ev){var idVideo=ev.target.value;var video=videoDevices.filter(function(v){return v.deviceId===idVideo;})[0];setSelectedVideo(video);};var handleChangeAudio=function handleChangeAudio(ev){var idAudio=ev.target.value;var audio=audioDevices.filter(function(v){return v.deviceId===idAudio;})[0];setSelectedAudio(audio);};var handleChangeSpeaker=function handleChangeSpeaker(ev){var idSpeaker=ev.target.value;var speaker=speakerDevices.filter(function(v){return v.deviceId===idSpeaker;})[0];setSelectedSpeaker(speaker);};var parseAndSetSpeakerVolumn=function parseAndSetSpeakerVolumn(volume){setSpeakerVolume(Math.round(Math.abs(volume<-100?-100:volume)));};var changeSpeaking=function changeSpeaking(spk){setSpeaking(spk);};var onPreferencesSubmit=function onPreferencesSubmit(){setUpdateConstraints({videoId:selectedVideo===null||selectedVideo===void 0?void 0:selectedVideo.deviceId,audioId:selectedAudio===null||selectedAudio===void 0?void 0:selectedAudio.deviceId,speakerId:selectedSpeaker===null||selectedSpeaker===void 0?void 0:selectedSpeaker.deviceId});setShowModalDevicesConfig(false);};useEffect(init,[]);return/*#__PURE__*/React.createElement(Modal,{closable:false,centered:true,isOpen:showModalDevicesConfig},/*#__PURE__*/React.createElement(\"div\",{className:\"ct-live-video-view\"},/*#__PURE__*/React.createElement(Video,{audioId:selectedAudio?selectedAudio.deviceId:undefined,videoId:selectedVideo?selectedVideo.deviceId:undefined,speakerId:selectedSpeaker?selectedSpeaker.deviceId:undefined,stream:stream,setStream:setStream,speakerVolume:speakerVolume,speaking:speaking,modalOpen:showModalDevicesConfig,setSpeakerVolume:parseAndSetSpeakerVolumn,setSpeaking:changeSpeaking})),/*#__PURE__*/React.createElement(\"div\",{className:\"ct-video-controller\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-vidicon-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedVideo&&selectedVideo.deviceId?selectedVideo.deviceId:\"default\",onChange:handleChangeVideo},videoDevices.map(function(video,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:video.deviceId},video.label);}))),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-mic-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedAudio&&selectedAudio.deviceId?selectedAudio.deviceId:\"default\",onChange:handleChangeAudio},audioDevices.map(function(audio,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:audio.deviceId},audio.label);}))),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ri-speaker-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"select\",defaultValue:selectedSpeaker&&selectedSpeaker.deviceId?selectedSpeaker.deviceId:\"default\",onChange:handleChangeSpeaker},speakerDevices.map(function(speaker,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:speaker.deviceId},speaker.label);}))),/*#__PURE__*/React.createElement(Progress,{color:\"info\",value:speaking?speakerVolume:0})),/*#__PURE__*/React.createElement(\"div\",{className:\"ct-mp-2\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",onClick:onPreferencesSubmit},t(\"Salvar\")),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setShowModalDevicesConfig(false);}},\" \",t(\"Cancel\"))));};export default ConfigDevices;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ConfigDevices.tsx"],"names":["React","useEffect","useState","useTranslation","useModal","Video","Button","Input","InputGroupText","InputGroup","InputGroupAddon","Modal","Progress","useCall","ConfigDevices","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","selectedSpeaker","setSelectedSpeaker","videoDevices","setVideoDevices","audioDevices","setAudioDevices","speakerDevices","setSpeakerDevices","speakerVolume","setSpeakerVolume","speaking","setSpeaking","stream","setStream","setUpdateConstraints","showModalDevicesConfig","setShowModalDevicesConfig","t","init","navigator","mediaDevices","enumerateDevices","then","devices","vidDevices","audDevices","spkDevices","forEach","device","kind","push","handleChangeVideo","ev","idVideo","target","value","video","filter","v","deviceId","handleChangeAudio","idAudio","audio","handleChangeSpeaker","idSpeaker","speaker","parseAndSetSpeakerVolumn","volume","Math","round","abs","changeSpeaking","spk","onPreferencesSubmit","videoId","audioId","speakerId","undefined","map","index","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import Webcam from \"react-user-media\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useModal } from \"../contexts/ModalContext\";\r\nimport { Video } from \"./Video\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputGroupText,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Modal,\r\n  Progress,\r\n} from \"reactstrap\";\r\nimport { useCall } from \"../contexts/CallContext\";\r\n\r\nconst ConfigDevices: React.FC = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo>();\r\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo>();\r\n  const [selectedSpeaker, setSelectedSpeaker] = useState<MediaDeviceInfo>();\r\n  const [videoDevices, setVideoDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [audioDevices, setAudioDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [speakerDevices, setSpeakerDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [speakerVolume, setSpeakerVolume] = useState<number>();\r\n  const [speaking, setSpeaking] = useState<boolean>();\r\n  const [stream, setStream] = useState<MediaStream | undefined>();\r\n  const { setUpdateConstraints } = useCall();\r\n  const { showModalDevicesConfig, setShowModalDevicesConfig } = useModal();\r\n  const { t } = useTranslation();\r\n  const init = () => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const vidDevices: MediaDeviceInfo[] = [];\r\n      const audDevices: MediaDeviceInfo[] = [];\r\n      const spkDevices: MediaDeviceInfo[] = [];\r\n      devices.forEach((device) => {\r\n        switch (device.kind) {\r\n          case \"audioinput\":\r\n            audDevices.push(device);\r\n            break;\r\n          case \"videoinput\":\r\n            vidDevices.push(device);\r\n            break;\r\n          case \"audiooutput\":\r\n            spkDevices.push(device);\r\n            break;\r\n        }\r\n      });\r\n      setAudioDevices(audDevices);\r\n      setVideoDevices(vidDevices);\r\n      setSpeakerDevices(spkDevices);\r\n    });\r\n  };\r\n\r\n  const handleChangeVideo = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idVideo = ev.target.value;\r\n    const video = videoDevices.filter((v) => v.deviceId === idVideo)[0];\r\n    setSelectedVideo(video);\r\n  };\r\n  const handleChangeAudio = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idAudio = ev.target.value;\r\n    const audio = audioDevices.filter((v) => v.deviceId === idAudio)[0];\r\n    setSelectedAudio(audio);\r\n  };\r\n  const handleChangeSpeaker = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idSpeaker = ev.target.value;\r\n    const speaker = speakerDevices.filter((v) => v.deviceId === idSpeaker)[0];\r\n    setSelectedSpeaker(speaker);\r\n  };\r\n  const parseAndSetSpeakerVolumn = (volume: number) => {\r\n    setSpeakerVolume(Math.round(Math.abs(volume < -100 ? -100 : volume)));\r\n  };\r\n  const changeSpeaking = (spk: boolean) => {\r\n    setSpeaking(spk);\r\n  };\r\n  const onPreferencesSubmit = () => {\r\n    setUpdateConstraints({\r\n      videoId: selectedVideo?.deviceId,\r\n      audioId: selectedAudio?.deviceId,\r\n      speakerId: selectedSpeaker?.deviceId,\r\n    });\r\n    setShowModalDevicesConfig(false);\r\n  };\r\n  useEffect(init, []);\r\n  return (\r\n    <Modal closable={false} centered isOpen={showModalDevicesConfig}>\r\n      <div className=\"ct-live-video-view\">\r\n        <Video\r\n          audioId={selectedAudio ? selectedAudio.deviceId : undefined}\r\n          videoId={selectedVideo ? selectedVideo.deviceId : undefined}\r\n          speakerId={selectedSpeaker ? selectedSpeaker.deviceId : undefined}\r\n          stream={stream}\r\n          setStream={setStream}\r\n          speakerVolume={speakerVolume}\r\n          speaking={speaking}\r\n          modalOpen={showModalDevicesConfig}\r\n          setSpeakerVolume={parseAndSetSpeakerVolumn}\r\n          setSpeaking={changeSpeaking}\r\n        />\r\n        {/* <Webcam ref={(ref) => this.webcam = ref} \r\n\t\t\t\t\t \tvideo={{deviceId: {exact: selectedVideo ? selectedVideo.id : undefined}}}\r\n\t\t\t\t\t\taudio={{deviceId: {exact: selectedAudio ? selectedAudio.id : undefined}}}\r\n\t\t\t\t\t\t/>  */}\r\n      </div>\r\n      <div className=\"ct-video-controller\">\r\n        <InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className=\"ri-vidicon-line\" />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input\r\n            type=\"select\"\r\n            defaultValue={\r\n              selectedVideo && selectedVideo.deviceId\r\n                ? selectedVideo.deviceId\r\n                : \"default\"\r\n            }\r\n            onChange={handleChangeVideo}\r\n          >\r\n            {videoDevices.map((video, index) => (\r\n              <option key={index} value={video.deviceId}>\r\n                {video.label}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className=\"ri-mic-line\" />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input\r\n            type=\"select\"\r\n            defaultValue={\r\n              selectedAudio && selectedAudio.deviceId\r\n                ? selectedAudio.deviceId\r\n                : \"default\"\r\n            }\r\n            onChange={handleChangeAudio}\r\n          >\r\n            {audioDevices.map((audio, index) => (\r\n              <option key={index} value={audio.deviceId}>\r\n                {audio.label}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className=\"ri-speaker-line\" />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input\r\n            type=\"select\"\r\n            defaultValue={\r\n              selectedSpeaker && selectedSpeaker.deviceId\r\n                ? selectedSpeaker.deviceId\r\n                : \"default\"\r\n            }\r\n            onChange={handleChangeSpeaker}\r\n          >\r\n            {speakerDevices.map((speaker, index) => (\r\n              <option key={index} value={speaker.deviceId}>\r\n                {speaker.label}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n        </InputGroup>\r\n        <Progress color=\"info\" value={speaking ? speakerVolume : 0} />\r\n      </div>\r\n      <div className=\"ct-mp-2\">\r\n        <Button type=\"button\" onClick={onPreferencesSubmit}>\r\n          {t(\"Salvar\")}\r\n        </Button>\r\n        <Button onClick={() => setShowModalDevicesConfig(false)}>\r\n          {\" \"}\r\n          {t(\"Cancel\")}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nexport default ConfigDevices;\r\n"]},"metadata":{},"sourceType":"module"}