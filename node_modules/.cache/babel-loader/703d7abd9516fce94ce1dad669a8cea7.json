{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ContactCell.tsx\";\nimport React from \"react\";\nimport { Avatar, Button } from \"antd\";\nimport IntlMessages from \"../services/utils/IntlMessages\";\nimport { injectIntl } from 'react-intl';\n\nconst ContactCell = () => {\n  const onContactSelect = [],\n        contact = [],\n        selectedContacts = [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-user-item \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-user-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-status-pos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: contact.imageUrl,\n    className: \"ct-size-50\",\n    alt: \"Abbott\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-contact-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ct-chat-user-des ct-text-truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, contact.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `ct-chat-date ${selectedContacts.indexOf(contact.id)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type:\n    /* `${selectedContacts.indexOf(contact.id) > -1 ? \"\" : \"primary\"}` */\n    \"primary\",\n    onClick: () => {\n      if (selectedContacts.indexOf(contact.id) === -1) onContactSelect(contact.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \" \", selectedContacts.indexOf(contact.id) === -1 ? /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"auth.conversation.message.send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"auth.conversation.message.sent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default injectIntl(ContactCell);","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ContactCell.tsx"],"names":["React","Avatar","Button","IntlMessages","injectIntl","ContactCell","onContactSelect","contact","selectedContacts","imageUrl","name","email","indexOf","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,WAAsB,GAAG,MAAM;AAEjC,QAAMC,eAAoB,GAAG,EAA7B;AAAA,QAAiCC,OAAY,GAAG,EAAhD;AAAA,QAAoDC,gBAAqB,GAAG,EAA5E;AACA,sBACE;AACE,IAAA,SAAS,EAAC,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAED,OAAO,CAACE,QAArB;AAA+B,IAAA,SAAS,EAAC,YAAzC;AAAsD,IAAA,GAAG,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCF,OAAO,CAACG,IAA5C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDH,OAAO,CAACI,KAA5D,CAFF,CAPF,eAYE;AAAK,IAAA,SAAS,EAAG,gBAAeH,gBAAgB,CAACI,OAAjB,CAAyBL,OAAO,CAACM,EAAjC,CAAqC,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI;AAAE;AAAsE,aAApF;AAA+F,IAAA,OAAO,EAAE,MAAM;AAC5G,UAAIL,gBAAgB,CAACI,OAAjB,CAAyBL,OAAO,CAACM,EAAjC,MAAyC,CAAC,CAA9C,EAAiDP,eAAe,CAACC,OAAO,CAACM,EAAT,CAAf;AAClD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEKL,gBAAgB,CAACI,OAAjB,CAAyBL,OAAO,CAACM,EAAjC,MAAyC,CAAC,CAA1C,gBACH,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,gBAEH,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAZF,CAFF,CADF;AA0BD,CA7BH;;AA+BA,eAAeT,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Avatar, Button } from \"antd\";\r\nimport IntlMessages from \"../services/utils/IntlMessages\";\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst ContactCell : React.FC = () => {\r\n\r\n    const onContactSelect: any = [], contact: any = [], selectedContacts: any = [] \r\n    return (\r\n      <div\r\n        className=\"ct-chat-user-item \" >\r\n        <div className=\"ct-chat-user-row\">\r\n          <div className=\"ct-chat-avatar\">\r\n            <div className=\"ct-status-pos\">\r\n              <Avatar src={contact.imageUrl} className=\"ct-size-50\" alt=\"Abbott\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ct-chat-contact-col\">\r\n            <div className=\"ct-chat-user-name\">{contact.name}</div>\r\n            <div className=\"ct-chat-user-des ct-text-truncate\">{contact.email}</div>\r\n          </div>\r\n\r\n          <div className={`ct-chat-date ${selectedContacts.indexOf(contact.id)}`}>\r\n            <Button type={/* `${selectedContacts.indexOf(contact.id) > -1 ? \"\" : \"primary\"}` */ \"primary\"} onClick={() => {\r\n              if (selectedContacts.indexOf(contact.id) === -1) onContactSelect(contact.id)\r\n            }}> {selectedContacts.indexOf(contact.id) === -1 ?\r\n              <IntlMessages id=\"auth.conversation.message.send\" /> :\r\n              <IntlMessages id=\"auth.conversation.message.sent\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default injectIntl(ContactCell);\r\n"]},"metadata":{},"sourceType":"module"}