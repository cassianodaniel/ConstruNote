{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import Chat from\"./chat/chatcommunicator\";import{Events}from\"./chat/types/types\";import DeliverStatus from\"../enuns/DeliverStatus\";import ReadStatus from\"../enuns/ReadStatus\";import ChatType from\"../enuns/ChatType\";import{ChatType as XMPPChatType}from\"./types\";import short from\"short-uuid\";import{isUrl}from\"./utils/parseUtils\";import{getFileUrlStr}from\"./utils/formatUtils\";var SquadChatCommunicator=/*#__PURE__*/function(){function SquadChatCommunicator(settings,contacts,groups,user,subscribeFunction){var _this=this;_classCallCheck(this,SquadChatCommunicator);this.settings=settings;this.contacts=contacts;this.groups=groups;this.user=user;this.onGroupEvent=function(event){_this.settings.get(function(settings){var isSentByMe=event.from.split(\"/\")[1]===settings.xmppUser||event.from.split(\"@\")[0]===settings.xmppUser;var eventParsed={id:event.id,userName:_this.getMessageUserName(event)||\"\",userProfilePicture:_this.getMessageUserProfilePicture(event)||undefined,message:\"\",time:event.sent_at,isFileMessage:false,isImageMessage:false,isVideoMessage:false,isAudioMessage:false,fileUrl:\"\",toUser:isSentByMe&&event.from.includes(\"@conference.\")?event.from.split(\"/\")[0]:event.to,fromUser:isSentByMe?settings.xmppUser:event.from.split(\"/\")[0],deliverStatus:DeliverStatus.DELIVERED,readStatus:ReadStatus.UNREAD,deliverTimestamp:new Date().toISOString(),readTimestamp:\"\",content:\"\",contentType:event.fileUrl||\"text\",isSentByMe:isSentByMe,isReplyMessage:false,isForwardMessage:false,replyedMessage:\"\",replyedMessageTo:\"\",replyedMessageId:\"\",eventId:event.eventId,eventBody:event.eventBody};_this.notify(Events.SEND_EVENT,eventParsed);});};this.onMessage=function(msg){_this.settings.get(function(settings){var _this$contacts$getCon,_msg$reply_to,_this$user$user,_msg$reply_to2,_this$user$user2;var fileParams={isFile:\"fileUrl\"in msg?true:false,isImage:false,isVideo:false,isAudio:false};if(fileParams.isFile){fileParams.isImage=/\\.(jpe?g|png|gif|ico)$/i.test(msg.fileUrl);fileParams.isVideo=/\\.(mp4|avi|mov)$/i.test(msg.fileUrl);fileParams.isAudio=/\\.(ogg|mp3|wav|m4a|webm)$/i.test(msg.fileUrl);}if(isUrl(msg.message)){var splittedMsg=msg.message.split(\"/\");var extension=splittedMsg[splittedMsg.length-1];if(extension.includes(\".\")&&splittedMsg.length>1){fileParams.isFile=true;fileParams.isImage=/\\.(jpe?g|png|gif|ico)$/i.test(msg.message);fileParams.isVideo=/\\.(mp4|avi|mov)$/i.test(msg.message);fileParams.isAudio=/\\.(ogg|mp3|wav|m4a|webm)$/i.test(msg.message);}}var isSentByMe=msg.from.split(\"/\")[1]===settings.xmppUser||msg.from.split(\"@\")[0]===settings.xmppUser;var message={id:msg.id,userName:_this.getMessageUserName(msg)||\"\",userProfilePicture:_this.getMessageUserProfilePicture(msg)||undefined,message:msg.message||msg.fileUrl,time:msg.sent_at,isFileMessage:fileParams.isFile&&!fileParams.isImage&&!fileParams.isVideo&&!fileParams.isAudio,isImageMessage:fileParams.isImage,isVideoMessage:fileParams.isVideo,isAudioMessage:fileParams.isAudio,fileUrl:getFileUrlStr(fileParams,msg),toUser:isSentByMe&&msg.from.includes(\"@conference.\")?msg.from.split(\"/\")[0]:msg.to,fromUser:isSentByMe?settings.xmppUser:msg.from.split(\"/\")[0],deliverStatus:DeliverStatus.DELIVERED,readStatus:ReadStatus.UNREAD,deliverTimestamp:new Date().toISOString(),readTimestamp:\"\",content:JSON.stringify({reply_msg:msg.reply_msg,reply_msg_id:msg.reply_msg_id,reply_to:msg.reply_to}),contentType:msg.fileUrl||\"text\",isSentByMe:isSentByMe,isReplyMessage:!!msg.reply_msg,isForwardMessage:!!msg.reply_to&&!msg.reply_msg,replyedMessage:msg.reply_msg,replyedMessageTo:((_this$contacts$getCon=_this.contacts.getContacts().get(((_msg$reply_to=msg.reply_to)===null||_msg$reply_to===void 0?void 0:_msg$reply_to.split(\"@\")[0])||\"\"))===null||_this$contacts$getCon===void 0?void 0:_this$contacts$getCon.name)||((_this$user$user=_this.user.user)===null||_this$user$user===void 0?void 0:_this$user$user.id)===((_msg$reply_to2=msg.reply_to)===null||_msg$reply_to2===void 0?void 0:_msg$reply_to2.split(\"@\")[0])?(_this$user$user2=_this.user.user)===null||_this$user$user2===void 0?void 0:_this$user$user2.name:\"Participant\",replyedMessageId:msg.reply_msg_id};_this.notify(Events.MESSAGE,message);});};this.onPresence=function(presence){_this.notify(Events.PRESENCE,presence);};this.forwardMessage=function(chat,message,callback){_this.chat.forwardMsg(chat.jid,chat.jid.includes(\"@conference.\")?XMPPChatType.GROUPCHAT:XMPPChatType.CHAT,message.fromUser,message.message,message.id,callback);};this.replyMsg=function(chat,message,replyedMessage,cb){_this.chat.replyMsg(chat.jid,chat.jid.includes(\"@conference.\")?XMPPChatType.GROUPCHAT:XMPPChatType.CHAT,message.message,replyedMessage.fromUser,replyedMessage.message,replyedMessage.id,cb);};this.sendMessage=function(chat,text,callback){_this.chat.sendMessage(chat.jid,chat.chatType===ChatType.USER?XMPPChatType.CHAT:XMPPChatType.GROUPCHAT,text,callback);};this.sendFiles=function(chat,files,cb){files.forEach(function(file){_this.chat.sendFile(chat.jid,chat.jid.includes(\"@conference.\")?XMPPChatType.GROUPCHAT:XMPPChatType.CHAT,file,cb);});};this.getMessageUserName=function(msg){if(msg.from.includes(\"@conference.\")){var _groups=_this.groups.getGroups();var group=_groups.get(msg.from.split(\"@\")[0]);var member=group===null||group===void 0?void 0:group.members.filter(function(member){return member.userId===msg.from.split(\"/\")[1];})[0];return member===null||member===void 0?void 0:member.name;}else{var _this$contacts$getCon2;return(_this$contacts$getCon2=_this.contacts.getContacts().get(msg.from.split(\"@\")[0]))===null||_this$contacts$getCon2===void 0?void 0:_this$contacts$getCon2.name;}};this.getMessageUserProfilePicture=function(msg){if(msg.from.includes(\"@conference.\")){var _groups2=_this.groups.getGroups();var group=_groups2.get(msg.from.split(\"@\")[0]);var member=group===null||group===void 0?void 0:group.members.filter(function(member){return member.userId===msg.from.split(\"/\")[1];})[0];return member===null||member===void 0?void 0:member.profilePicture;}else{var _this$contacts$getCon3;return(_this$contacts$getCon3=_this.contacts.getContacts().get(msg.from.split(\"@\")[0]))===null||_this$contacts$getCon3===void 0?void 0:_this$contacts$getCon3.profilePicture;}};this.nextSubscriptionId=0;this.subscriptions=new Map();this.makeChat(subscribeFunction);}_createClass(SquadChatCommunicator,[{key:\"makeChat\",value:function makeChat(subscribeFunction){var _this2=this;this.subscribe(subscribeFunction);this.settings.get(function(settings){var options={service:\"wss://\".concat(settings.xmppDomain,\":5280/websocket\"),domain:settings.xmppDomain,username:settings.xmppUser,password:settings.xmppPw,resource:\"squad.web_\".concat(settings.xmppUser,\"_\").concat(short().generate())};var chat=new Chat(options);if(_this2.chat){_this2.chat.client.stop().then(function(){_this2.chat=chat;_this2.subscribeChatEvents(chat);chat.client.start();});}else{_this2.chat=chat;_this2.subscribeChatEvents(chat);chat.client.start();}});}},{key:\"subscribeChatEvents\",value:function subscribeChatEvents(chat){var _this3=this;chat.on(Events.MESSAGE,this.onMessage);chat.on(Events.PRESENCE,this.onPresence);chat.on(Events.ONLINE,function(){return _this3.notify(Events.ONLINE,null);});chat.on(Events.OFFLINE,function(){return _this3.notify(Events.OFFLINE,null);});chat.on(Events.ERROR,this.onError);chat.on(Events.STANZA,this.onStanza);chat.on(Events.RECEIVED,function(data){return _this3.notify(Events.RECEIVED,data);});chat.on(Events.DISPLAYED,function(data){return _this3.notify(Events.DISPLAYED,data);});chat.on(Events.COMPOSING,function(data){return _this3.notify(Events.COMPOSING,data);});chat.on(Events.ACTIVE,function(data){return _this3.notify(Events.ACTIVE,data);});chat.on(Events.SEND_EVENT,this.onGroupEvent);chat.on(Events.RECONNECTING,function(){return _this3.notify(Events.RECONNECTING,null);});chat.on(Events.RECONNECTED,function(){return _this3.notify(Events.RECONNECTED,null);});}},{key:\"onStanza\",value:function onStanza(stanza){}},{key:\"onError\",value:function onError(error){}},{key:\"joinGroup\",value:function joinGroup(to){this.chat.joinRoom(to);}},{key:\"joinGroups\",value:function joinGroups(groups){var _this4=this;groups.forEach(function(jid){return _this4.joinGroup(jid);});}},{key:\"changeStatus\",value:function changeStatus(status){this.chat.sendPresence(status);}},{key:\"subscribe\",value:function subscribe(subscribeCallback){this.subscriptions.set(this.nextSubscriptionId,subscribeCallback);this.nextSubscriptionId+=1;}},{key:\"removeSubscription\",value:function removeSubscription(id){this.subscriptions.delete(id);}},{key:\"removeAllSubscription\",value:function removeAllSubscription(){this.subscriptions=new Map();}},{key:\"notify\",value:function notify(event,data){if(this.subscriptions){this.subscriptions.forEach(function(subscribeCallback){if(subscribeCallback)subscribeCallback(event,data);});}}}]);return SquadChatCommunicator;}();export{SquadChatCommunicator as default};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/SquadChatCommunicator.ts"],"names":["Chat","Events","DeliverStatus","ReadStatus","ChatType","XMPPChatType","short","isUrl","getFileUrlStr","SquadChatCommunicator","settings","contacts","groups","user","subscribeFunction","onGroupEvent","event","get","isSentByMe","from","split","xmppUser","eventParsed","id","userName","getMessageUserName","userProfilePicture","getMessageUserProfilePicture","undefined","message","time","sent_at","isFileMessage","isImageMessage","isVideoMessage","isAudioMessage","fileUrl","toUser","includes","to","fromUser","deliverStatus","DELIVERED","readStatus","UNREAD","deliverTimestamp","Date","toISOString","readTimestamp","content","contentType","isReplyMessage","isForwardMessage","replyedMessage","replyedMessageTo","replyedMessageId","eventId","eventBody","notify","SEND_EVENT","onMessage","msg","fileParams","isFile","isImage","isVideo","isAudio","test","splittedMsg","extension","length","JSON","stringify","reply_msg","reply_msg_id","reply_to","getContacts","name","MESSAGE","onPresence","presence","PRESENCE","forwardMessage","chat","callback","forwardMsg","jid","GROUPCHAT","CHAT","replyMsg","cb","sendMessage","text","chatType","USER","sendFiles","files","forEach","file","sendFile","getGroups","group","member","members","filter","userId","profilePicture","nextSubscriptionId","subscriptions","Map","makeChat","subscribe","options","service","xmppDomain","domain","username","password","xmppPw","resource","generate","client","stop","then","subscribeChatEvents","start","on","ONLINE","OFFLINE","ERROR","onError","STANZA","onStanza","RECEIVED","data","DISPLAYED","COMPOSING","ACTIVE","RECONNECTING","RECONNECTED","stanza","error","joinRoom","joinGroup","status","sendPresence","subscribeCallback","set","delete"],"mappings":"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","sourcesContent":["import Chat from \"./chat/chatcommunicator\";\r\nimport { Events, FileMessage, Message, Presence } from \"./chat/types/types\";\r\nimport IMessage from \"../alias/IMessage\";\r\nimport DeliverStatus from \"../enuns/DeliverStatus\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport { SendMessageCallback, SubscriptionCallBack } from \"./types\";\r\nimport IChat from \"../alias/IChat\";\r\nimport ChatType from \"../enuns/ChatType\";\r\nimport { ChatType as XMPPChatType } from \"./types\";\r\nimport SettingsBusiness from \"./business/Settings\";\r\nimport short from \"short-uuid\";\r\nimport ContactsBusiness from \"./business/Contacts\";\r\nimport GroupsBusiness from \"./business/Groups\";\r\nimport { isUrl } from \"./utils/parseUtils\";\r\nimport { getFileUrlStr } from \"./utils/formatUtils\";\r\nimport UserBusiness from \"./business/User\";\r\n\r\nexport default interface SquadChatCommunicator {\r\n  chat: Chat;\r\n  nextSubscriptionId: number;\r\n  subscriptions: Map<number, SubscriptionCallBack>;\r\n}\r\nexport default class SquadChatCommunicator {\r\n  constructor(\r\n    private settings: SettingsBusiness,\r\n    private contacts: ContactsBusiness,\r\n    private groups: GroupsBusiness,\r\n    private user: UserBusiness,\r\n    subscribeFunction: SubscriptionCallBack\r\n  ) {\r\n    this.nextSubscriptionId = 0;\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n    this.makeChat(subscribeFunction);\r\n  }\r\n  makeChat(subscribeFunction: SubscriptionCallBack) {\r\n    this.subscribe(subscribeFunction);\r\n    this.settings.get((settings) => {\r\n      const options = {\r\n        service: `wss://${settings.xmppDomain}:5280/websocket`,\r\n        domain: settings.xmppDomain,\r\n        username: settings.xmppUser,\r\n        password: settings.xmppPw,\r\n        resource: `squad.web_${settings.xmppUser}_${short().generate()}`,\r\n      };\r\n      const chat = new Chat(options);\r\n      if (this.chat) {\r\n        this.chat.client.stop().then(() => {\r\n          this.chat = chat;\r\n          this.subscribeChatEvents(chat);\r\n          chat.client.start();\r\n        });\r\n      } else {\r\n        this.chat = chat;\r\n        this.subscribeChatEvents(chat);\r\n        chat.client.start();\r\n      }\r\n    });\r\n  }\r\n  subscribeChatEvents(chat: Chat) {\r\n    chat.on(Events.MESSAGE, this.onMessage);\r\n    chat.on(Events.PRESENCE, this.onPresence);\r\n    chat.on(Events.ONLINE, () => this.notify(Events.ONLINE, null));\r\n    chat.on(Events.OFFLINE, () => this.notify(Events.OFFLINE, null));\r\n    chat.on(Events.ERROR, this.onError);\r\n    chat.on(Events.STANZA, this.onStanza);\r\n    chat.on(Events.RECEIVED, (data) => this.notify(Events.RECEIVED, data));\r\n    chat.on(Events.DISPLAYED, (data) => this.notify(Events.DISPLAYED, data));\r\n    chat.on(Events.COMPOSING, (data) => this.notify(Events.COMPOSING, data));\r\n    chat.on(Events.ACTIVE, (data) => this.notify(Events.ACTIVE, data));\r\n    chat.on(Events.SEND_EVENT, this.onGroupEvent);\r\n    chat.on(Events.RECONNECTING, () => this.notify(Events.RECONNECTING, null));\r\n    chat.on(Events.RECONNECTED, () => this.notify(Events.RECONNECTED, null));\r\n  }\r\n  onGroupEvent = (event: Message) => {\r\n    this.settings.get((settings) => {\r\n      const isSentByMe =\r\n        event.from.split(\"/\")[1] === settings.xmppUser ||\r\n        event.from.split(\"@\")[0] === settings.xmppUser;\r\n      const eventParsed: IMessage = {\r\n        id: event.id,\r\n        userName: this.getMessageUserName(event) || \"\",\r\n        userProfilePicture:\r\n          this.getMessageUserProfilePicture(event) || undefined,\r\n        message: \"\",\r\n        time: event.sent_at,\r\n        isFileMessage: false,\r\n        isImageMessage: false,\r\n        isVideoMessage: false,\r\n        isAudioMessage: false,\r\n        fileUrl: \"\",\r\n        toUser:\r\n          isSentByMe && event.from.includes(\"@conference.\")\r\n            ? event.from.split(\"/\")[0]\r\n            : event.to,\r\n        fromUser: isSentByMe ? settings.xmppUser : event.from.split(\"/\")[0],\r\n        deliverStatus: DeliverStatus.DELIVERED,\r\n        readStatus: ReadStatus.UNREAD,\r\n        deliverTimestamp: new Date().toISOString(),\r\n        readTimestamp: \"\",\r\n        content: \"\",\r\n        contentType: (event as FileMessage).fileUrl || \"text\",\r\n        isSentByMe: isSentByMe,\r\n        isReplyMessage: false,\r\n        isForwardMessage: false,\r\n        replyedMessage: \"\",\r\n        replyedMessageTo: \"\",\r\n        replyedMessageId: \"\",\r\n        eventId: event.eventId,\r\n        eventBody: event.eventBody,\r\n      };\r\n      this.notify(Events.SEND_EVENT, eventParsed);\r\n    });\r\n  };\r\n  onMessage = (msg: Message | FileMessage) => {\r\n    this.settings.get((settings) => {\r\n      const fileParams = {\r\n        isFile: \"fileUrl\" in msg ? true : false,\r\n        isImage: false,\r\n        isVideo: false,\r\n        isAudio: false,\r\n      };\r\n      if (fileParams.isFile) {\r\n        fileParams.isImage = /\\.(jpe?g|png|gif|ico)$/i.test(\r\n          (msg as FileMessage).fileUrl\r\n        );\r\n        fileParams.isVideo = /\\.(mp4|avi|mov)$/i.test(\r\n          (msg as FileMessage).fileUrl\r\n        );\r\n        fileParams.isAudio = /\\.(ogg|mp3|wav|m4a|webm)$/i.test(\r\n          (msg as FileMessage).fileUrl\r\n        );\r\n      }\r\n      if (isUrl(msg.message)) {\r\n        const splittedMsg = msg.message.split(\"/\");\r\n        const extension = splittedMsg[splittedMsg.length - 1];\r\n        if (extension.includes(\".\") && splittedMsg.length > 1) {\r\n          fileParams.isFile = true;\r\n          fileParams.isImage = /\\.(jpe?g|png|gif|ico)$/i.test(msg.message);\r\n          fileParams.isVideo = /\\.(mp4|avi|mov)$/i.test(msg.message);\r\n          fileParams.isAudio = /\\.(ogg|mp3|wav|m4a|webm)$/i.test(msg.message);\r\n        }\r\n      }\r\n      const isSentByMe =\r\n        msg.from.split(\"/\")[1] === settings.xmppUser ||\r\n        msg.from.split(\"@\")[0] === settings.xmppUser;\r\n      const message: IMessage = {\r\n        id: msg.id,\r\n        userName: this.getMessageUserName(msg) || \"\",\r\n        userProfilePicture: this.getMessageUserProfilePicture(msg) || undefined,\r\n        message: msg.message || (msg as FileMessage).fileUrl,\r\n        time: msg.sent_at,\r\n        isFileMessage:\r\n          fileParams.isFile &&\r\n          !fileParams.isImage &&\r\n          !fileParams.isVideo &&\r\n          !fileParams.isAudio,\r\n        isImageMessage: fileParams.isImage,\r\n        isVideoMessage: fileParams.isVideo,\r\n        isAudioMessage: fileParams.isAudio,\r\n        fileUrl: getFileUrlStr(fileParams, msg),\r\n        toUser:\r\n          isSentByMe && msg.from.includes(\"@conference.\")\r\n            ? msg.from.split(\"/\")[0]\r\n            : msg.to,\r\n        fromUser: isSentByMe ? settings.xmppUser : msg.from.split(\"/\")[0],\r\n        deliverStatus: DeliverStatus.DELIVERED,\r\n        readStatus: ReadStatus.UNREAD,\r\n        deliverTimestamp: new Date().toISOString(),\r\n        readTimestamp: \"\",\r\n        content: JSON.stringify({\r\n          reply_msg: msg.reply_msg,\r\n          reply_msg_id: msg.reply_msg_id,\r\n          reply_to: msg.reply_to,\r\n        }),\r\n        contentType: (msg as FileMessage).fileUrl || \"text\",\r\n        isSentByMe: isSentByMe,\r\n        isReplyMessage: !!msg.reply_msg,\r\n        isForwardMessage: !!msg.reply_to && !msg.reply_msg,\r\n        replyedMessage: msg.reply_msg,\r\n        replyedMessageTo:\r\n          this.contacts.getContacts().get(msg.reply_to?.split(\"@\")[0] || \"\")\r\n            ?.name || this.user.user?.id === msg.reply_to?.split(\"@\")[0]\r\n            ? this.user.user?.name\r\n            : \"Participant\",\r\n        replyedMessageId: msg.reply_msg_id,\r\n      };\r\n      this.notify(Events.MESSAGE, message);\r\n    });\r\n  };\r\n  onPresence = (presence: Presence) => {\r\n    this.notify(Events.PRESENCE, presence);\r\n  };\r\n  onStanza(stanza: any) {}\r\n  onError(error: any) {}\r\n  forwardMessage = (\r\n    chat: IChat,\r\n    message: IMessage,\r\n    callback: SendMessageCallback\r\n  ) => {\r\n    this.chat.forwardMsg(\r\n      chat.jid,\r\n      chat.jid.includes(\"@conference.\")\r\n        ? XMPPChatType.GROUPCHAT\r\n        : XMPPChatType.CHAT,\r\n      message.fromUser,\r\n      message.message,\r\n      message.id,\r\n      callback\r\n    );\r\n  };\r\n  replyMsg = (\r\n    chat: IChat,\r\n    message: IMessage,\r\n    replyedMessage: IMessage,\r\n    cb: SendMessageCallback\r\n  ) => {\r\n    this.chat.replyMsg(\r\n      chat.jid,\r\n      chat.jid.includes(\"@conference.\")\r\n        ? XMPPChatType.GROUPCHAT\r\n        : XMPPChatType.CHAT,\r\n      message.message,\r\n      replyedMessage.fromUser,\r\n      replyedMessage.message,\r\n      replyedMessage.id,\r\n      cb\r\n    );\r\n  };\r\n  sendMessage = (chat: IChat, text: string, callback: SendMessageCallback) => {\r\n    this.chat.sendMessage(\r\n      chat.jid,\r\n      chat.chatType === ChatType.USER\r\n        ? XMPPChatType.CHAT\r\n        : XMPPChatType.GROUPCHAT,\r\n      text,\r\n      callback\r\n    );\r\n  };\r\n  sendFiles = (chat: IChat, files: File[], cb: any) => {\r\n    files.forEach((file) => {\r\n      this.chat.sendFile(\r\n        chat.jid,\r\n        chat.jid.includes(\"@conference.\")\r\n          ? XMPPChatType.GROUPCHAT\r\n          : XMPPChatType.CHAT,\r\n        file,\r\n        cb\r\n      );\r\n    });\r\n  };\r\n  joinGroup(to: string) {\r\n    this.chat.joinRoom(to);\r\n  }\r\n  joinGroups(groups: string[]) {\r\n    groups.forEach((jid) => this.joinGroup(jid));\r\n  }\r\n  changeStatus(status: string) {\r\n    this.chat.sendPresence(status);\r\n  }\r\n  getMessageUserName = (msg: Message | FileMessage) => {\r\n    if (msg.from.includes(\"@conference.\")) {\r\n      const groups = this.groups.getGroups();\r\n      const group = groups.get(msg.from.split(\"@\")[0]);\r\n      const member = group?.members.filter(\r\n        (member) => member.userId === msg.from.split(\"/\")[1]\r\n      )[0];\r\n      return member?.name;\r\n    } else {\r\n      return this.contacts.getContacts().get(msg.from.split(\"@\")[0])?.name;\r\n    }\r\n  };\r\n  getMessageUserProfilePicture = (msg: Message | FileMessage) => {\r\n    if (msg.from.includes(\"@conference.\")) {\r\n      const groups = this.groups.getGroups();\r\n      const group = groups.get(msg.from.split(\"@\")[0]);\r\n      const member = group?.members.filter(\r\n        (member) => member.userId === msg.from.split(\"/\")[1]\r\n      )[0];\r\n      return member?.profilePicture;\r\n    } else {\r\n      return this.contacts.getContacts().get(msg.from.split(\"@\")[0])\r\n        ?.profilePicture;\r\n    }\r\n  };\r\n  subscribe(subscribeCallback: SubscriptionCallBack) {\r\n    this.subscriptions.set(this.nextSubscriptionId, subscribeCallback);\r\n    this.nextSubscriptionId += 1;\r\n  }\r\n  removeSubscription(id: number) {\r\n    this.subscriptions.delete(id);\r\n  }\r\n  removeAllSubscription() {\r\n    this.subscriptions = new Map<number, SubscriptionCallBack>();\r\n  }\r\n  notify(event: string, data: any) {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach((subscribeCallback) => {\r\n        if (subscribeCallback) subscribeCallback(event, data);\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}