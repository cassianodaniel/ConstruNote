{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupMember.tsx\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Media, Badge, Button } from 'reactstrap';\nimport ReactImageFallback from \"react-image-fallback\";\nimport { Link } from \"react-router-dom\";\nimport { useContact } from '../contexts/ContactContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport Swal from 'sweetalert2';\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\nimport { useConference } from '../contexts/ConferenceContext';\nimport ScreenType from \"../enuns/ScreenType\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport ModalGenerics from './ModalGenerics';\nimport { toastSuccess } from './../helpers/toastCaller';\n\nconst ChangeGroupNameButton = ({\n  isAdmin,\n  defaultAvatar,\n  member\n}) => {\n  var _activeChat$conferenc, _activeChat$conferenc2, _activeChat$conferenc3;\n\n  const {\n    activeChat,\n    chats,\n    openChat\n  } = useChat();\n  const [show, setShow] = useState(false);\n  const {\n    setToggleMemberRole,\n    setRemovedMember,\n    setGroupToRemoveContact\n  } = useGroup();\n  const {\n    setClickedContact,\n    contacts,\n    contactsOutsideUserContacts,\n    openContact\n  } = useContact();\n  const {\n    setRemovingParticipantsPayload,\n    setAddingParticipantsPayload\n  } = useConference();\n  const [showModalToggleRole, setShowModalToggleRole] = useState(false);\n  const {\n    setScreen\n  } = useMainBox();\n  const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState([]);\n  const {\n    user\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const moderators = (_activeChat$conferenc = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc === void 0 ? void 0 : _activeChat$conferenc.filter(participant => participant.userModerator === true && participant.type === ConferenceRoomParticipantType.MODERATOR && participant.userUuid === user.id);\n  const amIaModerator = ((_activeChat$conferenc2 = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc2 === void 0 ? void 0 : (_activeChat$conferenc3 = _activeChat$conferenc2.find(member => member.userUuid === user.id)) === null || _activeChat$conferenc3 === void 0 ? void 0 : _activeChat$conferenc3.userModerator) === true;\n\n  const isThisMemberAModerator = member => {\n    moderators === null || moderators === void 0 ? void 0 : moderators.find(moderator => moderator.userUuid === member.userId);\n  };\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setScreen(ScreenType.CHAT);\n  };\n\n  const toggleMemberRole = (member, activeChat) => {\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: member.name + \" \" + t(\"is now a member!\"),\n      showConfirmButton: false,\n      timer: 1500,\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    });\n    setToggleMemberRole({\n      mbId: member.userId,\n      gpId: activeChat.groupId ? activeChat.groupId : \"\",\n      mbRole: member.role,\n      mb: member\n    });\n  };\n\n  const toggleParticipantRole = (conferenceId, participant) => {\n    arrayToPushAOnlyParticipant.push({\n      description: '',\n      email: '',\n      name: participant.name,\n      userModerator: participant.role === \"admin\" ? false : true,\n      type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\n      userUuid: participant.userId\n    });\n    setRemovingParticipantsPayload({\n      conferenceId: conferenceId,\n      participantId: participant.userId\n    });\n    setTimeout(() => {\n      setAddingParticipantsPayload({\n        conferenceId: conferenceId,\n        data: arrayToPushAOnlyParticipant\n      });\n      setArrayToPushAOnlyParticipant([]);\n    }, 2500);\n  };\n\n  const removeParticipantPayload = (activeChat, member) => {\n    setRemovingParticipantsPayload({\n      conferenceId: activeChat.id,\n      participantId: member.userId\n    });\n  };\n\n  const removeParticipantAndToastSuccessAndCloseModal = (activeChat, member) => {\n    removeParticipantPayload(activeChat, member);\n    toastSuccess(\"Success!\");\n    setShow(!show);\n  };\n\n  const removeMemberPayload = (member, activeChat) => {\n    setRemovedMember(member);\n    setGroupToRemoveContact(activeChat.groupId);\n  };\n\n  const removeMemberAndToastAndCloseModal = (member, activeChat) => {\n    removeMemberPayload(member, activeChat);\n    toastSuccess(\"Success!\");\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShow,\n    show: show,\n    title: t(\"Remove\") + \" \" + member.name + \"?\",\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: activeChat.conferenceRoomParticipants ? () => removeParticipantAndToastSuccessAndCloseModal(activeChat, member) : () => removeMemberAndToastAndCloseModal(member, activeChat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, t(\"Confirm\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => {\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShowModalToggleRole,\n    show: showModalToggleRole,\n    title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"a member?\"),\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")), activeChat.conferenceRoomParticipants ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toggleMemberRole(member, activeChat);\n        toastSuccess(\"Success!\");\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\")) : /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        toggleParticipantRole(activeChat.id, member);\n        toastSuccess(\"Success!\");\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, t(\"Confirm\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    key: member.userId,\n    className: \"p-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: member.profilePicture,\n    className: \"rounded-circle avatar-xs mr-2\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      chats.forEach(cht => {\n        if (cht.id === member.userId) {\n          openChatAction(cht);\n          contacts.forEach(ctc => {\n            if (ctc.id === member.userId) {\n              setClickedContact(ctc);\n            }\n          });\n        } else {\n          contactsOutsideUserContacts.forEach(ctcOut => {\n            if (ctcOut.id === member.userId) {\n              openContact(ctcOut);\n              setClickedContact(ctcOut);\n            }\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, member.name), (isAdmin || amIaModerator) && user.id !== member.userId && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  })), member.role === \"admin\" || isThisMemberAModerator(member) ? /*#__PURE__*/React.createElement(Badge, {\n    color: activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\",\n    className: activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\",\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && setShowModalToggleRole(true),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    className: \"badge-soft-success float-right\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"is now an administrator!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n        activeChat.conferenceRoomParticipants ? toggleParticipantRole(activeChat.id, member) : toggleMemberRole(member, activeChat);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, t(\"Member\"))))))));\n};\n\nexport default ChangeGroupNameButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupMember.tsx"],"names":["React","useState","useTranslation","Card","Media","Badge","Button","ReactImageFallback","Link","useContact","useAuth","useChat","useGroup","Swal","ConferenceRoomParticipantType","useConference","ScreenType","useMainBox","ModalGenerics","toastSuccess","ChangeGroupNameButton","isAdmin","defaultAvatar","member","activeChat","chats","openChat","show","setShow","setToggleMemberRole","setRemovedMember","setGroupToRemoveContact","setClickedContact","contacts","contactsOutsideUserContacts","openContact","setRemovingParticipantsPayload","setAddingParticipantsPayload","showModalToggleRole","setShowModalToggleRole","setScreen","arrayToPushAOnlyParticipant","setArrayToPushAOnlyParticipant","user","t","moderators","conferenceRoomParticipants","filter","participant","userModerator","type","MODERATOR","userUuid","id","amIaModerator","find","isThisMemberAModerator","moderator","userId","openChatAction","chat","CHAT","toggleMemberRole","fire","position","icon","title","name","showConfirmButton","timer","customClass","popup","mbId","gpId","groupId","mbRole","role","mb","toggleParticipantRole","conferenceId","push","description","email","PARTICIPANT","participantId","setTimeout","data","removeParticipantPayload","removeParticipantAndToastSuccessAndCloseModal","removeMemberPayload","removeMemberAndToastAndCloseModal","profilePicture","forEach","cht","ctc","ctcOut","cursor","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA2C,YAA3C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,SAASC,6BAAT,QAA8C,kCAA9C;AACA,SAASC,aAAT,QAA8B,+BAA9B;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAQA,MAAMC,qBAAwC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AACtF,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAkCf,OAAO,EAA/C;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM;AAAE4B,IAAAA,mBAAF;AAAuBC,IAAAA,gBAAvB;AAAyCC,IAAAA;AAAzC,MAAqEnB,QAAQ,EAAnF;AACA,QAAM;AAAEoB,IAAAA,iBAAF;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,2BAA/B;AAA4DC,IAAAA;AAA5D,MAA4E1B,UAAU,EAA5F;AACA,QAAM;AAAE2B,IAAAA,8BAAF;AAAkCC,IAAAA;AAAlC,MAAmEtB,aAAa,EAAtF;AACA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IAAgDtC,QAAQ,CAAU,KAAV,CAA9D;AACA,QAAM;AAAEuC,IAAAA;AAAF,MAAgBvB,UAAU,EAAhC;AACA,QAAM,CAACwB,2BAAD,EAA8BC,8BAA9B,IAAgEzC,QAAQ,CAA8B,EAA9B,CAA9E;AACA,QAAM;AAAE0C,IAAAA;AAAF,MAAWjC,OAAO,EAAxB;AACA,QAAM;AAAEkC,IAAAA;AAAF,MAAQ1C,cAAc,EAA5B;AACA,QAAM2C,UAAU,4BAAGrB,UAAU,CAC5BsB,0BADe,0DAAG,sBACUC,MADV,CAEhBC,WAAD,IACIA,WAAW,CAACC,aAAZ,KAA8B,IAA9B,IACAD,WAAW,CAACE,IAAZ,KAAqBpC,6BAA6B,CAACqC,SADnD,IAEAH,WAAW,CAACI,QAAZ,KAAyBT,IAAI,CAACU,EALjB,CAAnB;AAOA,QAAMC,aAAa,GACnB,2BAAA9B,UAAU,CAACsB,0BAAX,4GAAuCS,IAAvC,CAA6ChC,MAAD,IAAYA,MAAM,CAAC6B,QAAP,KAAoBT,IAAI,CAACU,EAAjF,mFAAsFJ,aAAtF,MACA,IAFA;;AAIA,QAAMO,sBAAsB,GAAIjC,MAAD,IAAqB;AAClDsB,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEU,IAAZ,CAAkBE,SAAD,IAAeA,SAAS,CAACL,QAAV,KAAuB7B,MAAM,CAACmC,MAA9D;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAiB;AACpClC,IAAAA,QAAQ,CAACkC,IAAD,CAAR;AACApB,IAAAA,SAAS,CAACxB,UAAU,CAAC6C,IAAZ,CAAT;AACH,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,CAACvC,MAAD,EAAkBC,UAAlB,KAAwC;AAC/DX,IAAAA,IAAI,CAACkD,IAAL,CAAU;AACRC,MAAAA,QAAQ,EAAE,QADF;AAERC,MAAAA,IAAI,EAAE,SAFE;AAGRC,MAAAA,KAAK,EAAE3C,MAAM,CAAC4C,IAAP,GAAc,GAAd,GAAoBvB,CAAC,CAAC,kBAAD,CAHpB;AAIRwB,MAAAA,iBAAiB,EAAE,KAJX;AAKRC,MAAAA,KAAK,EAAE,IALC;AAMRC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE;AADI;AANL,KAAV;AAUA1C,IAAAA,mBAAmB,CAAC;AAClB2C,MAAAA,IAAI,EAAEjD,MAAM,CAACmC,MADK;AAElBe,MAAAA,IAAI,EAAEjD,UAAU,CAACkD,OAAX,GACFlD,UAAU,CAACkD,OADT,GAEF,EAJc;AAKlBC,MAAAA,MAAM,EAAEpD,MAAM,CAACqD,IALG;AAMlBC,MAAAA,EAAE,EAAEtD;AANc,KAAD,CAAnB;AAQD,GAnBD;;AAqBA,QAAMuD,qBAAqB,GAAG,CAACC,YAAD,EAAuB/B,WAAvB,KAAgD;AAE5EP,IAAAA,2BAA2B,CAACuC,IAA5B,CACE;AACAC,MAAAA,WAAW,EAAE,EADb;AAEIC,MAAAA,KAAK,EAAE,EAFX;AAGIf,MAAAA,IAAI,EAAEnB,WAAW,CAACmB,IAHtB;AAIIlB,MAAAA,aAAa,EAAED,WAAW,CAAC4B,IAAZ,KAAqB,OAArB,GAA+B,KAA/B,GAAuC,IAJ1D;AAKI1B,MAAAA,IAAI,EAAEF,WAAW,CAAC4B,IAAZ,KAAqB,OAArB,GAA+B9D,6BAA6B,CAACqE,WAA7D,GAA2ErE,6BAA6B,CAACqC,SALnH;AAMIC,MAAAA,QAAQ,EAAEJ,WAAW,CAACU;AAN1B,KADF;AAUAtB,IAAAA,8BAA8B,CAAC;AAC7B2C,MAAAA,YAAY,EAAEA,YADe;AAE7BK,MAAAA,aAAa,EAAEpC,WAAW,CAACU;AAFE,KAAD,CAA9B;AAIA2B,IAAAA,UAAU,CAAC,MAAM;AACfhD,MAAAA,4BAA4B,CAAC;AAC3B0C,QAAAA,YAAY,EAAEA,YADa;AAE3BO,QAAAA,IAAI,EAAE7C;AAFqB,OAAD,CAA5B;AAIAC,MAAAA,8BAA8B,CAAC,EAAD,CAA9B;AACD,KANS,EAMP,IANO,CAAV;AAOD,GAvBD;;AAyBA,QAAM6C,wBAAwB,GAAG,CAAC/D,UAAD,EAAoBD,MAApB,KAAwC;AACvEa,IAAAA,8BAA8B,CAAC;AAC7B2C,MAAAA,YAAY,EAAEvD,UAAU,CAAC6B,EADI;AAE7B+B,MAAAA,aAAa,EAAE7D,MAAM,CAACmC;AAFO,KAAD,CAA9B;AAID,GALD;;AAOA,QAAM8B,6CAA6C,GAAG,CAAChE,UAAD,EAAoBD,MAApB,KAAwC;AAC5FgE,IAAAA,wBAAwB,CAAC/D,UAAD,EAAaD,MAAb,CAAxB;AACAJ,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAS,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAJD;;AAMA,QAAM8D,mBAAmB,GAAG,CAAClE,MAAD,EAAkBC,UAAlB,KAAwC;AAClEM,IAAAA,gBAAgB,CAACP,MAAD,CAAhB;AACAQ,IAAAA,uBAAuB,CAACP,UAAU,CAACkD,OAAZ,CAAvB;AACD,GAHD;;AAKA,QAAMgB,iCAAiC,GAAG,CAACnE,MAAD,EAAkBC,UAAlB,KAAwC;AAChFiE,IAAAA,mBAAmB,CAAClE,MAAD,EAASC,UAAT,CAAnB;AACAL,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAS,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAJD;;AAMA,sBAAQ,uDACR,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,KAAK,EAAEiB,CAAC,CAAC,QAAD,CAAD,GAAc,GAAd,GAAoBrB,MAAM,CAAC4C,IAA3B,GAAkC,GAH3C;AAIE,IAAA,QAAQ,eACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,uDACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAsC,MAAA,OAAO,EAC3C3C,UAAU,CAACsB,0BAAX,GAEA,MAAM0C,6CAA6C,CAAChE,UAAD,EAAaD,MAAb,CAFnD,GAIA,MAAMmE,iCAAiC,CAACnE,MAAD,EAASC,UAAT,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGoB,CAAC,CAAC,SAAD,CANJ,CADA,eAQA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAC1C;AACEhB,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGiB,CAAC,CAAC,QAAD,CALJ,CARA,CADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,eA0BR,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEL,sBADX;AAEE,IAAA,IAAI,EAAED,mBAFR;AAGE,IAAA,KAAK,EAAEM,CAAC,CAAC,MAAD,CAAD,GACP,GADO,GAEPrB,MAAM,CAAC4C,IAFA,GAGP,GAHO,GAIPvB,CAAC,CAAC,WAAD,CAPH;AAQE,IAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,CAAC,CAAC,QAAD,CADN,CADF,EAKIpB,UAAU,CAACsB,0BAAX,gBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AACA,MAAA,OAAO,EAAE,MAAM;AACbgB,QAAAA,gBAAgB,CAACvC,MAAD,EAASC,UAAT,CAAhB;AACAL,QAAAA,YAAY,CAAC,UAAD,CAAZ;AACAS,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGiB,CAAC,CAAC,SAAD,CANJ,CADF,gBAUE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AACA,MAAA,OAAO,EAAE,MACP;AACEkC,QAAAA,qBAAqB,CAACtD,UAAU,CAAC6B,EAAZ,EAAgB9B,MAAhB,CAArB;AACAJ,QAAAA,YAAY,CAAC,UAAD,CAAZ;AACAS,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGiB,CAAC,CAAC,SAAD,CARJ,CAfN,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BQ,eAgER,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAErB,MAAM,CAACmC,MAAlB;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,GAAG,EAAEnC,MAAM,CAACoE,cADd;AAEE,IAAA,SAAS,EAAC,+BAFZ;AAGE,IAAA,GAAG,EAAC,SAHN;AAIE,IAAA,aAAa,EAAErE,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,OAAO,EAAE,MAAM;AACbG,MAAAA,KAAK,CAACmE,OAAN,CAAeC,GAAD,IAAc;AAC1B,YAAIA,GAAG,CAACxC,EAAJ,KAAW9B,MAAM,CAACmC,MAAtB,EAA8B;AAC5BC,UAAAA,cAAc,CAACkC,GAAD,CAAd;AACA5D,UAAAA,QAAQ,CAAC2D,OAAT,CAAkBE,GAAD,IAAc;AAC7B,gBAAIA,GAAG,CAACzC,EAAJ,KAAW9B,MAAM,CAACmC,MAAtB,EAA8B;AAC5B1B,cAAAA,iBAAiB,CAAC8D,GAAD,CAAjB;AACD;AACF,WAJD;AAKD,SAPD,MAOO;AACL5D,UAAAA,2BAA2B,CAAC0D,OAA5B,CACGG,MAAD,IAAY;AACV,gBAAIA,MAAM,CAAC1C,EAAP,KAAc9B,MAAM,CAACmC,MAAzB,EAAiC;AAC/BvB,cAAAA,WAAW,CAAC4D,MAAD,CAAX;AACA/D,cAAAA,iBAAiB,CAAC+D,MAAD,CAAjB;AACD;AACF,WANH;AAOC;AACF,OAjBH;AAkBC,KArBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBKxE,MAAM,CAAC4C,IAvBZ,CADF,EA2BK,CAAC9C,OAAO,IAAIiC,aAAZ,KAA8BX,IAAI,CAACU,EAAL,KAAY9B,MAAM,CAACmC,MAAlD,iBACA;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AAAEsC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE,MACPpE,OAAO,CAAC,IAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA5BJ,EAuCGL,MAAM,CAACqD,IAAP,KAAgB,OAAhB,IAA2BpB,sBAAsB,CAACjC,MAAD,CAAjD,gBAEC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEC,UAAU,CAACsB,0BAAX,GAAwC,SAAxC,GAAoD,QAD7D;AAEE,IAAA,SAAS,EAAEtB,UAAU,CAACsB,0BAAX,GAAwC,gCAAxC,GAA2E,+BAFxF;AAGE,IAAA,OAAO,EAAE,MACP,CAACzB,OAAO,IAAIiC,aAAZ,KAA+B/B,MAAM,CAACmC,MAAP,KAAkBf,IAAI,CAACU,EAAtD,IACAd,sBAAsB,CAAC,IAAD,CAL1B;AAOE,IAAA,KAAK,EAAE;AAAEyD,MAAAA,MAAM,EAAE;AAAV,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGxE,UAAU,CAACsB,0BAAX,GAAwCF,CAAC,CAAC,WAAD,CAAzC,GAAyDA,CAAC,CAAC,OAAD,CAT7D,CAFD,gBAcC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,KAAK,EAAE;AAAEoD,MAAAA,MAAM,EAAE;AAAV,KAHT;AAIE,IAAA,OAAO,EAAE,MACP,CAAC3E,OAAO,IAAIiC,aAAZ,KAA+B/B,MAAM,CAACmC,MAAP,KAAkBf,IAAI,CAACU,EAAtD,IACAxC,IAAI,CAACkD,IAAL,CAAU;AACRG,MAAAA,KAAK,EACHtB,CAAC,CAAC,MAAD,CAAD,GACA,GADA,GAEArB,MAAM,CAAC4C,IAFP,GAGA,GAHA,GAIAvB,CAAC,CAAC,mBAAD,CANK;AAORqD,MAAAA,IAAI,EAAE,EAPE;AAQRhC,MAAAA,IAAI,EAAE,SARE;AASRiC,MAAAA,gBAAgB,EAAE,IATV;AAURC,MAAAA,kBAAkB,EAAE,SAVZ;AAWRC,MAAAA,iBAAiB,EAAE,MAXX;AAYRC,MAAAA,gBAAgB,EAAEzD,CAAC,CAAC,IAAD,CAZX;AAaR0D,MAAAA,iBAAiB,EAAE1D,CAAC,CAAC,KAAD,CAbZ;AAcR0B,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE;AADI;AAdL,KAAV,EAiBGgC,IAjBH,CAiBSC,MAAD,IAAY;AAClB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACtB5F,QAAAA,IAAI,CAACkD,IAAL,CAAU;AACRC,UAAAA,QAAQ,EAAE,QADF;AAERC,UAAAA,IAAI,EAAE,SAFE;AAGRC,UAAAA,KAAK,EAAE3C,MAAM,CAAC4C,IAAP,GAAc,GAAd,GAAoBvB,CAAC,CAAC,0BAAD,CAHpB;AAIRwB,UAAAA,iBAAiB,EAAE,KAJX;AAKRC,UAAAA,KAAK,EAAE,IALC;AAMRC,UAAAA,WAAW,EAAE;AACXC,YAAAA,KAAK,EAAE;AADI;AANL,SAAV;AAUA/C,QAAAA,UAAU,CAACsB,0BAAX,GACAgC,qBAAqB,CAACtD,UAAU,CAAC6B,EAAZ,EAAgB9B,MAAhB,CADrB,GAGAuC,gBAAgB,CAACvC,MAAD,EAASC,UAAT,CAHhB;AAID;AACF,KAlCD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2CGoB,CAAC,CAAC,QAAD,CA3CJ,CArDJ,CADF,CADF,CAPF,CADA,CAhEQ,CAAR;AAqLH,CA1RD;;AA4RA,eAAexB,qBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, Media, Badge, Button } from 'reactstrap';\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContact } from '../contexts/ContactContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport Swal from 'sweetalert2'\r\nimport IChat from '../alias/IChat';\r\nimport IMember from '../alias/IMember';\r\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\r\nimport { useConference } from '../contexts/ConferenceContext';\r\nimport { ConferenceRoomParticipant } from '@digivox/apicommunicator/dist/types/types/types';\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport ModalGenerics from './ModalGenerics';\r\nimport { toastSuccess } from './../helpers/toastCaller';\r\n\r\ninterface IProps {\r\n  member: IMember;\r\n  defaultAvatar: any;\r\n  isAdmin: any;\r\n}\r\n\r\nconst ChangeGroupNameButton : React.FC<IProps> = ({ isAdmin, defaultAvatar, member, }) => {\r\n    const { activeChat, chats, openChat } = useChat();\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const { setToggleMemberRole, setRemovedMember, setGroupToRemoveContact } = useGroup();\r\n    const { setClickedContact, contacts, contactsOutsideUserContacts, openContact } = useContact();\r\n    const { setRemovingParticipantsPayload, setAddingParticipantsPayload } = useConference();\r\n    const [showModalToggleRole, setShowModalToggleRole] = useState<boolean>(false);\r\n    const { setScreen } = useMainBox();\r\n    const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState<ConferenceRoomParticipant[]>([]);\r\n    const { user } = useAuth();\r\n    const { t } = useTranslation();\r\n    const moderators = activeChat\r\n    .conferenceRoomParticipants?.filter(\r\n      (participant) => \r\n          participant.userModerator === true && \r\n          participant.type === ConferenceRoomParticipantType.MODERATOR &&\r\n          participant.userUuid === user.id\r\n    );\r\n    const amIaModerator =\r\n    activeChat.conferenceRoomParticipants?.find((member) => member.userUuid === user.id)?.userModerator ===\r\n    true;\r\n\r\n    const isThisMemberAModerator = (member: IMember) => {\r\n      moderators?.find((moderator) => moderator.userUuid === member.userId)\r\n    }\r\n\r\n    const openChatAction = (chat: IChat) => {\r\n        openChat(chat);\r\n        setScreen(ScreenType.CHAT);\r\n    };\r\n\r\n    const toggleMemberRole = (member: IMember, activeChat: IChat) => {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: member.name + \" \" + t(\"is now a member!\"),\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        customClass: {\r\n          popup: \"swal-mini-popup\"\r\n        }\r\n      })\r\n      setToggleMemberRole({\r\n        mbId: member.userId,\r\n        gpId: activeChat.groupId\r\n          ? activeChat.groupId\r\n          : \"\",\r\n        mbRole: member.role,\r\n        mb: member,\r\n      });\r\n    }\r\n\r\n    const toggleParticipantRole = (conferenceId: string, participant: IMember) => {\r\n          \r\n      arrayToPushAOnlyParticipant.push(\r\n        {\r\n        description: '',\r\n            email: '',\r\n            name: participant.name,\r\n            userModerator: participant.role === \"admin\" ? false : true,\r\n            type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\r\n            userUuid: participant.userId\r\n        } as ConferenceRoomParticipant\r\n      )\r\n      setRemovingParticipantsPayload({\r\n        conferenceId: conferenceId,\r\n        participantId: participant.userId\r\n      });\r\n      setTimeout(() => {\r\n        setAddingParticipantsPayload({\r\n          conferenceId: conferenceId,\r\n          data: arrayToPushAOnlyParticipant,\r\n        });\r\n        setArrayToPushAOnlyParticipant([]);\r\n      }, 2500)\r\n    }\r\n\r\n    const removeParticipantPayload = (activeChat: IChat, member: IMember) => {\r\n      setRemovingParticipantsPayload({\r\n        conferenceId: activeChat.id,\r\n        participantId: member.userId,\r\n      })\r\n    }\r\n    \r\n    const removeParticipantAndToastSuccessAndCloseModal = (activeChat: IChat, member: IMember) => {\r\n      removeParticipantPayload(activeChat, member);\r\n      toastSuccess(\"Success!\");\r\n      setShow(!show);\r\n    }\r\n\r\n    const removeMemberPayload = (member: IMember, activeChat: IChat) => {\r\n      setRemovedMember(member)\r\n      setGroupToRemoveContact(activeChat.groupId)\r\n    }\r\n\r\n    const removeMemberAndToastAndCloseModal = (member: IMember, activeChat: IChat) => {\r\n      removeMemberPayload(member, activeChat);\r\n      toastSuccess(\"Success!\");\r\n      setShow(!show);\r\n    }\r\n\r\n    return (<>\r\n    <ModalGenerics\r\n      setShow={setShow}\r\n      show={show}\r\n      title={t(\"Remove\") + \" \" + member.name + \"?\"}\r\n      children={\r\n        <div>\r\n          <>\r\n          <Button type=\"button\" color=\"primary\" onClick={\r\n            activeChat.conferenceRoomParticipants \r\n              ? \r\n            () => removeParticipantAndToastSuccessAndCloseModal(activeChat, member)\r\n                : \r\n            () => removeMemberAndToastAndCloseModal(member, activeChat)\r\n          }>{t(\"Confirm\")}</Button>\r\n          <Button type=\"button\" color=\"link\" onClick={() => \r\n            {\r\n              setShow(!show);\r\n            }\r\n          }>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          </>\r\n        </div>\r\n      }\r\n      />\r\n    <ModalGenerics\r\n      setShow={setShowModalToggleRole}\r\n      show={showModalToggleRole}\r\n      title={t(\"Turn\") +\r\n      \" \" +\r\n      member.name +\r\n      \" \" +\r\n      t(\"a member?\")}\r\n      children={\r\n        <>\r\n          <Button type=\"button\" color=\"link\">\r\n              {t(\"Cancel\")}\r\n          </Button>\r\n          {\r\n            activeChat.conferenceRoomParticipants ?\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => {\r\n                toggleMemberRole(member, activeChat)\r\n                toastSuccess(\"Success!\"); \r\n                setShow(!show);\r\n              }}>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n                :\r\n              <Button type=\"button\" color=\"primary\" \r\n              onClick={() => \r\n                {\r\n                  toggleParticipantRole(activeChat.id, member);\r\n                  toastSuccess(\"Success!\"); \r\n                  setShow(!show);    \r\n                }\r\n              }>\r\n                {t(\"Confirm\")}\r\n              </Button>\r\n          }\r\n        </>\r\n      }\r\n      />\r\n    <Card key={member.userId} className=\"p-2 mb-2\">\r\n    <Media className=\"align-items-center\">\r\n      <ReactImageFallback\r\n        src={member.profilePicture}\r\n        className=\"rounded-circle avatar-xs mr-2\"\r\n        alt=\"chatvia\"\r\n        fallbackImage={defaultAvatar}\r\n      />\r\n      <Media body>\r\n        <div className=\"text-left\">\r\n          <h5 className=\"font-size-14 mb-1\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => {\r\n                chats.forEach((cht: any) => {\r\n                  if (cht.id === member.userId) {\r\n                    openChatAction(cht);\r\n                    contacts.forEach((ctc: any) => {\r\n                      if (ctc.id === member.userId) {\r\n                        setClickedContact(ctc);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    contactsOutsideUserContacts.forEach(\r\n                      (ctcOut) => {\r\n                        if (ctcOut.id === member.userId) {\r\n                          openContact(ctcOut);\r\n                          setClickedContact(ctcOut);\r\n                        }\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                {member.name}\r\n              </Link>\r\n\r\n            {(((isAdmin || amIaModerator) && user.id !== member.userId) && (\r\n              <span\r\n                className=\"float-right ml-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  setShow(true)\r\n                }\r\n              >\r\n                <i className=\"ri-close-fill\"></i>\r\n              </span>\r\n            ))}\r\n\r\n            {member.role === \"admin\" || isThisMemberAModerator(member) ?\r\n              (\r\n              <Badge\r\n                color={activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\"}\r\n                className={activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\"}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  setShowModalToggleRole(true)\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")}\r\n              </Badge>\r\n              ) : (\r\n              <Badge\r\n                color=\"success\"\r\n                className=\"badge-soft-success float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Turn\") +\r\n                      \" \" +\r\n                      member.name +\r\n                      \" \" +\r\n                      t(\"an administrator?\"),\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-mini-popup\"\r\n                    }\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"is now an administrator!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-mini-popup\"\r\n                        }\r\n                      })\r\n                      activeChat.conferenceRoomParticipants ?\r\n                      toggleParticipantRole(activeChat.id, member)\r\n                      : \r\n                      toggleMemberRole(member, activeChat)\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                {t(\"Member\")}\r\n              </Badge>\r\n            )}\r\n\r\n          </h5>\r\n        </div>\r\n      </Media>\r\n    </Media>\r\n  </Card>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChangeGroupNameButton;\r\n"]},"metadata":{},"sourceType":"module"}