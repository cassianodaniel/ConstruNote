{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\ChatList.tsx\";\nimport React from \"react\";\nimport { Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"; //simplebar\n\nimport SimpleBar from \"simplebar-react\"; //context\n\nimport { useChat } from \"./../contexts/ChatContext\";\nimport { useContact } from \"./../contexts/ContactContext\"; //alias\n\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\nimport star from \"./../assets/images/ic-star.svg\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { useGroup } from \"../contexts/GroupContext\";\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport { useTranslation } from \"react-i18next\";\nimport ChatListDates from \"./ChatListDates\";\nimport { TextMessageTagParseNotClickable } from \"../helpers/TextMessageTagParseNotClickable\";\n\nconst ChatList = ({\n  recentChatList\n}) => {\n  const {\n    activeChat,\n    chats,\n    setChats,\n    openChat,\n    setShowChat\n  } = useChat();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    t\n  } = useTranslation();\n  const {\n    setNewFavorite\n  } = useContact();\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setShowChat(true);\n  };\n\n  return /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: \"100%\"\n    },\n    className: \"chat-message-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled chat-list chat-user-list\",\n    id: \"chat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, recentChatList.map((chat, key) => chat.favorite && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    id: \"conversation\" + key,\n    className: `${chat.isTyping ? \"typing\" : \"\"} ${chat.id === activeChat.id ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openChatAction(chat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, !chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }\n  }, chat.name.charAt(0))), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    onError: () => {\n      console.log(\"imgError\");\n      if (chat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, chat);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, t(\"typing\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 31\n    }\n  }) : null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  }) : null, chat.messages && chat.messages.length > 0 ? TextMessageTagParseNotClickable(chat.messages[chat.messages.length - 1].message) : null))), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(chat);\n    },\n    src: chat.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChatListDates, {\n    chat: chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  })), chat.unRead ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, chat.unRead), /*#__PURE__*/React.createElement(\"audio\", {\n    src: \"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\",\n    autoPlay: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })) : null)))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }), recentChatList.map((chat, key) => chat.favorite === false && /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    id: \"conversation\" + key,\n    className: `${chat.isTyping ? \"typing\" : \"\"} ${chat.id === activeChat.id ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => openChatAction(chat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, !chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, chat.name.charAt(0))), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    onError: () => {\n      console.log(\"imgError\");\n      if (chat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, chat);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }), chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }, chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, t(\"typing\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 31\n    }\n  }) : null, chat.messages && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 31\n    }\n  }) : null, chat.messages && chat.messages.length > 0 ? TextMessageTagParseNotClickable(chat.messages[chat.messages.length - 1].message) : null))), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(chat);\n    },\n    src: chat.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChatListDates, {\n    chat: chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 23\n    }\n  })), chat.unRead ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, chat.unRead), /*#__PURE__*/React.createElement(\"audio\", {\n    src: \"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\",\n    autoPlay: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  })) : null))))));\n};\n\nexport default ChatList;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/ChatList.tsx"],"names":["React","Media","Link","SimpleBar","useChat","useContact","ReactImageFallback","defaultAvatar","useGroup","onImgError","useTranslation","ChatListDates","TextMessageTagParseNotClickable","ChatList","recentChatList","activeChat","chats","setChats","openChat","setShowChat","contacts","setContacts","groups","setGroups","t","setNewFavorite","openChatAction","chat","maxHeight","map","key","favorite","isTyping","id","profilePicture","status","name","charAt","console","log","jid","includes","messages","length","isImageMessage","isFileMessage","message","goldenstar","star","position","right","top","unRead"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//simplebar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//context\r\nimport { useChat } from \"./../contexts/ChatContext\";\r\nimport { useContact } from \"./../contexts/ContactContext\";\r\n\r\n//alias\r\nimport IChat from \"../alias/IChat\";\r\n\r\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\r\nimport star from \"./../assets/images/ic-star.svg\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { useGroup } from \"../contexts/GroupContext\";\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport IndividualChat from \"./IndividualChat\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ChatListDates from \"./ChatListDates\";\r\nimport { TextMessageTagParseNotClickable } from \"../helpers/TextMessageTagParseNotClickable\";\r\nimport ReadStatus from \"../enuns/ReadStatus\";\r\nimport ChatMessageMenuOption from \"./ChatMessageMenuOption\";\r\n\r\ninterface IProps {\r\n  recentChatList: IChat[];\r\n}\r\n\r\nconst ChatList: React.FC<IProps> = ({ recentChatList }) => {\r\n  const { activeChat, chats, setChats, openChat, setShowChat } = useChat();\r\n  const { contacts, setContacts } = useContact();\r\n  const { groups, setGroups } = useGroup();\r\n  const { t } = useTranslation();\r\n  const { setNewFavorite } = useContact();\r\n\r\n  const openChatAction = (chat: IChat) => {\r\n    openChat(chat);\r\n    setShowChat(true);\r\n  };\r\n\r\n  return (\r\n    <SimpleBar style={{ maxHeight: \"100%\" }} className=\"chat-message-list\">\r\n      <ul className=\"list-unstyled chat-list chat-user-list\" id=\"chat-list\">\r\n        {recentChatList.map(\r\n          (chat, key) =>\r\n            chat.favorite && (\r\n              <li\r\n                key={key}\r\n                id={\"conversation\" + key}\r\n                className={`${chat.isTyping ? \"typing\" : \"\"} ${\r\n                  chat.id === activeChat.id ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link to=\"#\" onClick={() => openChatAction(chat)}>\r\n                  <Media>\r\n                    {!chat.profilePicture ? (\r\n                      <div\r\n                        className={\r\n                          \"chat-user-img \" +\r\n                          chat.status +\r\n                          \" align-self-center mr-3\"\r\n                        }\r\n                      >\r\n                        <div className=\"avatar-xs\">\r\n                          <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                            {chat.name.charAt(0)}\r\n                          </span>\r\n                        </div>\r\n                        {chat.status && <span className=\"user-status\"></span>}\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        className={\r\n                          \"chat-user-img \" +\r\n                          chat.status +\r\n                          \" align-self-center mr-3\"\r\n                        }\r\n                      >\r\n                        <ReactImageFallback\r\n                          src={chat.profilePicture}\r\n                          className=\"rounded-circle avatar-xs\"\r\n                          alt=\"chatvia\"\r\n                          fallbackImage={defaultAvatar}\r\n                          onError={() => {\r\n                            console.log(\"imgError\");\r\n                            if (chat.jid.includes(\"@conference.\"))\r\n                              onImgError(\r\n                                chats,\r\n                                groups,\r\n                                contacts,\r\n                                setChats,\r\n                                setGroups,\r\n                                setContacts,\r\n                                chat\r\n                              );\r\n                          }}\r\n                        />\r\n                        {chat.status && <span className=\"user-status\"></span>}\r\n                      </div>\r\n                    )}\r\n\r\n                    <Media body className=\"overflow-hidden\">\r\n                      <h5 className=\"text-truncate font-size-15 mb-1\">\r\n                        {chat.name}\r\n                      </h5>\r\n                      <p className=\"chat-user-message text-truncate mb-0\">\r\n                        {chat.isTyping ? (\r\n                          <>\r\n                            {t(\"typing\")}\r\n                            <span className=\"animate-typing\">\r\n                              <span className=\"dot ml-1\"></span>\r\n                              <span className=\"dot ml-1\"></span>\r\n                              <span className=\"dot ml-1\"></span>\r\n                            </span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            {chat.messages &&\r\n                            chat.messages.length > 0 &&\r\n                            chat.messages[chat.messages.length - 1]\r\n                              .isImageMessage === true ? (\r\n                              <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                            ) : null}\r\n                            {chat.messages &&\r\n                            chat.messages.length > 0 &&\r\n                            chat.messages[chat.messages.length - 1]\r\n                              .isFileMessage === true ? (\r\n                              <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                            ) : null}\r\n                            {chat.messages && chat.messages.length > 0\r\n                              ? TextMessageTagParseNotClickable((chat.messages[chat.messages.length - 1].message))\r\n                              : null}\r\n                          </>\r\n                        )}\r\n                      </p>\r\n                    </Media>\r\n\r\n                    <img\r\n                      alt=\"star\"\r\n                      onClick={() => {\r\n                        setNewFavorite(chat);\r\n                      }}\r\n                      src={chat.favorite ? goldenstar : star}\r\n                      style={{ position: \"relative\", right: 2, top: 2 }}\r\n                    />\r\n\r\n                    <div className=\"font-size-11\">\r\n                      <ChatListDates chat={chat}/>\r\n                    </div>\r\n                    {/* chat.messages.findIndex((message) => message.readStatus === ReadStatus.UNREAD  && */ \r\n                    /* chat.messages.find((message) => message.message.includes(`{\"userId\":\"`)) ? (<div>@</div>) : null} */}    \r\n\r\n                                \r\n                 \r\n                    {chat.unRead ? (\r\n                      <div className=\"unread-message\">\r\n                        <span className=\"badge badge-soft-danger badge-pill\">\r\n                          {chat.unRead}\r\n                        </span>\r\n                        <audio\r\n                          src=\"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\"\r\n                          autoPlay={true}\r\n                          hidden={true}\r\n                        />\r\n                      </div>\r\n                    ) : null}\r\n                  </Media>\r\n                </Link>\r\n              </li>\r\n            )\r\n        )}\r\n\r\n        <hr className=\"mx-3\" />\r\n\r\n        {recentChatList.map(\r\n          (chat, key) =>\r\n            chat.favorite === false && (\r\n              <li\r\n                key={key}\r\n                id={\"conversation\" + key}\r\n                className={`${chat.isTyping ? \"typing\" : \"\"} ${\r\n                  chat.id === activeChat.id ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link to=\"#\" onClick={() => openChatAction(chat)}>\r\n                <Media>\r\n                    {!chat.profilePicture ? (\r\n                      <div\r\n                        className={\r\n                          \"chat-user-img \" +\r\n                          chat.status +\r\n                          \" align-self-center mr-3\"\r\n                        }\r\n                      >\r\n                        <div className=\"avatar-xs\">\r\n                          <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                            {chat.name.charAt(0)}\r\n                          </span>\r\n                        </div>\r\n                        {chat.status && <span className=\"user-status\"></span>}\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        className={\r\n                          \"chat-user-img \" +\r\n                          chat.status +\r\n                          \" align-self-center mr-3\"\r\n                        }\r\n                      >\r\n                        <ReactImageFallback\r\n                          src={chat.profilePicture}\r\n                          className=\"rounded-circle avatar-xs\"\r\n                          alt=\"chatvia\"\r\n                          fallbackImage={defaultAvatar}\r\n                          onError={() => {\r\n                            console.log(\"imgError\");\r\n                            if (chat.jid.includes(\"@conference.\"))\r\n                              onImgError(\r\n                                chats,\r\n                                groups,\r\n                                contacts,\r\n                                setChats,\r\n                                setGroups,\r\n                                setContacts,\r\n                                chat\r\n                              );\r\n                          }}\r\n                        />\r\n                        {chat.status && <span className=\"user-status\"></span>}\r\n                      </div>\r\n                    )}\r\n\r\n                    <Media body className=\"overflow-hidden\">\r\n                      <h5 className=\"text-truncate font-size-15 mb-1\">\r\n                        {chat.name}\r\n                      </h5>\r\n                      <p className=\"chat-user-message text-truncate mb-0\">\r\n                        {chat.isTyping ? (\r\n                          <>\r\n                            {t(\"typing\")}\r\n                            <span className=\"animate-typing\">\r\n                              <span className=\"dot ml-1\"></span>\r\n                              <span className=\"dot ml-1\"></span>\r\n                              <span className=\"dot ml-1\"></span>\r\n                            </span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            {chat.messages &&\r\n                            chat.messages.length > 0 &&\r\n                            chat.messages[chat.messages.length - 1]\r\n                              .isImageMessage === true ? (\r\n                              <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                            ) : null}\r\n                            {chat.messages &&\r\n                            chat.messages.length > 0 &&\r\n                            chat.messages[chat.messages.length - 1]\r\n                              .isFileMessage === true ? (\r\n                              <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                            ) : null}\r\n                            {chat.messages && chat.messages.length > 0\r\n                              ? TextMessageTagParseNotClickable((chat.messages[chat.messages.length - 1].message))\r\n                              : null}\r\n                          </>\r\n                        )}\r\n                      </p>\r\n                    </Media>\r\n\r\n                    <img\r\n                      alt=\"star\"\r\n                      onClick={() => {\r\n                        setNewFavorite(chat);\r\n                      }}\r\n                      src={chat.favorite ? goldenstar : star}\r\n                      style={{ position: \"relative\", right: 2, top: 2 }}\r\n                    />\r\n\r\n                    <div className=\"font-size-11\">\r\n                      <ChatListDates chat={chat}/>\r\n                    </div>\r\n                    {/* chat.messages.findIndex((message) => message.readStatus === ReadStatus.UNREAD  && */ \r\n                    /* chat.messages.find((message) => message.message.includes(`{\"userId\":\"`)) ? (<div>@</div>) : null} */}\r\n\r\n                                        \r\n\r\n                    {chat.unRead ? (\r\n                      <div className=\"unread-message\">\r\n                        <span className=\"badge badge-soft-danger badge-pill\">\r\n                          {chat.unRead}\r\n                        </span>\r\n                        <audio\r\n                          src=\"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\"\r\n                          autoPlay={true}\r\n                          hidden={true}\r\n                        />\r\n                      </div>\r\n                    ) : null}\r\n                   \r\n                  </Media>\r\n                </Link>\r\n              </li>\r\n            )\r\n        )}\r\n      </ul>\r\n    </SimpleBar>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"]},"metadata":{},"sourceType":"module"}