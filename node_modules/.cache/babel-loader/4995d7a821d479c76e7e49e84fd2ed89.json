{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\IndividualChat.tsx\";\nimport React from 'react';\nimport ReactImageFallback from 'react-image-fallback';\nimport { Media } from 'reactstrap';\nimport ChatType from \"../enuns/ChatType\";\nimport defaultAvatar from \"../assets/images/default.png\";\nimport { useContact } from '../contexts/ContactContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport { useTranslation } from 'react-i18next';\nimport { onImgError } from \"../helpers/ImageUtils\";\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\nimport star from \"./../assets/images/ic-star.svg\";\nimport ChatListDates from './ChatListDates';\n\nconst IndividualChat = chat => {\n  const {\n    chats,\n    setChats\n  } = useChat();\n  const {\n    contacts,\n    setContacts\n  } = useContact();\n  const {\n    groups,\n    setGroups\n  } = useGroup();\n  const {\n    t\n  } = useTranslation();\n  const {\n    setNewFavorite\n  } = useContact();\n  return /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, !chat.chat.profilePicture ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded-circle bg-soft-primary text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, chat.chat.name.charAt(0))), chat.chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-img \" + chat.chat.status + \" align-self-center mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: chat.chat.profilePicture,\n    className: \"rounded-circle avatar-xs\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    onError: () => {\n      if (chat.chat.jid.includes(\"@conference.\")) onImgError(chats, groups, contacts, setChats, setGroups, setContacts, chat.chat);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), chat.chat.status && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-truncate font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, chat.chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat-user-message text-truncate mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, chat.chat.isTyping ? /*#__PURE__*/React.createElement(React.Fragment, null, t(\"typing\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, chat.chat.messages && chat.chat.messages.length > 0 && chat.chat.messages[chat.chat.messages.length - 1].isImageMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-image-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }) : null, chat.chat.messages && chat.chat.messages.length > 0 && chat.chat.messages[chat.chat.messages.length - 1].isFileMessage === true ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-file-text-fill align-middle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }) : null, chat.chat.messages && chat.chat.messages.length > 0 ? chat.chat.messages[chat.chat.messages.length - 1].message : null))), chat.chat.chatType !== ChatType.CONFERENCE && /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"star\",\n    onClick: () => {\n      setNewFavorite(chat.chat);\n    },\n    src: chat.chat.favorite ? goldenstar : star,\n    style: {\n      position: \"relative\",\n      right: 2,\n      top: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatListDates, {\n    chat: chat.chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })), chat.chat.unRead ? () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unread-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-soft-danger badge-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, chat.chat.unRead), /*#__PURE__*/React.createElement(\"audio\", {\n    src: \"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\",\n    autoPlay: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })) : null);\n};\n\nexport default IndividualChat;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/IndividualChat.tsx"],"names":["React","ReactImageFallback","Media","ChatType","defaultAvatar","useContact","useChat","useGroup","useTranslation","onImgError","ChatListDates","IndividualChat","chat","chats","setChats","contacts","setContacts","groups","setGroups","t","setNewFavorite","profilePicture","status","name","charAt","jid","includes","isTyping","messages","length","isImageMessage","isFileMessage","message","chatType","CONFERENCE","favorite","goldenstar","star","position","right","top","unRead"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactImageFallback from 'react-image-fallback';\r\nimport { Media } from 'reactstrap';\r\nimport IChat from '../alias/IChat';\r\nimport ChatType from \"../enuns/ChatType\";\r\nimport defaultAvatar from \"../assets/images/default.png\";\r\nimport { useContact } from '../contexts/ContactContext';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { onImgError } from \"../helpers/ImageUtils\";\r\nimport goldenstar from \"./../assets/images/ic-star-fill.svg\";\r\nimport star from \"./../assets/images/ic-star.svg\";\r\nimport ChatListDates from './ChatListDates';\r\n\r\ninterface IIndividualChat{\r\n    chat: IChat;\r\n}\r\n\r\nconst IndividualChat : React.FC<IIndividualChat> = (chat) => {\r\n    const { chats, setChats } = useChat();\r\n    const { contacts, setContacts } = useContact();\r\n    const { groups, setGroups } = useGroup();\r\n    const { t } = useTranslation();\r\n    const { setNewFavorite } = useContact();\r\n    return( \r\n    <Media>\r\n        {!chat.chat.profilePicture ? (\r\n            <div\r\n            className={\r\n                \"chat-user-img \" +\r\n                chat.chat.status +\r\n                \" align-self-center mr-3\"\r\n            }\r\n            >\r\n            <div className=\"avatar-xs\">\r\n                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                {chat.chat.name.charAt(0)}\r\n                </span>\r\n            </div>\r\n            {chat.chat.status && <span className=\"user-status\"></span>}\r\n            </div>\r\n        ) : (\r\n            <div\r\n            className={\r\n                \"chat-user-img \" +\r\n                chat.chat.status +\r\n                \" align-self-center mr-3\"\r\n            }\r\n            >\r\n            <ReactImageFallback\r\n                src={chat.chat.profilePicture}\r\n                className=\"rounded-circle avatar-xs\"\r\n                alt=\"chatvia\"\r\n                fallbackImage={defaultAvatar}\r\n                onError={() => {\r\n                if (chat.chat.jid.includes(\"@conference.\"))\r\n                    onImgError(\r\n                    chats,\r\n                    groups,\r\n                    contacts,\r\n                    setChats,\r\n                    setGroups,\r\n                    setContacts,\r\n                    chat.chat\r\n                    );\r\n                }}\r\n            />\r\n            {chat.chat.status && <span className=\"user-status\"></span>}\r\n            </div>\r\n        )}\r\n\r\n        <Media body className=\"overflow-hidden\">\r\n            <h5 className=\"text-truncate font-size-15 mb-1\">\r\n            {chat.chat.name}\r\n            </h5>\r\n            <p className=\"chat-user-message text-truncate mb-0\">\r\n            {chat.chat.isTyping ? (\r\n                <>\r\n                {t(\"typing\")}\r\n                <span className=\"animate-typing\">\r\n                    <span className=\"dot ml-1\"></span>\r\n                    <span className=\"dot ml-1\"></span>\r\n                    <span className=\"dot ml-1\"></span>\r\n                </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                {chat.chat.messages &&\r\n                chat.chat.messages.length > 0 &&\r\n                chat.chat.messages[chat.chat.messages.length - 1]\r\n                    .isImageMessage === true ? (\r\n                    <i className=\"ri-image-fill align-middle mr-1\"></i>\r\n                ) : null}\r\n                {chat.chat.messages &&\r\n                chat.chat.messages.length > 0 &&\r\n                chat.chat.messages[chat.chat.messages.length - 1]\r\n                    .isFileMessage === true ? (\r\n                    <i className=\"ri-file-text-fill align-middle mr-1\"></i>\r\n                ) : null}\r\n                {chat.chat.messages && chat.chat.messages.length > 0\r\n                    ? chat.chat.messages[chat.chat.messages.length - 1].message\r\n                    : null}\r\n                </>\r\n            )}\r\n            </p>\r\n        </Media>\r\n\r\n        {chat.chat.chatType !== ChatType.CONFERENCE && (\r\n            <img\r\n            alt=\"star\"\r\n            onClick={() => {\r\n                setNewFavorite(chat.chat);\r\n            }}\r\n            src={chat.chat.favorite ? goldenstar : star}\r\n            style={{ position: \"relative\", right: 2, top: 2 }}\r\n            />\r\n        )}\r\n\r\n        <div className=\"font-size-11\">  \r\n            <ChatListDates chat={chat.chat}/>\r\n        </div>\r\n        {chat.chat.unRead ? () => (\r\n            <div className=\"unread-message\">\r\n            <span className=\"badge badge-soft-danger badge-pill\">\r\n                {chat.chat.unRead}\r\n            </span>\r\n            <audio\r\n                src=\"https://m.toqueparacelular.com.br/a/download3/iPhone_Ding.mp3\"\r\n                autoPlay={true}\r\n                hidden={true}\r\n            />\r\n            </div>\r\n        ) \r\n        : null}\r\n        </Media>\r\n    );\r\n}\r\n\r\nexport default IndividualChat;"]},"metadata":{},"sourceType":"module"}