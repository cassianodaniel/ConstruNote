{"ast":null,"code":"export const getContactName = (chatMessage, contacts, groups, user) => {\n  var _groups$get, _groups$get$members$f, _contacts$get, _contacts$get2;\n\n  if (chatMessage.toDomain.includes(\"@conference.\")) return ((_groups$get = groups.get(chatMessage.to)) === null || _groups$get === void 0 ? void 0 : (_groups$get$members$f = _groups$get.members.find(member => member.userId === chatMessage.from)) === null || _groups$get$members$f === void 0 ? void 0 : _groups$get$members$f.name) || \"\";\n  return chatMessage.fromName || ((_contacts$get = contacts.get(chatMessage.from)) === null || _contacts$get === void 0 ? void 0 : _contacts$get.name) || ((_contacts$get2 = contacts.get(chatMessage.to)) === null || _contacts$get2 === void 0 ? void 0 : _contacts$get2.name) || user.name || \"\";\n};\nexport const getUserProfilePicture = (chatMessage, contacts, groups, user) => {\n  var _groups$get2, _groups$get2$members$, _contacts$get3, _contacts$get4;\n\n  if (chatMessage.toDomain.includes(\"@conference.\")) return (_groups$get2 = groups.get(chatMessage.to)) === null || _groups$get2 === void 0 ? void 0 : (_groups$get2$members$ = _groups$get2.members.find(member => member.userId === chatMessage.from)) === null || _groups$get2$members$ === void 0 ? void 0 : _groups$get2$members$.profilePicture;\n  return ((_contacts$get3 = contacts.get(chatMessage.from)) === null || _contacts$get3 === void 0 ? void 0 : _contacts$get3.profilePicture) || ((_contacts$get4 = contacts.get(chatMessage.to)) === null || _contacts$get4 === void 0 ? void 0 : _contacts$get4.profilePicture) || user.profilePicture || undefined;\n};\nexport const getFileUrlStr = (fileParams, msg) => {\n  return \"fileUrl\" in msg && fileParams.isFile ? msg.fileUrl : fileParams.isFile ? msg.message : \"\";\n};","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/services/utils/formatUtils.ts"],"names":["getContactName","chatMessage","contacts","groups","user","toDomain","includes","get","to","members","find","member","userId","from","name","fromName","getUserProfilePicture","profilePicture","undefined","getFileUrlStr","fileParams","msg","isFile","fileUrl","message"],"mappings":"AAMA,OAAO,MAAMA,cAAc,GAAG,CAC5BC,WAD4B,EAE5BC,QAF4B,EAG5BC,MAH4B,EAI5BC,IAJ4B,KAKzB;AAAA;;AACH,MAAIH,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8B,cAA9B,CAAJ,EACE,OACE,gBAAAH,MAAM,CACHI,GADH,CACON,WAAW,CAACO,EADnB,sFAEIC,OAFJ,CAEYC,IAFZ,CAEkBC,MAAD,IAAYA,MAAM,CAACC,MAAP,KAAkBX,WAAW,CAACY,IAF3D,iFAEkEC,IAFlE,KAGA,EAJF;AAMF,SACEb,WAAW,CAACc,QAAZ,sBACAb,QAAQ,CAACK,GAAT,CAAaN,WAAW,CAACY,IAAzB,CADA,kDACA,cAAgCC,IADhC,wBAEAZ,QAAQ,CAACK,GAAT,CAAaN,WAAW,CAACO,EAAzB,CAFA,mDAEA,eAA8BM,IAF9B,KAGAV,IAAI,CAACU,IAHL,IAIA,EALF;AAOD,CApBM;AAqBP,OAAO,MAAME,qBAAqB,GAAG,CACnCf,WADmC,EAEnCC,QAFmC,EAGnCC,MAHmC,EAInCC,IAJmC,KAKhC;AAAA;;AACH,MAAIH,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8B,cAA9B,CAAJ,EACE,uBAAOH,MAAM,CACVI,GADI,CACAN,WAAW,CAACO,EADZ,CAAP,0EAAO,aAEHC,OAFG,CAEKC,IAFL,CAEWC,MAAD,IAAYA,MAAM,CAACC,MAAP,KAAkBX,WAAW,CAACY,IAFpD,CAAP,0DAAO,sBAGHI,cAHJ;AAIF,SACE,mBAAAf,QAAQ,CAACK,GAAT,CAAaN,WAAW,CAACY,IAAzB,mEAAgCI,cAAhC,wBACAf,QAAQ,CAACK,GAAT,CAAaN,WAAW,CAACO,EAAzB,CADA,mDACA,eAA8BS,cAD9B,KAEAb,IAAI,CAACa,cAFL,IAGAC,SAJF;AAMD,CAjBM;AAkBP,OAAO,MAAMC,aAAa,GAAG,CAC3BC,UAD2B,EAE3BC,GAF2B,KAGxB;AACH,SAAO,aAAaA,GAAb,IAAoBD,UAAU,CAACE,MAA/B,GACFD,GAAD,CAAqBE,OADlB,GAEHH,UAAU,CAACE,MAAX,GACAD,GAAG,CAACG,OADJ,GAEA,EAJJ;AAKD,CATM","sourcesContent":["import { Message } from \"@digivox/apicommunicator/dist/types/types/types\";\r\nimport IContact from \"../../alias/IContact\";\r\nimport IGroup from \"../../alias/IGroup\";\r\nimport IUser from \"../../alias/IUser\";\r\nimport { Message as XMPPMessage, FileMessage } from \"../chat/types/types\";\r\n\r\nexport const getContactName = (\r\n  chatMessage: Message,\r\n  contacts: Map<string, IContact>,\r\n  groups: Map<string, IGroup>,\r\n  user: IUser\r\n) => {\r\n  if (chatMessage.toDomain.includes(\"@conference.\"))\r\n    return (\r\n      groups\r\n        .get(chatMessage.to)\r\n        ?.members.find((member) => member.userId === chatMessage.from)?.name ||\r\n      \"\"\r\n    );\r\n  return (\r\n    chatMessage.fromName ||\r\n    contacts.get(chatMessage.from)?.name ||\r\n    contacts.get(chatMessage.to)?.name ||\r\n    user.name ||\r\n    \"\"\r\n  );\r\n};\r\nexport const getUserProfilePicture = (\r\n  chatMessage: Message,\r\n  contacts: Map<string, IContact>,\r\n  groups: Map<string, IGroup>,\r\n  user: IUser\r\n) => {\r\n  if (chatMessage.toDomain.includes(\"@conference.\"))\r\n    return groups\r\n      .get(chatMessage.to)\r\n      ?.members.find((member) => member.userId === chatMessage.from)\r\n      ?.profilePicture;\r\n  return (\r\n    contacts.get(chatMessage.from)?.profilePicture ||\r\n    contacts.get(chatMessage.to)?.profilePicture ||\r\n    user.profilePicture ||\r\n    undefined\r\n  );\r\n};\r\nexport const getFileUrlStr = (\r\n  fileParams: any,\r\n  msg: XMPPMessage | FileMessage\r\n) => {\r\n  return \"fileUrl\" in msg && fileParams.isFile\r\n    ? (msg as FileMessage).fileUrl\r\n    : fileParams.isFile\r\n    ? msg.message\r\n    : \"\";\r\n};\r\n"]},"metadata":{},"sourceType":"module"}