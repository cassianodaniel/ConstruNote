{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\GroupMember.tsx\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Media, Badge, Button } from 'reactstrap';\nimport ReactImageFallback from \"react-image-fallback\";\nimport { Link } from \"react-router-dom\";\nimport { useContact } from '../contexts/ContactContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useGroup } from '../contexts/GroupContext';\nimport Swal from 'sweetalert2';\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\nimport { useConference } from '../contexts/ConferenceContext';\nimport ScreenType from \"../enuns/ScreenType\";\nimport { useMainBox } from \"../contexts/MainBoxContext\";\nimport ModalGenerics from './ModalGenerics';\nimport { toast } from 'react-toastify';\n\nconst ChangeGroupNameButton = ({\n  isAdmin,\n  defaultAvatar,\n  member\n}) => {\n  var _activeChat$conferenc, _activeChat$conferenc2, _activeChat$conferenc3;\n\n  const {\n    activeChat,\n    chats,\n    openChat\n  } = useChat();\n  const [show, setShow] = useState(false);\n  const {\n    setToggleMemberRole,\n    setRemovedMember,\n    setGroupToRemoveContact\n  } = useGroup();\n  const {\n    setClickedContact,\n    contacts,\n    contactsOutsideUserContacts,\n    openContact\n  } = useContact();\n  const {\n    setRemovingParticipantsPayload,\n    setAddingParticipantsPayload\n  } = useConference();\n  const {\n    setScreen\n  } = useMainBox();\n  const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState([]);\n  const {\n    user\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const moderators = (_activeChat$conferenc = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc === void 0 ? void 0 : _activeChat$conferenc.filter(participant => participant.userModerator === true && participant.type === ConferenceRoomParticipantType.MODERATOR && participant.userUuid === user.id);\n  const amIaModerator = ((_activeChat$conferenc2 = activeChat.conferenceRoomParticipants) === null || _activeChat$conferenc2 === void 0 ? void 0 : (_activeChat$conferenc3 = _activeChat$conferenc2.find(member => member.userUuid === user.id)) === null || _activeChat$conferenc3 === void 0 ? void 0 : _activeChat$conferenc3.userModerator) === true;\n\n  const isThisMemberAModerator = member => {\n    moderators === null || moderators === void 0 ? void 0 : moderators.find(moderator => moderator.userUuid === member.userId);\n  };\n\n  const openChatAction = chat => {\n    openChat(chat);\n    setScreen(ScreenType.CHAT);\n  };\n\n  const toggleMemberRole = (member, activeChat) => {\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: member.name + \" \" + t(\"is now a member!\"),\n      showConfirmButton: false,\n      timer: 1500,\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    });\n    setToggleMemberRole({\n      mbId: member.userId,\n      gpId: activeChat.groupId ? activeChat.groupId : \"\",\n      mbRole: member.role,\n      mb: member\n    });\n  };\n\n  const toggleParticipantRole = (conferenceId, participant) => {\n    arrayToPushAOnlyParticipant.push({\n      description: '',\n      email: '',\n      name: participant.name,\n      userModerator: participant.role === \"admin\" ? false : true,\n      type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\n      userUuid: participant.userId\n    });\n    setRemovingParticipantsPayload({\n      conferenceId: conferenceId,\n      participantId: participant.userId\n    });\n    setTimeout(() => {\n      setAddingParticipantsPayload({\n        conferenceId: conferenceId,\n        data: arrayToPushAOnlyParticipant\n      });\n      setArrayToPushAOnlyParticipant([]);\n    }, 2500);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalGenerics, {\n    setShow: setShow,\n    show: show,\n    title: t(\"Remove\") + \" \" + member.name + \"?\",\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        activeChat.conferenceRoomParticipants ? () => {\n          setRemovingParticipantsPayload({\n            conferenceId: activeChat.id,\n            participantId: member.userId\n          });\n          toast.success(`${member.name} + \" \" + ${t(\"has been removed!\")}`, {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          setShow(!show);\n        } : () => {\n          setRemovedMember(member);\n          setGroupToRemoveContact(activeChat.groupId);\n          toast.success(`${member.name} + \" \" + ${t(\"has been removed!\")}`, {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          setShow(!show);\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, t(\"Confirm\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      onClick: () => {\n        setShow(!show);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, t(\"Cancel\")))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    key: member.userId,\n    className: \"p-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageFallback, {\n    src: member.profilePicture,\n    className: \"rounded-circle avatar-xs mr-2\",\n    alt: \"chatvia\",\n    fallbackImage: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-14 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      chats.forEach(cht => {\n        if (cht.id === member.userId) {\n          openChatAction(cht);\n          contacts.forEach(ctc => {\n            if (ctc.id === member.userId) {\n              setClickedContact(ctc);\n            }\n          });\n        } else {\n          contactsOutsideUserContacts.forEach(ctcOut => {\n            if (ctcOut.id === member.userId) {\n              openContact(ctcOut);\n              setClickedContact(ctcOut);\n            }\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, member.name), (isAdmin && user.id !== member.userId || activeChat.conferenceRoomParticipants) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }), (isAdmin || amIaModerator) && user.id !== member.userId && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right ml-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => Swal.fire({\n      title: t(\"Remove\") + \" \" + member.name + \"?\",\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        activeChat.conferenceRoomParticipants ? Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"has been removed!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        }).then(() => {\n          setRemovingParticipantsPayload({\n            conferenceId: activeChat.id,\n            participantId: member.userId\n          });\n        }) : Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"has been removed!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n        setRemovedMember(member);\n        setGroupToRemoveContact(activeChat.groupId);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-close-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), member.role === \"admin\" || isThisMemberAModerator(member) ? /*#__PURE__*/React.createElement(Badge, {\n    color: activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\",\n    className: activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\",\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"a member?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"is now a member!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n      }\n\n      activeChat.conferenceRoomParticipants ? toggleParticipantRole(activeChat.id, member) : toggleMemberRole(member, activeChat);\n    }),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")) : /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    className: \"badge-soft-success float-right\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => (isAdmin || amIaModerator) && member.userId !== user.id && Swal.fire({\n      title: t(\"Turn\") + \" \" + member.name + \" \" + t(\"an administrator?\"),\n      text: \"\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#4e5e96\",\n      cancelButtonColor: \"#d33\",\n      cancelButtonText: t(\"No\"),\n      confirmButtonText: t(\"Yes\"),\n      customClass: {\n        popup: \"swal-mini-popup\"\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: member.name + \" \" + t(\"is now an administrator!\"),\n          showConfirmButton: false,\n          timer: 1500,\n          customClass: {\n            popup: \"swal-mini-popup\"\n          }\n        });\n        activeChat.conferenceRoomParticipants ? toggleParticipantRole(activeChat.id, member) : toggleMemberRole(member, activeChat);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, t(\"Member\"))))))));\n};\n\nexport default ChangeGroupNameButton;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/GroupMember.tsx"],"names":["React","useState","useTranslation","Card","Media","Badge","Button","ReactImageFallback","Link","useContact","useAuth","useChat","useGroup","Swal","ConferenceRoomParticipantType","useConference","ScreenType","useMainBox","ModalGenerics","toast","ChangeGroupNameButton","isAdmin","defaultAvatar","member","activeChat","chats","openChat","show","setShow","setToggleMemberRole","setRemovedMember","setGroupToRemoveContact","setClickedContact","contacts","contactsOutsideUserContacts","openContact","setRemovingParticipantsPayload","setAddingParticipantsPayload","setScreen","arrayToPushAOnlyParticipant","setArrayToPushAOnlyParticipant","user","t","moderators","conferenceRoomParticipants","filter","participant","userModerator","type","MODERATOR","userUuid","id","amIaModerator","find","isThisMemberAModerator","moderator","userId","openChatAction","chat","CHAT","toggleMemberRole","fire","position","icon","title","name","showConfirmButton","timer","customClass","popup","mbId","gpId","groupId","mbRole","role","mb","toggleParticipantRole","conferenceId","push","description","email","PARTICIPANT","participantId","setTimeout","data","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","profilePicture","forEach","cht","ctc","ctcOut","cursor","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, Media, Badge, Button } from 'reactstrap';\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContact } from '../contexts/ContactContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useChat } from '../contexts/ChatContext';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport Swal from 'sweetalert2'\r\nimport IChat from '../alias/IChat';\r\nimport IMember from '../alias/IMember';\r\nimport { ConferenceRoomParticipantType } from '../services/business/Conferences';\r\nimport { useConference } from '../contexts/ConferenceContext';\r\nimport { ConferenceRoomParticipant } from '@digivox/apicommunicator/dist/types/types/types';\r\nimport ScreenType from \"../enuns/ScreenType\";\r\nimport { useMainBox } from \"../contexts/MainBoxContext\";\r\nimport ModalGenerics from './ModalGenerics';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface IProps {\r\n  member: IMember;\r\n  defaultAvatar: any;\r\n  isAdmin: any;\r\n}\r\n\r\nconst ChangeGroupNameButton : React.FC<IProps> = ({ isAdmin, defaultAvatar, member, }) => {\r\n    const { activeChat, chats, openChat } = useChat();\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const { setToggleMemberRole, setRemovedMember, setGroupToRemoveContact } = useGroup();\r\n    const { setClickedContact, contacts, contactsOutsideUserContacts, openContact } = useContact();\r\n    const { setRemovingParticipantsPayload, setAddingParticipantsPayload } = useConference();\r\n    const { setScreen } = useMainBox();\r\n    const [arrayToPushAOnlyParticipant, setArrayToPushAOnlyParticipant] = useState<ConferenceRoomParticipant[]>([]);\r\n    const { user } = useAuth();\r\n    const { t } = useTranslation();\r\n    const moderators = activeChat\r\n    .conferenceRoomParticipants?.filter(\r\n      (participant) => \r\n          participant.userModerator === true && \r\n          participant.type === ConferenceRoomParticipantType.MODERATOR &&\r\n          participant.userUuid === user.id\r\n    );\r\n    const amIaModerator =\r\n    activeChat.conferenceRoomParticipants?.find((member) => member.userUuid === user.id)?.userModerator ===\r\n    true;\r\n\r\n    const isThisMemberAModerator = (member: IMember) => {\r\n      moderators?.find((moderator) => moderator.userUuid === member.userId)\r\n    }\r\n\r\n    const openChatAction = (chat: IChat) => {\r\n        openChat(chat);\r\n        setScreen(ScreenType.CHAT);\r\n    };\r\n\r\n    const toggleMemberRole = (member: IMember, activeChat: IChat) => {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: member.name + \" \" + t(\"is now a member!\"),\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        customClass: {\r\n          popup: \"swal-mini-popup\"\r\n        }\r\n      })\r\n      setToggleMemberRole({\r\n        mbId: member.userId,\r\n        gpId: activeChat.groupId\r\n          ? activeChat.groupId\r\n          : \"\",\r\n        mbRole: member.role,\r\n        mb: member,\r\n      });\r\n    }\r\n\r\n    const toggleParticipantRole = (conferenceId: string, participant: IMember) => {\r\n          \r\n      arrayToPushAOnlyParticipant.push(\r\n        {\r\n        description: '',\r\n            email: '',\r\n            name: participant.name,\r\n            userModerator: participant.role === \"admin\" ? false : true,\r\n            type: participant.role === \"admin\" ? ConferenceRoomParticipantType.PARTICIPANT : ConferenceRoomParticipantType.MODERATOR,\r\n            userUuid: participant.userId\r\n        } as ConferenceRoomParticipant\r\n      )\r\n      setRemovingParticipantsPayload({\r\n        conferenceId: conferenceId,\r\n        participantId: participant.userId\r\n      });\r\n      setTimeout(() => {\r\n        setAddingParticipantsPayload({\r\n          conferenceId: conferenceId,\r\n          data: arrayToPushAOnlyParticipant,\r\n        });\r\n        setArrayToPushAOnlyParticipant([]);\r\n      }, 2500)\r\n    }\r\n\r\n    return (<>\r\n    <ModalGenerics\r\n      setShow={setShow}\r\n      show={show}\r\n      title={t(\"Remove\") + \" \" + member.name + \"?\"}\r\n      children={\r\n        <div>\r\n          <>\r\n          <Button type=\"button\" color=\"primary\" onClick={() => \r\n            {\r\n              // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n              activeChat.conferenceRoomParticipants\r\n                ? \r\n              () => {\r\n                setRemovingParticipantsPayload({\r\n                  conferenceId: activeChat.id,\r\n                  participantId: member.userId,\r\n                })\r\n                toast.success(`${member.name} + \" \" + ${t(\"has been removed!\")}`, {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                });  \r\n                setShow(!show);\r\n              }\r\n              : \r\n              () => {\r\n                  setRemovedMember(member)\r\n                  setGroupToRemoveContact(activeChat.groupId)\r\n                  toast.success(`${member.name} + \" \" + ${t(\"has been removed!\")}`, {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                  });  \r\n                  setShow(!show);\r\n              }\r\n            }\r\n          }>{t(\"Confirm\")}</Button>\r\n          <Button type=\"button\" color=\"link\" onClick={() => \r\n            {\r\n              setShow(!show);\r\n            }\r\n          }>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          </>\r\n        </div>\r\n      }\r\n      />\r\n    <Card key={member.userId} className=\"p-2 mb-2\">\r\n    <Media className=\"align-items-center\">\r\n      <ReactImageFallback\r\n        src={member.profilePicture}\r\n        className=\"rounded-circle avatar-xs mr-2\"\r\n        alt=\"chatvia\"\r\n        fallbackImage={defaultAvatar}\r\n      />\r\n      <Media body>\r\n        <div className=\"text-left\">\r\n          <h5 className=\"font-size-14 mb-1\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => {\r\n                chats.forEach((cht: any) => {\r\n                  if (cht.id === member.userId) {\r\n                    openChatAction(cht);\r\n                    contacts.forEach((ctc: any) => {\r\n                      if (ctc.id === member.userId) {\r\n                        setClickedContact(ctc);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    contactsOutsideUserContacts.forEach(\r\n                      (ctcOut) => {\r\n                        if (ctcOut.id === member.userId) {\r\n                          openContact(ctcOut);\r\n                          setClickedContact(ctcOut);\r\n                        }\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                {member.name}\r\n              </Link>\r\n\r\n              {((isAdmin && user.id !== member.userId) ||\r\n                activeChat.conferenceRoomParticipants) && (\r\n                <span\r\n                  className=\"float-right ml-2\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setShow(true)}/>\r\n                )}\r\n\r\n            {(((isAdmin || amIaModerator) && user.id !== member.userId) && (\r\n              <span\r\n                className=\"float-right ml-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Remove\") + \" \" + member.name + \"?\",\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-mini-popup\"\r\n                    }\r\n                  }\r\n                  ).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      activeChat.conferenceRoomParticipants ?\r\n                      \r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"has been removed!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-mini-popup\"\r\n                        }\r\n                      }).then(() => {\r\n                        setRemovingParticipantsPayload({\r\n                          conferenceId: activeChat.id,\r\n                          participantId: member.userId\r\n                        })\r\n                      })\r\n                      \r\n                        : \r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"has been removed!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-mini-popup\"\r\n                        }\r\n                      })\r\n                      setRemovedMember(member);\r\n                      setGroupToRemoveContact(\r\n                        activeChat.groupId\r\n                      );\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"ri-close-fill\"></i>\r\n              </span>\r\n            ))}\r\n            {member.role === \"admin\" || isThisMemberAModerator(member) ?\r\n              (\r\n              <Badge\r\n                color={activeChat.conferenceRoomParticipants ? \"warning\" : \"danger\"}\r\n                className={activeChat.conferenceRoomParticipants ? \"badge-soft-warning float-right\" : \"badge-soft-danger float-right\"}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Turn\") +\r\n                      \" \" +\r\n                      member.name +\r\n                      \" \" +\r\n                      t(\"a member?\"),\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-mini-popup\"\r\n                    }\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"is now a member!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-mini-popup\"\r\n                        }\r\n                      })\r\n                    }\r\n                    activeChat.conferenceRoomParticipants ?\r\n\r\n                      toggleParticipantRole(activeChat.id, member)\r\n\r\n                    : \r\n                      toggleMemberRole(member, activeChat)\r\n                  })\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {activeChat.conferenceRoomParticipants ? t(\"Moderator\") : t(\"Admin\")}\r\n              </Badge>\r\n              ) : (\r\n              <Badge\r\n                color=\"success\"\r\n                className=\"badge-soft-success float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  (isAdmin || amIaModerator) && (member.userId !== user.id) &&\r\n                  Swal.fire({\r\n                    title:\r\n                      t(\"Turn\") +\r\n                      \" \" +\r\n                      member.name +\r\n                      \" \" +\r\n                      t(\"an administrator?\"),\r\n                    text: \"\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#4e5e96\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    cancelButtonText: t(\"No\"),\r\n                    confirmButtonText: t(\"Yes\"),\r\n                    customClass: {\r\n                      popup: \"swal-mini-popup\"\r\n                    }\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: member.name + \" \" + t(\"is now an administrator!\"),\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                        customClass: {\r\n                          popup: \"swal-mini-popup\"\r\n                        }\r\n                      })\r\n                      activeChat.conferenceRoomParticipants ?\r\n                      toggleParticipantRole(activeChat.id, member)\r\n                      : \r\n                      toggleMemberRole(member, activeChat)\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                {t(\"Member\")}\r\n              </Badge>\r\n            )}\r\n\r\n          </h5>\r\n        </div>\r\n      </Media>\r\n    </Media>\r\n  </Card>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChangeGroupNameButton;\r\n"]},"metadata":{},"sourceType":"module"}