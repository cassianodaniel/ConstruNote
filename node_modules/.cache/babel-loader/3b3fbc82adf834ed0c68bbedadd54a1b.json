{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digivox\\\\dev\\\\Digivox\\\\Refatoracao\\\\squad\\\\src\\\\components\\\\MediaTabFiles.tsx\";\nimport React, { useState } from \"react\";\nimport {\n/* \r\nDropdownMenu,\r\nDropdownItem,\r\nDropdownToggle,\r\nUncontrolledDropdown, */\nCard, Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport MediaTabLoading from \"./MediaTabLoading\";\nimport { useLoading } from \"../contexts/LoadingContext\";\n\nconst MediaTabFiles = ({\n  list\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"null\");\n  const {\n    isLoadingMedia,\n    setIsLoadingMedia\n  } = useLoading();\n\n  const toggleLightbox = currentImage => {\n    setIsOpen(!isOpen);\n    setCurrentImage(currentImage);\n  };\n\n  const init = () => {\n    setTimeout(() => setIsLoadingMedia(false), 4000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, isLoadingMedia ? /*#__PURE__*/React.createElement(MediaTabLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(Card, {\n    className: \"p-2 border mb-2 d-flex flex-row flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, list && list.map((item, index) => item.isImageMessage || item.isVideoMessage ? /*#__PURE__*/React.createElement(Media, {\n    key: index,\n    header: \"true\",\n    className: \"align-content-end bd-highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => toggleLightbox(item.thumbnail),\n    className: \"popup-img d-inline-block m-1\",\n    title: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.thumbnail,\n    alt: item.name,\n    className: \"rounded border\",\n    style: {\n      maxWidth: 140,\n      maxHeight: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline mb-0 font-size-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ct-pointer\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.thumbnail,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-download-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }\n  }))))))))) : null)), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: currentImage,\n    onCloseRequest: toggleLightbox,\n    imageTitle: \"Image File\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MediaTabFiles;","map":{"version":3,"sources":["C:/Users/Digivox/dev/Digivox/Refatoracao/squad/src/components/MediaTabFiles.tsx"],"names":["React","useState","Card","Media","Link","Lightbox","MediaTabLoading","useLoading","MediaTabFiles","list","isOpen","setIsOpen","currentImage","setCurrentImage","isLoadingMedia","setIsLoadingMedia","toggleLightbox","init","setTimeout","map","item","index","isImageMessage","isVideoMessage","thumbnail","name","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  /* \r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown, */\r\n  Card,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport IAttachedFiles from \"./../alias/IAttachedFiles\";\r\nimport MediaTabLoading from \"./MediaTabLoading\";\r\nimport { useLoading } from \"../contexts/LoadingContext\";\r\ninterface IMediaTabFiles {\r\n  list: IAttachedFiles[] | undefined;\r\n}\r\nconst MediaTabFiles: React.FC<IMediaTabFiles> = ({ list }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(\"null\");\r\n  const { isLoadingMedia, setIsLoadingMedia } = useLoading();\r\n\r\n  const toggleLightbox: any = (currentImage: any) => {\r\n    setIsOpen(!isOpen);\r\n    setCurrentImage(currentImage);\r\n  };\r\n\r\n  const init = () => {\r\n    setTimeout(() => setIsLoadingMedia(false), 4000);\r\n  };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {isLoadingMedia ? (<MediaTabLoading/>) : (\r\n      <Card className=\"p-2 border mb-2 d-flex flex-row flex-wrap\">\r\n        {list &&\r\n          list.map((item, index) =>\r\n            item.isImageMessage || item.isVideoMessage ? (\r\n              <Media\r\n                key={index}\r\n                header=\"true\"\r\n                className=\"align-content-end bd-highlight\"\r\n              >\r\n                <div className=\"ml-1\">\r\n                  <Link\r\n                    to=\"#\"\r\n                    onClick={() => toggleLightbox(item.thumbnail)}\r\n                    className=\"popup-img d-inline-block m-1\"\r\n                    title={item.name}\r\n                  >\r\n                    <img\r\n                      src={item.thumbnail}\r\n                      alt={item.name}\r\n                      className=\"rounded border\"\r\n                      style={{ maxWidth: 140, maxHeight: 140 }}\r\n                    />\r\n                  </Link>\r\n                  <Media>\r\n                    <div className=\"ml-1\">\r\n                      <ul className=\"list-inline mb-0 font-size-18\">\r\n                        <li className=\"list-inline-item\">\r\n                          <span className=\"ct-pointer\" style={{}}>\r\n                            <a\r\n                              href={item.thumbnail}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              download\r\n                            >\r\n                              <i className=\"ri-download-2-line\"></i>\r\n                            </a>\r\n                          </span>\r\n                        </li>\r\n                        {/* \r\n                      <UncontrolledDropdown className=\"list-inline-item\">\r\n                        <DropdownToggle className=\"text-muted px-1\" tag=\"a\">\r\n                          <i className=\"ri-more-fill\"></i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu left=\"true\">\r\n                          <DropdownItem>{t(\"Favorite message\")}</DropdownItem>\r\n                          <DropdownItem>{t(\"Forward message\")}</DropdownItem>\r\n                          <DropdownItem divider />\r\n                          <DropdownItem>{t(\"Delete\")}</DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                      */}\r\n                      </ul>\r\n                    </div>\r\n                  </Media>\r\n                </div>\r\n              </Media>\r\n            ) : null\r\n          )}\r\n      </Card>\r\n      )\r\n      }\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={currentImage}\r\n          onCloseRequest={toggleLightbox}\r\n          imageTitle=\"Image File\"\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MediaTabFiles;\r\n"]},"metadata":{},"sourceType":"module"}